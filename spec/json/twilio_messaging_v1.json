{
  "components": {
    "schemas": {
      "messaging.v1.service.alpha_sender": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AI[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique string that identifies the resource"
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Account that created the resource"
          },
          "service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Service that the resource is associated with"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the resource was created"
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the resource was last updated"
          },
          "alpha_sender": {
            "type": "string",
            "nullable": true,
            "description": "The Alphanumeric Sender ID string"
          },
          "capabilities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "description": "An array of values that describe whether the number can receive calls or messages"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The absolute URL of the AlphaSender resource"
          }
        }
      },
      "messaging.v1.brand_registrations": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^BN[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "A2P BrandRegistration Sid"
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Account that created the resource"
          },
          "customer_profile_bundle_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^BU[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "A2P Messaging Profile Bundle BundleSid"
          },
          "a2p_profile_bundle_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^BU[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "A2P Messaging Profile Bundle BundleSid"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the resource was created"
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the resource was last updated"
          },
          "brand_type": {
            "type": "string",
            "nullable": true,
            "description": "Type of brand. One of: \"STANDARD\", \"STARTER\"."
          },
          "status": {
            "type": "string",
            "$ref": "#/components/schemas/brand_registrations_enum_status",
            "nullable": true,
            "description": "Brand Registration status."
          },
          "tcr_id": {
            "type": "string",
            "nullable": true,
            "description": "Campaign Registry (TCR) Brand ID"
          },
          "failure_reason": {
            "type": "string",
            "nullable": true,
            "description": "A reason why brand registration has failed"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The absolute URL of the Brand Registration"
          },
          "brand_score": {
            "type": "integer",
            "nullable": true,
            "description": "Brand score"
          },
          "brand_feedback": {
            "type": "array",
            "items": {
              "type": "string",
              "$ref": "#/components/schemas/brand_registrations_enum_brand_feedback"
            },
            "nullable": true,
            "description": "Brand feedback"
          },
          "identity_status": {
            "type": "string",
            "$ref": "#/components/schemas/brand_registrations_enum_identity_status",
            "nullable": true,
            "description": "Identity Status"
          },
          "russell_3000": {
            "type": "boolean",
            "nullable": true,
            "description": "Russell 3000"
          },
          "government_entity": {
            "type": "boolean",
            "nullable": true,
            "description": "Government Entity"
          },
          "tax_exempt_status": {
            "type": "string",
            "nullable": true,
            "description": "Tax Exempt Status"
          },
          "skip_automatic_sec_vet": {
            "type": "boolean",
            "nullable": true,
            "description": "Skip Automatic Secondary Vetting"
          },
          "mock": {
            "type": "boolean",
            "nullable": true,
            "description": "A boolean that specifies whether brand should be a mock or not. If true, brand will be registered as a mock brand. Defaults to false if no value is provided."
          },
          "links": {
            "type": "object",
            "format": "uri-map",
            "nullable": true
          }
        }
      },
      "brand_registrations_enum_status": {
        "type": "string",
        "enum": [
          "PENDING",
          "APPROVED",
          "FAILED",
          "IN_REVIEW",
          "DELETED"
        ]
      },
      "brand_registrations_enum_identity_status": {
        "type": "string",
        "enum": [
          "SELF_DECLARED",
          "UNVERIFIED",
          "VERIFIED",
          "VETTED_VERIFIED"
        ]
      },
      "brand_registrations_enum_brand_feedback": {
        "type": "string",
        "enum": [
          "TAX_ID",
          "STOCK_SYMBOL",
          "NONPROFIT",
          "GOVERNMENT_ENTITY",
          "OTHERS"
        ]
      },
      "messaging.v1.brand_registrations.brand_vetting": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Account that created the vetting"
          },
          "brand_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^BN[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "A2P BrandRegistration Sid"
          },
          "brand_vetting_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^VT[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "SID for third-party vetting record"
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the resource was last updated"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the resource was created"
          },
          "vetting_id": {
            "type": "string",
            "nullable": true,
            "description": "The unique ID of the vetting"
          },
          "vetting_class": {
            "type": "string",
            "nullable": true,
            "description": "The type of vetting"
          },
          "vetting_status": {
            "type": "string",
            "nullable": true,
            "description": "Status of vetting attempt"
          },
          "vetting_provider": {
            "type": "string",
            "$ref": "#/components/schemas/brand_vetting_enum_vetting_provider",
            "nullable": true,
            "description": "Third-party provider that has conducted the vetting"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The absolute URL of the Brand Vetting"
          }
        }
      },
      "brand_vetting_enum_vetting_provider": {
        "type": "string",
        "enum": [
          "campaign-verify"
        ]
      },
      "messaging.v1.deactivation": {
        "type": "object",
        "properties": {
          "redirect_to": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "Redirect url to the list of deactivated numbers."
          }
        }
      },
      "messaging.v1.external_campaign": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^QE[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique string that identifies a US A2P Compliance resource"
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Account that created the resource"
          },
          "campaign_id": {
            "type": "string",
            "nullable": true,
            "description": "ID of the preregistered campaign."
          },
          "messaging_service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Messaging Service the resource is associated with"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the resource was created"
          }
        }
      },
      "messaging.v1.service.phone_number": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^PN[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique string that identifies the resource"
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Account that created the resource"
          },
          "service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Service that the resource is associated with"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the resource was created"
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the resource was last updated"
          },
          "phone_number": {
            "type": "string",
            "format": "phone-number",
            "nullable": true,
            "description": "The phone number in E.164 format"
          },
          "country_code": {
            "type": "string",
            "nullable": true,
            "description": "The 2-character ISO Country Code of the number"
          },
          "capabilities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "description": "An array of values that describe whether the number can receive calls or messages"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The absolute URL of the PhoneNumber resource"
          }
        }
      },
      "messaging.v1.service": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique string that identifies the resource"
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Account that created the resource"
          },
          "friendly_name": {
            "type": "string",
            "nullable": true,
            "description": "The string that you assigned to describe the resource"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the resource was created"
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the resource was last updated"
          },
          "inbound_request_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The URL we call using inbound_method when a message is received by any phone number or short code in the Service. This field will be overridden if the `use_inbound_webhook_on_number` field is enabled."
          },
          "inbound_method": {
            "type": "string",
            "format": "http-method",
            "enum": [
              "HEAD",
              "GET",
              "POST",
              "PATCH",
              "PUT",
              "DELETE"
            ],
            "nullable": true,
            "description": "The HTTP method we use to call inbound_request_url"
          },
          "fallback_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The URL that we call using fallback_method if an error occurs while retrieving or executing the TwiML from the Inbound Request URL. This field will be overridden if the `use_inbound_webhook_on_number` field is enabled."
          },
          "fallback_method": {
            "type": "string",
            "format": "http-method",
            "enum": [
              "HEAD",
              "GET",
              "POST",
              "PATCH",
              "PUT",
              "DELETE"
            ],
            "nullable": true,
            "description": "The HTTP method we use to call fallback_url"
          },
          "status_callback": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The URL we call to pass status updates about message delivery"
          },
          "sticky_sender": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether to enable Sticky Sender on the Service instance"
          },
          "mms_converter": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether to enable the MMS Converter for messages sent through the Service instance"
          },
          "smart_encoding": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether to enable Encoding for messages sent through the Service instance"
          },
          "scan_message_content": {
            "type": "string",
            "$ref": "#/components/schemas/service_enum_scan_message_content",
            "nullable": true,
            "description": "Reserved"
          },
          "fallback_to_long_code": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether to enable Fallback to Long Code for messages sent through the Service instance"
          },
          "area_code_geomatch": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether to enable Area Code Geomatch on the Service Instance"
          },
          "synchronous_validation": {
            "type": "boolean",
            "nullable": true,
            "description": "Reserved"
          },
          "validity_period": {
            "type": "integer",
            "nullable": true,
            "description": "How long, in seconds, messages sent from the Service are valid"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The absolute URL of the Service resource"
          },
          "links": {
            "type": "object",
            "format": "uri-map",
            "nullable": true,
            "description": "The absolute URLs of related resources"
          },
          "usecase": {
            "type": "string",
            "nullable": true,
            "description": "A string describing the scenario in which the Messaging Service will be used"
          },
          "us_app_to_person_registered": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether US A2P campaign is registered for this Service."
          },
          "use_inbound_webhook_on_number": {
            "type": "boolean",
            "nullable": true,
            "description": "If enabled, the webhook url configured on the phone number will be used and will override the `inbound_request_url`/`fallback_url` url called when an inbound message is received."
          }
        }
      },
      "service_enum_scan_message_content": {
        "type": "string",
        "enum": [
          "inherit",
          "enable",
          "disable"
        ]
      },
      "messaging.v1.service.short_code": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^SC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique string that identifies the resource"
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Account that created the resource"
          },
          "service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Service that the resource is associated with"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the resource was created"
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the resource was last updated"
          },
          "short_code": {
            "type": "string",
            "nullable": true,
            "description": "The E.164 format of the short code"
          },
          "country_code": {
            "type": "string",
            "nullable": true,
            "description": "The 2-character ISO Country Code of the number"
          },
          "capabilities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "description": "An array of values that describe whether the number can receive calls or messages"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The absolute URL of the ShortCode resource"
          }
        }
      },
      "messaging.v1.service.us_app_to_person": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^QE[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique string that identifies a US A2P Compliance resource"
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Account that created the resource"
          },
          "brand_registration_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^BN[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "A2P Brand Registration SID"
          },
          "messaging_service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Messaging Service the resource is associated with"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "A short description of what this SMS campaign does"
          },
          "message_samples": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "description": "Message samples"
          },
          "us_app_to_person_usecase": {
            "type": "string",
            "nullable": true,
            "description": "A2P Campaign Use Case."
          },
          "has_embedded_links": {
            "type": "boolean",
            "nullable": true,
            "description": "Indicate that this SMS campaign will send messages that contain links"
          },
          "has_embedded_phone": {
            "type": "boolean",
            "nullable": true,
            "description": "Indicates that this SMS campaign will send messages that contain phone numbers"
          },
          "campaign_status": {
            "type": "string",
            "nullable": true,
            "description": "Campaign status"
          },
          "campaign_id": {
            "type": "string",
            "nullable": true,
            "description": "The Campaign Registry (TCR) Campaign ID."
          },
          "is_externally_registered": {
            "type": "boolean",
            "nullable": true,
            "description": "Indicates whether the campaign was registered externally or not"
          },
          "rate_limits": {
            "nullable": true,
            "description": "Rate limit and/or classification set by each carrier"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the resource was created"
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the resource was last updated"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The absolute URL of the US App to Person resource"
          },
          "mock": {
            "type": "boolean",
            "nullable": true,
            "description": "A boolean that specifies whether campaign is a mock or not."
          }
        }
      },
      "messaging.v1.service.us_app_to_person_usecase": {
        "type": "object",
        "properties": {
          "us_app_to_person_usecases": {
            "type": "array",
            "items": {},
            "nullable": true,
            "description": "Human readable A2P Use Case details"
          }
        }
      },
      "messaging.v1.usecase": {
        "type": "object",
        "properties": {
          "usecases": {
            "type": "array",
            "items": {},
            "nullable": true,
            "description": "Human readable Messaging Service Use Case details"
          }
        }
      }
    },
    "securitySchemes": {
      "accountSid_authToken": {
        "type": "http",
        "scheme": "basic"
      }
    }
  },
  "info": {
    "title": "Twilio - Messaging",
    "description": "This is the public Twilio REST API.",
    "termsOfService": "https://www.twilio.com/legal/tos",
    "contact": {
      "name": "Twilio Support",
      "url": "https://support.twilio.com",
      "email": "support@twilio.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.32.0"
  },
  "openapi": "3.0.1",
  "paths": {
    "/v1/Services/{ServiceSid}/AlphaSenders": {
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "description": "A Messaging Service resource to add, fetch or remove an Alpha Sender ID from a Messaging Service.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "alpha_sender"
        ],
        "pathType": "list",
        "parent": "/Services"
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to create the resource under.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.service.alpha_sender"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateAlphaSender",
        "x-maturity": [
          "Beta"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateAlphaSenderRequest",
                "properties": {
                  "AlphaSender": {
                    "type": "string",
                    "description": "The Alphanumeric Sender ID string. Can be up to 11 characters long. Valid characters are A-Z, a-z, 0-9, space, hyphen `-`, plus `+`, underscore `_` and ampersand `&`. This value cannot contain only numbers."
                  }
                },
                "required": [
                  "AlphaSender"
                ]
              }
            }
          }
        }
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to read the resources from.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListAlphaSenderResponse",
                  "properties": {
                    "alpha_senders": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/messaging.v1.service.alpha_sender"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListAlphaSender",
        "x-maturity": [
          "Beta"
        ]
      }
    },
    "/v1/Services/{ServiceSid}/AlphaSenders/{Sid}": {
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "description": "A Messaging Service resource to add, fetch or remove an Alpha Sender ID from a Messaging Service.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "alpha_sender"
        ],
        "pathType": "instance",
        "parent": "/Services"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to fetch the resource from.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the AlphaSender resource to fetch.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.service.alpha_sender"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchAlphaSender",
        "x-maturity": [
          "Beta"
        ]
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to delete the resource from.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the AlphaSender resource to delete.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteAlphaSender",
        "x-maturity": [
          "Beta"
        ]
      }
    },
    "/v1/a2p/BrandRegistrations/{Sid}": {
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "description": "A Messaging Service resource to add and fetch Brand Registrations.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "date_created"
        ],
        "pathType": "instance"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the Brand Registration resource to fetch.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^BN[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.brand_registrations"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchBrandRegistrations",
        "x-maturity": [
          "Beta"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the Brand Registration resource to update.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^BN[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.brand_registrations"
                }
              }
            },
            "description": "Accepted"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateBrandRegistrations",
        "x-maturity": [
          "Beta"
        ]
      }
    },
    "/v1/a2p/BrandRegistrations": {
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "description": "A Messaging Service resource to add and fetch Brand Registrations.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "date_created"
        ],
        "pathType": "list"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListBrandRegistrationsResponse",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/messaging.v1.brand_registrations"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListBrandRegistrations",
        "x-maturity": [
          "Beta"
        ]
      },
      "post": {
        "description": "",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.brand_registrations"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateBrandRegistrations",
        "x-maturity": [
          "Beta"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateBrandRegistrationsRequest",
                "properties": {
                  "CustomerProfileBundleSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^BU[0-9a-fA-F]{32}$",
                    "description": "Customer Profile Bundle Sid."
                  },
                  "A2PProfileBundleSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^BU[0-9a-fA-F]{32}$",
                    "description": "A2P Messaging Profile Bundle Sid."
                  },
                  "BrandType": {
                    "type": "string",
                    "description": "Type of brand being created. One of: \"STANDARD\", \"STARTER\". STARTER is for low volume, starter use cases. STANDARD is for all other use cases."
                  },
                  "Mock": {
                    "type": "boolean",
                    "description": "A boolean that specifies whether brand should be a mock or not. If true, brand will be registered as a mock brand. Defaults to false if no value is provided."
                  },
                  "SkipAutomaticSecVet": {
                    "type": "boolean",
                    "description": "A flag to disable automatic secondary vetting for brands which it would otherwise be done."
                  }
                },
                "required": [
                  "CustomerProfileBundleSid",
                  "A2PProfileBundleSid"
                ]
              }
            }
          }
        }
      }
    },
    "/v1/a2p/BrandRegistrations/{BrandSid}/Vettings": {
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "description": "A Messaging Service resource to add and get Brand Vettings.",
      "x-twilio": {
        "defaultOutputProperties": [
          "account_sid",
          "brand_sid",
          "brand_vetting_sid",
          "date_created",
          "date_updated",
          "vetting_status",
          "vetting_class"
        ],
        "pathType": "list",
        "parent": "/a2p/BrandRegistrations",
        "className": "brand_vetting"
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "BrandSid",
            "in": "path",
            "description": "The SID of the Brand Registration resource of the vettings to create .",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^BN[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.brand_registrations.brand_vetting"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateBrandVetting",
        "x-maturity": [
          "Beta"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateBrandVettingRequest",
                "properties": {
                  "VettingProvider": {
                    "type": "string",
                    "$ref": "#/components/schemas/brand_vetting_enum_vetting_provider",
                    "description": "The third-party provider of the vettings to create ."
                  },
                  "VettingId": {
                    "type": "string",
                    "description": "The unique ID of the vetting"
                  }
                },
                "required": [
                  "VettingProvider"
                ]
              }
            }
          }
        }
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "BrandSid",
            "in": "path",
            "description": "The SID of the Brand Registration resource of the vettings to read .",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^BN[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "VettingProvider",
            "in": "query",
            "description": "The third-party provider of the vettings to read",
            "schema": {
              "type": "string",
              "$ref": "#/components/schemas/brand_vetting_enum_vetting_provider"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListBrandVettingResponse",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/messaging.v1.brand_registrations.brand_vetting"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListBrandVetting",
        "x-maturity": [
          "Beta"
        ]
      }
    },
    "/v1/a2p/BrandRegistrations/{BrandSid}/Vettings/{BrandVettingSid}": {
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "description": "A Messaging Service resource to add and get Brand Vettings.",
      "x-twilio": {
        "defaultOutputProperties": [
          "account_sid",
          "brand_sid",
          "brand_vetting_sid",
          "date_created",
          "date_updated",
          "vetting_status",
          "vetting_class"
        ],
        "pathType": "instance",
        "parent": "/a2p/BrandRegistrations",
        "className": "brand_vetting"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "BrandSid",
            "in": "path",
            "description": "The SID of the Brand Registration resource of the vettings to read .",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^BN[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "BrandVettingSid",
            "in": "path",
            "description": "The Twilio SID of the third-party vetting record.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^VT[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.brand_registrations.brand_vetting"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchBrandVetting",
        "x-maturity": [
          "Beta"
        ]
      }
    },
    "/v1/Deactivations": {
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "description": "A Deactivation resource to retrieve a list of United States phone numbers that have been deactivated by mobile carriers on a specific date.",
      "x-twilio": {
        "defaultOutputProperties": [
          "redirect_to"
        ],
        "pathType": "instance",
        "className": "deactivations"
      },
      "get": {
        "description": "Fetch a list of all United States numbers that have been deactivated on a specific date.",
        "parameters": [
          {
            "name": "Date",
            "in": "query",
            "description": "The request will return a list of all United States Phone Numbers that were deactivated on the day specified by this parameter. This date should be specified in YYYY-MM-DD format.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "307": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.deactivation"
                }
              }
            },
            "description": "Temporary Redirect"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchDeactivation",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Services/PreregisteredUsa2p": {
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "description": "Resource to associate preregistered campaign with Messaging Service.",
      "x-twilio": {
        "defaultOutputProperties": [
          "campaign_id",
          "messaging_service_sid"
        ],
        "pathType": "list",
        "className": "external_campaign"
      },
      "post": {
        "description": "",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.external_campaign"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateExternalCampaign",
        "x-maturity": [
          "Beta"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateExternalCampaignRequest",
                "properties": {
                  "CampaignId": {
                    "type": "string",
                    "description": "ID of the preregistered campaign."
                  },
                  "MessagingServiceSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^MG[0-9a-fA-F]{32}$",
                    "description": "The SID of the [Messaging Service](https://www.twilio.com/docs/messaging/services/api) that the resource is associated with."
                  }
                },
                "required": [
                  "CampaignId",
                  "MessagingServiceSid"
                ]
              }
            }
          }
        }
      }
    },
    "/v1/Services/{ServiceSid}/PhoneNumbers": {
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "description": "A Messaging Service resource to add, fetch or remove phone numbers from a Messaging Service.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "phone_number",
          "country_code"
        ],
        "pathType": "list",
        "parent": "/Services"
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to create the resource under.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.service.phone_number"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreatePhoneNumber",
        "x-maturity": [
          "Beta"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreatePhoneNumberRequest",
                "properties": {
                  "PhoneNumberSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^PN[0-9a-fA-F]{32}$",
                    "description": "The SID of the Phone Number being added to the Service."
                  }
                },
                "required": [
                  "PhoneNumberSid"
                ]
              }
            }
          }
        }
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to read the resources from.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListPhoneNumberResponse",
                  "properties": {
                    "phone_numbers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/messaging.v1.service.phone_number"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListPhoneNumber",
        "x-maturity": [
          "Beta"
        ]
      }
    },
    "/v1/Services/{ServiceSid}/PhoneNumbers/{Sid}": {
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "description": "A Messaging Service resource to add, fetch or remove phone numbers from a Messaging Service.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "phone_number",
          "country_code"
        ],
        "pathType": "instance",
        "parent": "/Services"
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to delete the resource from.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the PhoneNumber resource to delete.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeletePhoneNumber",
        "x-maturity": [
          "Beta"
        ]
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to fetch the resource from.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the PhoneNumber resource to fetch.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.service.phone_number"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchPhoneNumber",
        "x-maturity": [
          "Beta"
        ]
      }
    },
    "/v1/Services": {
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "description": "A Messaging Service resource to create, fetch, update, delete or add/remove senders from Messaging Services.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "friendly_name",
          "date_created"
        ],
        "pathType": "list"
      },
      "post": {
        "description": "",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.service"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateService",
        "x-maturity": [
          "Beta"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateServiceRequest",
                "properties": {
                  "FriendlyName": {
                    "type": "string",
                    "description": "A descriptive string that you create to describe the resource. It can be up to 64 characters long."
                  },
                  "InboundRequestUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "The URL we call using `inbound_method` when a message is received by any phone number or short code in the Service. When this property is `null`, receiving inbound messages is disabled. All messages sent to the Twilio phone number or short code will not be logged and received on the Account. If the `use_inbound_webhook_on_number` field is enabled then the webhook url defined on the phone number will override the `inbound_request_url` defined for the Messaging Service."
                  },
                  "InboundMethod": {
                    "type": "string",
                    "format": "http-method",
                    "enum": [
                      "HEAD",
                      "GET",
                      "POST",
                      "PATCH",
                      "PUT",
                      "DELETE"
                    ],
                    "description": "The HTTP method we should use to call `inbound_request_url`. Can be `GET` or `POST` and the default is `POST`."
                  },
                  "FallbackUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "The URL that we call using `fallback_method` if an error occurs while retrieving or executing the TwiML from the Inbound Request URL. If the `use_inbound_webhook_on_number` field is enabled then the webhook url defined on the phone number will override the `fallback_url` defined for the Messaging Service."
                  },
                  "FallbackMethod": {
                    "type": "string",
                    "format": "http-method",
                    "enum": [
                      "HEAD",
                      "GET",
                      "POST",
                      "PATCH",
                      "PUT",
                      "DELETE"
                    ],
                    "description": "The HTTP method we should use to call `fallback_url`. Can be: `GET` or `POST`."
                  },
                  "StatusCallback": {
                    "type": "string",
                    "format": "uri",
                    "description": "The URL we should call to [pass status updates](https://www.twilio.com/docs/sms/api/message-resource#message-status-values) about message delivery."
                  },
                  "StickySender": {
                    "type": "boolean",
                    "description": "Whether to enable [Sticky Sender](https://www.twilio.com/docs/sms/services#sticky-sender) on the Service instance."
                  },
                  "MmsConverter": {
                    "type": "boolean",
                    "description": "Whether to enable the [MMS Converter](https://www.twilio.com/docs/sms/services#mms-converter) for messages sent through the Service instance."
                  },
                  "SmartEncoding": {
                    "type": "boolean",
                    "description": "Whether to enable [Smart Encoding](https://www.twilio.com/docs/sms/services#smart-encoding) for messages sent through the Service instance."
                  },
                  "ScanMessageContent": {
                    "type": "string",
                    "$ref": "#/components/schemas/service_enum_scan_message_content",
                    "description": "Reserved."
                  },
                  "FallbackToLongCode": {
                    "type": "boolean",
                    "description": "Whether to enable [Fallback to Long Code](https://www.twilio.com/docs/sms/services#fallback-to-long-code) for messages sent through the Service instance."
                  },
                  "AreaCodeGeomatch": {
                    "type": "boolean",
                    "description": "Whether to enable [Area Code Geomatch](https://www.twilio.com/docs/sms/services#area-code-geomatch) on the Service Instance."
                  },
                  "ValidityPeriod": {
                    "type": "integer",
                    "description": "How long, in seconds, messages sent from the Service are valid. Can be an integer from `1` to `14,400`."
                  },
                  "SynchronousValidation": {
                    "type": "boolean",
                    "description": "Reserved."
                  },
                  "Usecase": {
                    "type": "string",
                    "description": "A string that describes the scenario in which the Messaging Service will be used. Examples: [notification, marketing, verification, poll ..]."
                  },
                  "UseInboundWebhookOnNumber": {
                    "type": "boolean",
                    "description": "A boolean value that indicates either the webhook url configured on the phone number will be used or `inbound_request_url`/`fallback_url` url will be called when a message is received from the phone number. If this field is enabled then the webhook url defined on the phone number will override the `inbound_request_url`/`fallback_url` defined for the Messaging Service."
                  }
                },
                "required": [
                  "FriendlyName"
                ]
              }
            }
          }
        }
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListServiceResponse",
                  "properties": {
                    "services": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/messaging.v1.service"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListService",
        "x-maturity": [
          "Beta"
        ]
      }
    },
    "/v1/Services/{Sid}": {
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "description": "A Messaging Service resource to create, fetch, update, delete or add/remove senders from Messaging Services.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "friendly_name",
          "date_created"
        ],
        "pathType": "instance"
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the Service resource to update.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.service"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateService",
        "x-maturity": [
          "Beta"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateServiceRequest",
                "properties": {
                  "FriendlyName": {
                    "type": "string",
                    "description": "A descriptive string that you create to describe the resource. It can be up to 64 characters long."
                  },
                  "InboundRequestUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "The URL we call using `inbound_method` when a message is received by any phone number or short code in the Service. When this property is `null`, receiving inbound messages is disabled. All messages sent to the Twilio phone number or short code will not be logged and received on the Account. If the `use_inbound_webhook_on_number` field is enabled then the webhook url defined on the phone number will override the `inbound_request_url` defined for the Messaging Service."
                  },
                  "InboundMethod": {
                    "type": "string",
                    "format": "http-method",
                    "enum": [
                      "HEAD",
                      "GET",
                      "POST",
                      "PATCH",
                      "PUT",
                      "DELETE"
                    ],
                    "description": "The HTTP method we should use to call `inbound_request_url`. Can be `GET` or `POST` and the default is `POST`."
                  },
                  "FallbackUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "The URL that we call using `fallback_method` if an error occurs while retrieving or executing the TwiML from the Inbound Request URL. If the `use_inbound_webhook_on_number` field is enabled then the webhook url defined on the phone number will override the `fallback_url` defined for the Messaging Service."
                  },
                  "FallbackMethod": {
                    "type": "string",
                    "format": "http-method",
                    "enum": [
                      "HEAD",
                      "GET",
                      "POST",
                      "PATCH",
                      "PUT",
                      "DELETE"
                    ],
                    "description": "The HTTP method we should use to call `fallback_url`. Can be: `GET` or `POST`."
                  },
                  "StatusCallback": {
                    "type": "string",
                    "format": "uri",
                    "description": "The URL we should call to [pass status updates](https://www.twilio.com/docs/sms/api/message-resource#message-status-values) about message delivery."
                  },
                  "StickySender": {
                    "type": "boolean",
                    "description": "Whether to enable [Sticky Sender](https://www.twilio.com/docs/sms/services#sticky-sender) on the Service instance."
                  },
                  "MmsConverter": {
                    "type": "boolean",
                    "description": "Whether to enable the [MMS Converter](https://www.twilio.com/docs/sms/services#mms-converter) for messages sent through the Service instance."
                  },
                  "SmartEncoding": {
                    "type": "boolean",
                    "description": "Whether to enable [Smart Encoding](https://www.twilio.com/docs/sms/services#smart-encoding) for messages sent through the Service instance."
                  },
                  "ScanMessageContent": {
                    "type": "string",
                    "$ref": "#/components/schemas/service_enum_scan_message_content",
                    "description": "Reserved."
                  },
                  "FallbackToLongCode": {
                    "type": "boolean",
                    "description": "Whether to enable [Fallback to Long Code](https://www.twilio.com/docs/sms/services#fallback-to-long-code) for messages sent through the Service instance."
                  },
                  "AreaCodeGeomatch": {
                    "type": "boolean",
                    "description": "Whether to enable [Area Code Geomatch](https://www.twilio.com/docs/sms/services#area-code-geomatch) on the Service Instance."
                  },
                  "ValidityPeriod": {
                    "type": "integer",
                    "description": "How long, in seconds, messages sent from the Service are valid. Can be an integer from `1` to `14,400`."
                  },
                  "SynchronousValidation": {
                    "type": "boolean",
                    "description": "Reserved."
                  },
                  "Usecase": {
                    "type": "string",
                    "description": "A string that describes the scenario in which the Messaging Service will be used. Examples: [notification, marketing, verification, poll ..]"
                  },
                  "UseInboundWebhookOnNumber": {
                    "type": "boolean",
                    "description": "A boolean value that indicates either the webhook url configured on the phone number will be used or `inbound_request_url`/`fallback_url` url will be called when a message is received from the phone number. If this field is enabled then the webhook url defined on the phone number will override the `inbound_request_url`/`fallback_url` defined for the Messaging Service."
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the Service resource to fetch.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.service"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchService",
        "x-maturity": [
          "Beta"
        ]
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the Service resource to delete.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteService",
        "x-maturity": [
          "Beta"
        ]
      }
    },
    "/v1/Services/{ServiceSid}/ShortCodes": {
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "description": "A Messaging Service resource to add, fetch or remove short code numbers from a Messaging Service.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "short_code",
          "country_code"
        ],
        "pathType": "list",
        "parent": "/Services"
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to create the resource under.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.service.short_code"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateShortCode",
        "x-maturity": [
          "Beta"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateShortCodeRequest",
                "properties": {
                  "ShortCodeSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^SC[0-9a-fA-F]{32}$",
                    "description": "The SID of the ShortCode resource being added to the Service."
                  }
                },
                "required": [
                  "ShortCodeSid"
                ]
              }
            }
          }
        }
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to read the resources from.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListShortCodeResponse",
                  "properties": {
                    "short_codes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/messaging.v1.service.short_code"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListShortCode",
        "x-maturity": [
          "Beta"
        ]
      }
    },
    "/v1/Services/{ServiceSid}/ShortCodes/{Sid}": {
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "description": "A Messaging Service resource to add, fetch or remove short code numbers from a Messaging Service.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "short_code",
          "country_code"
        ],
        "pathType": "instance",
        "parent": "/Services"
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to delete the resource from.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the ShortCode resource to delete.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteShortCode",
        "x-maturity": [
          "Beta"
        ]
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to fetch the resource from.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the ShortCode resource to fetch.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.service.short_code"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchShortCode",
        "x-maturity": [
          "Beta"
        ]
      }
    },
    "/v1/Services/{MessagingServiceSid}/Compliance/Usa2p": {
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "description": "A service for (fetch/create/delete) A2P Campaign for a Messaging Service",
      "x-twilio": {
        "defaultOutputProperties": [
          "brand_registration_sid",
          "campaign_status",
          "date_created"
        ],
        "pathType": "list",
        "parent": "/Services",
        "className": "us_app_to_person"
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "MessagingServiceSid",
            "in": "path",
            "description": "The SID of the [Messaging Service](https://www.twilio.com/docs/messaging/services/api) to create the resources from.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.service.us_app_to_person"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateUsAppToPerson",
        "x-maturity": [
          "Beta"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateUsAppToPersonRequest",
                "properties": {
                  "BrandRegistrationSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^BN[0-9a-fA-F]{32}$",
                    "description": "A2P Brand Registration SID"
                  },
                  "Description": {
                    "type": "string",
                    "description": "A short description of what this SMS campaign does."
                  },
                  "MessageSamples": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Message samples, at least 2 and up to 5 sample messages, <=1024 chars each."
                  },
                  "UsAppToPersonUsecase": {
                    "type": "string",
                    "description": "A2P Campaign Use Case. Examples: [ 2FA, EMERGENCY, MARKETING..]"
                  },
                  "HasEmbeddedLinks": {
                    "type": "boolean",
                    "description": "Indicates that this SMS campaign will send messages that contain links."
                  },
                  "HasEmbeddedPhone": {
                    "type": "boolean",
                    "description": "Indicates that this SMS campaign will send messages that contain phone numbers."
                  }
                },
                "required": [
                  "BrandRegistrationSid",
                  "Description",
                  "MessageSamples",
                  "UsAppToPersonUsecase",
                  "HasEmbeddedLinks",
                  "HasEmbeddedPhone"
                ]
              }
            }
          }
        }
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "MessagingServiceSid",
            "in": "path",
            "description": "The SID of the [Messaging Service](https://www.twilio.com/docs/messaging/services/api) to fetch the resource from.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListUsAppToPersonResponse",
                  "properties": {
                    "compliance": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/messaging.v1.service.us_app_to_person"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListUsAppToPerson",
        "x-maturity": [
          "Beta"
        ]
      }
    },
    "/v1/Services/{MessagingServiceSid}/Compliance/Usa2p/{Sid}": {
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "description": "A service for (fetch/create/delete) A2P Campaign for a Messaging Service",
      "x-twilio": {
        "defaultOutputProperties": [
          "brand_registration_sid",
          "campaign_status",
          "date_created"
        ],
        "pathType": "instance",
        "parent": "/Services",
        "className": "us_app_to_person"
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "MessagingServiceSid",
            "in": "path",
            "description": "The SID of the [Messaging Service](https://www.twilio.com/docs/messaging/services/api) to delete the resource from.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the US A2P Compliance resource to delete `QE2c6890da8086d771620e9b13fadeba0b`.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^QE[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteUsAppToPerson",
        "x-maturity": [
          "Beta"
        ]
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "MessagingServiceSid",
            "in": "path",
            "description": "The SID of the [Messaging Service](https://www.twilio.com/docs/messaging/services/api) to fetch the resource from.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the US A2P Compliance resource to fetch `QE2c6890da8086d771620e9b13fadeba0b`.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^QE[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.service.us_app_to_person"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchUsAppToPerson",
        "x-maturity": [
          "Beta"
        ]
      }
    },
    "/v1/Services/{MessagingServiceSid}/Compliance/Usa2p/Usecases": {
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "description": "Messaging Service Use Case resource. Fetch possible use cases for service. The Use Cases API returns an empty list if there is an issue with the customer's A2P brand registration. This Brand cannot register any campaign use cases. Customers are requested to contact support with their A2P brand information.",
      "x-twilio": {
        "defaultOutputProperties": [
          "us_app_to_person_usecases"
        ],
        "pathType": "list",
        "parent": "/Services",
        "className": "us_app_to_person_usecase"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "MessagingServiceSid",
            "in": "path",
            "description": "The SID of the [Messaging Service](https://www.twilio.com/docs/messaging/services/api) to fetch the resource from.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "BrandRegistrationSid",
            "in": "query",
            "description": "The unique string to identify the A2P brand.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^BN[0-9a-fA-F]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.service.us_app_to_person_usecase"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchUsAppToPersonUsecase",
        "x-maturity": [
          "Beta"
        ]
      }
    },
    "/v1/Services/Usecases": {
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "description": "Use Case resource. Fetch possible use cases for a Messaging Service.",
      "x-twilio": {
        "defaultOutputProperties": [
          "usecases"
        ],
        "pathType": "list"
      },
      "get": {
        "description": "",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.usecase"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchUsecase",
        "x-maturity": [
          "Beta"
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://messaging.twilio.com"
    }
  ],
  "x-maturity": [
    {
      "name": "GA",
      "description": "This product is Generally Available."
    },
    {
      "name": "Beta",
      "description": "PLEASE NOTE that this is a Beta product that is subject to change. Use it with caution."
    }
  ]
}