{
    "components": {
      "schemas": {
        "authorization_document_status": {
          "enum": [
            "opened",
            "signing",
            "signed",
            "canceled",
            "failed"
          ],
          "nullable": true,
          "type": "string"
        },
        "boolean": {
          "nullable": true,
          "type": "boolean"
        },
        "date_time_iso8601": {
          "format": "date-time",
          "nullable": true,
          "type": "string"
        },
        "dependent_hosted_number_order_status": {
          "enum": [
            "received",
            "pending-verification",
            "verified",
            "pending-loa",
            "carrier-processing",
            "testing",
            "completed",
            "failed",
            "action-required"
          ],
          "nullable": true,
          "type": "string"
        },
        "dependent_hosted_number_order_verification_type": {
          "enum": [
            "phone-call",
            "phone-bill"
          ],
          "nullable": true,
          "type": "string"
        },
        "hosted_number_order_status": {
          "enum": [
            "received",
            "pending-verification",
            "verified",
            "pending-loa",
            "carrier-processing",
            "testing",
            "completed",
            "failed",
            "action-required"
          ],
          "nullable": true,
          "type": "string"
        },
        "hosted_number_order_verification_type": {
          "enum": [
            "phone-call",
            "phone-bill"
          ],
          "nullable": true,
          "type": "string"
        },
        "http_method": {
          "enum": [
            "HEAD",
            "GET",
            "POST",
            "PATCH",
            "PUT",
            "DELETE"
          ],
          "nullable": true,
          "type": "string"
        },
        "integer": {
          "nullable": true,
          "type": "integer"
        },
        "model_build_status": {
          "enum": [
            "enqueued",
            "building",
            "completed",
            "failed",
            "canceled"
          ],
          "nullable": true,
          "type": "string"
        },
        "object": {
          "nullable": true,
          "type": "object"
        },
        "phone_number_capabilities": {
          "nullable": true,
          "properties": {
            "fax": {
              "type": "boolean"
            },
            "mms": {
              "type": "boolean"
            },
            "sms": {
              "type": "boolean"
            },
            "voice": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "phone_number_e164": {
          "nullable": true,
          "type": "string"
        },
        "preview.bulk_exports.export": {
          "properties": {
            "links": {
              "$ref": "#/components/schemas/uri_map"
            },
            "resource_type": {
              "$ref": "#/components/schemas/string"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.bulk_exports.export.day": {
          "properties": {
            "create_date": {
              "$ref": "#/components/schemas/string"
            },
            "day": {
              "$ref": "#/components/schemas/string"
            },
            "friendly_name": {
              "$ref": "#/components/schemas/string"
            },
            "resource_type": {
              "$ref": "#/components/schemas/string"
            },
            "size": {
              "$ref": "#/components/schemas/integer"
            }
          },
          "type": "object"
        },
        "preview.bulk_exports.export.day-instance": {
          "properties": {
            "redirect_to": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.bulk_exports.export.export_custom_job": {
          "properties": {
            "details": {
              "$ref": "#/components/schemas/object"
            },
            "email": {
              "$ref": "#/components/schemas/string"
            },
            "end_day": {
              "$ref": "#/components/schemas/string"
            },
            "friendly_name": {
              "$ref": "#/components/schemas/string"
            },
            "job_sid": {
              "$ref": "#/components/schemas/sid_JS"
            },
            "resource_type": {
              "$ref": "#/components/schemas/string"
            },
            "start_day": {
              "$ref": "#/components/schemas/string"
            },
            "webhook_method": {
              "$ref": "#/components/schemas/string"
            },
            "webhook_url": {
              "$ref": "#/components/schemas/string"
            }
          },
          "type": "object"
        },
        "preview.bulk_exports.export.job": {
          "properties": {
            "details": {
              "$ref": "#/components/schemas/object"
            },
            "email": {
              "$ref": "#/components/schemas/string"
            },
            "end_day": {
              "$ref": "#/components/schemas/string"
            },
            "friendly_name": {
              "$ref": "#/components/schemas/string"
            },
            "job_sid": {
              "$ref": "#/components/schemas/sid_JS"
            },
            "resource_type": {
              "$ref": "#/components/schemas/string"
            },
            "start_day": {
              "$ref": "#/components/schemas/string"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            },
            "webhook_method": {
              "$ref": "#/components/schemas/string"
            },
            "webhook_url": {
              "$ref": "#/components/schemas/string"
            }
          },
          "type": "object"
        },
        "preview.bulk_exports.export_configuration": {
          "properties": {
            "enabled": {
              "$ref": "#/components/schemas/boolean"
            },
            "resource_type": {
              "$ref": "#/components/schemas/string"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            },
            "webhook_method": {
              "$ref": "#/components/schemas/string"
            },
            "webhook_url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.deployed_devices.fleet": {
          "properties": {
            "account_sid": {
              "$ref": "#/components/schemas/sid_AC"
            },
            "date_created": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "date_updated": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "default_deployment_sid": {
              "$ref": "#/components/schemas/sid_DL"
            },
            "friendly_name": {
              "$ref": "#/components/schemas/string"
            },
            "links": {
              "$ref": "#/components/schemas/uri_map"
            },
            "sid": {
              "$ref": "#/components/schemas/sid_TH"
            },
            "unique_name": {
              "$ref": "#/components/schemas/string"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.deployed_devices.fleet.certificate": {
          "properties": {
            "account_sid": {
              "$ref": "#/components/schemas/sid_AC"
            },
            "date_created": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "date_updated": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "device_sid": {
              "$ref": "#/components/schemas/sid_TH"
            },
            "fleet_sid": {
              "$ref": "#/components/schemas/sid_like_FL"
            },
            "friendly_name": {
              "$ref": "#/components/schemas/string"
            },
            "sid": {
              "$ref": "#/components/schemas/sid_CY"
            },
            "thumbprint": {
              "$ref": "#/components/schemas/string"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.deployed_devices.fleet.deployment": {
          "properties": {
            "account_sid": {
              "$ref": "#/components/schemas/sid_AC"
            },
            "date_created": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "date_updated": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "fleet_sid": {
              "$ref": "#/components/schemas/sid_like_FL"
            },
            "friendly_name": {
              "$ref": "#/components/schemas/string"
            },
            "sid": {
              "$ref": "#/components/schemas/sid_DL"
            },
            "sync_service_sid": {
              "$ref": "#/components/schemas/sid_IS"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.deployed_devices.fleet.device": {
          "properties": {
            "account_sid": {
              "$ref": "#/components/schemas/sid_AC"
            },
            "date_authenticated": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "date_created": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "date_updated": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "deployment_sid": {
              "$ref": "#/components/schemas/sid_DL"
            },
            "enabled": {
              "$ref": "#/components/schemas/boolean"
            },
            "fleet_sid": {
              "$ref": "#/components/schemas/sid_like_FL"
            },
            "friendly_name": {
              "$ref": "#/components/schemas/string"
            },
            "identity": {
              "$ref": "#/components/schemas/string"
            },
            "sid": {
              "$ref": "#/components/schemas/sid_TH"
            },
            "unique_name": {
              "$ref": "#/components/schemas/string"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.deployed_devices.fleet.key": {
          "properties": {
            "account_sid": {
              "$ref": "#/components/schemas/sid_AC"
            },
            "date_created": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "date_updated": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "device_sid": {
              "$ref": "#/components/schemas/sid_TH"
            },
            "fleet_sid": {
              "$ref": "#/components/schemas/sid_like_FL"
            },
            "friendly_name": {
              "$ref": "#/components/schemas/string"
            },
            "secret": {
              "$ref": "#/components/schemas/string"
            },
            "sid": {
              "$ref": "#/components/schemas/sid_KY"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.hosted_numbers.authorization_document": {
          "properties": {
            "address_sid": {
              "$ref": "#/components/schemas/sid_AD"
            },
            "cc_emails": {
              "$ref": "#/components/schemas/string_list"
            },
            "date_created": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "date_updated": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "email": {
              "$ref": "#/components/schemas/string"
            },
            "links": {
              "$ref": "#/components/schemas/uri_map"
            },
            "sid": {
              "$ref": "#/components/schemas/sid_PX"
            },
            "status": {
              "$ref": "#/components/schemas/authorization_document_status"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.hosted_numbers.authorization_document.dependent_hosted_number_order": {
          "properties": {
            "account_sid": {
              "$ref": "#/components/schemas/sid_AC"
            },
            "address_sid": {
              "$ref": "#/components/schemas/sid_AD"
            },
            "call_delay": {
              "$ref": "#/components/schemas/integer"
            },
            "capabilities": {
              "$ref": "#/components/schemas/phone_number_capabilities"
            },
            "cc_emails": {
              "$ref": "#/components/schemas/string_list"
            },
            "date_created": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "date_updated": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "email": {
              "$ref": "#/components/schemas/string"
            },
            "extension": {
              "$ref": "#/components/schemas/string"
            },
            "failure_reason": {
              "$ref": "#/components/schemas/string"
            },
            "friendly_name": {
              "$ref": "#/components/schemas/string"
            },
            "incoming_phone_number_sid": {
              "$ref": "#/components/schemas/sid_PN"
            },
            "phone_number": {
              "$ref": "#/components/schemas/phone_number_e164"
            },
            "sid": {
              "$ref": "#/components/schemas/sid_HR"
            },
            "signing_document_sid": {
              "$ref": "#/components/schemas/sid_PX"
            },
            "status": {
              "$ref": "#/components/schemas/dependent_hosted_number_order_status"
            },
            "unique_name": {
              "$ref": "#/components/schemas/string"
            },
            "verification_attempts": {
              "$ref": "#/components/schemas/integer"
            },
            "verification_call_sids": {
              "$ref": "#/components/schemas/string_list"
            },
            "verification_code": {
              "$ref": "#/components/schemas/string"
            },
            "verification_document_sid": {
              "$ref": "#/components/schemas/sid_RI"
            },
            "verification_type": {
              "$ref": "#/components/schemas/dependent_hosted_number_order_verification_type"
            }
          },
          "type": "object"
        },
        "preview.hosted_numbers.hosted_number_order": {
          "properties": {
            "account_sid": {
              "$ref": "#/components/schemas/sid_AC"
            },
            "address_sid": {
              "$ref": "#/components/schemas/sid_AD"
            },
            "call_delay": {
              "$ref": "#/components/schemas/integer"
            },
            "capabilities": {
              "$ref": "#/components/schemas/phone_number_capabilities"
            },
            "cc_emails": {
              "$ref": "#/components/schemas/string_list"
            },
            "date_created": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "date_updated": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "email": {
              "$ref": "#/components/schemas/string"
            },
            "extension": {
              "$ref": "#/components/schemas/string"
            },
            "failure_reason": {
              "$ref": "#/components/schemas/string"
            },
            "friendly_name": {
              "$ref": "#/components/schemas/string"
            },
            "incoming_phone_number_sid": {
              "$ref": "#/components/schemas/sid_PN"
            },
            "phone_number": {
              "$ref": "#/components/schemas/phone_number_e164"
            },
            "sid": {
              "$ref": "#/components/schemas/sid_HR"
            },
            "signing_document_sid": {
              "$ref": "#/components/schemas/sid_PX"
            },
            "status": {
              "$ref": "#/components/schemas/hosted_number_order_status"
            },
            "unique_name": {
              "$ref": "#/components/schemas/string"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            },
            "verification_attempts": {
              "$ref": "#/components/schemas/integer"
            },
            "verification_call_sids": {
              "$ref": "#/components/schemas/string_list"
            },
            "verification_code": {
              "$ref": "#/components/schemas/string"
            },
            "verification_document_sid": {
              "$ref": "#/components/schemas/sid_RI"
            },
            "verification_type": {
              "$ref": "#/components/schemas/hosted_number_order_verification_type"
            }
          },
          "type": "object"
        },
        "preview.marketplace.available_add_on": {
          "properties": {
            "configuration_schema": {
              "$ref": "#/components/schemas/object"
            },
            "description": {
              "$ref": "#/components/schemas/string"
            },
            "friendly_name": {
              "$ref": "#/components/schemas/string"
            },
            "links": {
              "$ref": "#/components/schemas/uri_map"
            },
            "pricing_type": {
              "$ref": "#/components/schemas/string"
            },
            "sid": {
              "$ref": "#/components/schemas/sid_XB"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.marketplace.available_add_on.available_add_on_extension": {
          "properties": {
            "available_add_on_sid": {
              "$ref": "#/components/schemas/sid_XB"
            },
            "friendly_name": {
              "$ref": "#/components/schemas/string"
            },
            "product_name": {
              "$ref": "#/components/schemas/string"
            },
            "sid": {
              "$ref": "#/components/schemas/sid_XF"
            },
            "unique_name": {
              "$ref": "#/components/schemas/string"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.marketplace.installed_add_on": {
          "properties": {
            "account_sid": {
              "$ref": "#/components/schemas/sid_AC"
            },
            "configuration": {
              "$ref": "#/components/schemas/object"
            },
            "date_created": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "date_updated": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "description": {
              "$ref": "#/components/schemas/string"
            },
            "friendly_name": {
              "$ref": "#/components/schemas/string"
            },
            "links": {
              "$ref": "#/components/schemas/uri_map"
            },
            "sid": {
              "$ref": "#/components/schemas/sid_XE"
            },
            "unique_name": {
              "$ref": "#/components/schemas/string"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.marketplace.installed_add_on.installed_add_on_extension": {
          "properties": {
            "enabled": {
              "$ref": "#/components/schemas/boolean"
            },
            "friendly_name": {
              "$ref": "#/components/schemas/string"
            },
            "installed_add_on_sid": {
              "$ref": "#/components/schemas/sid_XE"
            },
            "product_name": {
              "$ref": "#/components/schemas/string"
            },
            "sid": {
              "$ref": "#/components/schemas/sid_XF"
            },
            "unique_name": {
              "$ref": "#/components/schemas/string"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.sync.service": {
          "properties": {
            "account_sid": {
              "$ref": "#/components/schemas/sid_AC"
            },
            "acl_enabled": {
              "$ref": "#/components/schemas/boolean"
            },
            "date_created": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "date_updated": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "friendly_name": {
              "$ref": "#/components/schemas/string"
            },
            "links": {
              "$ref": "#/components/schemas/uri_map"
            },
            "reachability_webhooks_enabled": {
              "$ref": "#/components/schemas/boolean"
            },
            "sid": {
              "$ref": "#/components/schemas/sid_IS"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            },
            "webhook_url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.sync.service.document": {
          "properties": {
            "account_sid": {
              "$ref": "#/components/schemas/sid_AC"
            },
            "created_by": {
              "$ref": "#/components/schemas/string"
            },
            "data": {
              "$ref": "#/components/schemas/object"
            },
            "date_created": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "date_updated": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "links": {
              "$ref": "#/components/schemas/uri_map"
            },
            "revision": {
              "$ref": "#/components/schemas/string"
            },
            "service_sid": {
              "$ref": "#/components/schemas/sid_IS"
            },
            "sid": {
              "$ref": "#/components/schemas/sid_ET"
            },
            "unique_name": {
              "$ref": "#/components/schemas/string"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.sync.service.document.document_permission": {
          "properties": {
            "account_sid": {
              "$ref": "#/components/schemas/sid_AC"
            },
            "document_sid": {
              "$ref": "#/components/schemas/sid_ET"
            },
            "identity": {
              "$ref": "#/components/schemas/string"
            },
            "manage": {
              "$ref": "#/components/schemas/boolean"
            },
            "read": {
              "$ref": "#/components/schemas/boolean"
            },
            "service_sid": {
              "$ref": "#/components/schemas/sid_IS"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            },
            "write": {
              "$ref": "#/components/schemas/boolean"
            }
          },
          "type": "object"
        },
        "preview.sync.service.sync_list": {
          "properties": {
            "account_sid": {
              "$ref": "#/components/schemas/sid_AC"
            },
            "created_by": {
              "$ref": "#/components/schemas/string"
            },
            "date_created": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "date_updated": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "links": {
              "$ref": "#/components/schemas/uri_map"
            },
            "revision": {
              "$ref": "#/components/schemas/string"
            },
            "service_sid": {
              "$ref": "#/components/schemas/sid_IS"
            },
            "sid": {
              "$ref": "#/components/schemas/sid_ES"
            },
            "unique_name": {
              "$ref": "#/components/schemas/string"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.sync.service.sync_list.sync_list_item": {
          "properties": {
            "account_sid": {
              "$ref": "#/components/schemas/sid_AC"
            },
            "created_by": {
              "$ref": "#/components/schemas/string"
            },
            "data": {
              "$ref": "#/components/schemas/object"
            },
            "date_created": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "date_updated": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "index": {
              "$ref": "#/components/schemas/integer"
            },
            "list_sid": {
              "$ref": "#/components/schemas/sid_ES"
            },
            "revision": {
              "$ref": "#/components/schemas/string"
            },
            "service_sid": {
              "$ref": "#/components/schemas/sid_IS"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.sync.service.sync_list.sync_list_permission": {
          "properties": {
            "account_sid": {
              "$ref": "#/components/schemas/sid_AC"
            },
            "identity": {
              "$ref": "#/components/schemas/string"
            },
            "list_sid": {
              "$ref": "#/components/schemas/sid_ES"
            },
            "manage": {
              "$ref": "#/components/schemas/boolean"
            },
            "read": {
              "$ref": "#/components/schemas/boolean"
            },
            "service_sid": {
              "$ref": "#/components/schemas/sid_IS"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            },
            "write": {
              "$ref": "#/components/schemas/boolean"
            }
          },
          "type": "object"
        },
        "preview.sync.service.sync_map": {
          "properties": {
            "account_sid": {
              "$ref": "#/components/schemas/sid_AC"
            },
            "created_by": {
              "$ref": "#/components/schemas/string"
            },
            "date_created": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "date_updated": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "links": {
              "$ref": "#/components/schemas/uri_map"
            },
            "revision": {
              "$ref": "#/components/schemas/string"
            },
            "service_sid": {
              "$ref": "#/components/schemas/sid_IS"
            },
            "sid": {
              "$ref": "#/components/schemas/sid_MP"
            },
            "unique_name": {
              "$ref": "#/components/schemas/string"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.sync.service.sync_map.sync_map_item": {
          "properties": {
            "account_sid": {
              "$ref": "#/components/schemas/sid_AC"
            },
            "created_by": {
              "$ref": "#/components/schemas/string"
            },
            "data": {
              "$ref": "#/components/schemas/object"
            },
            "date_created": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "date_updated": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "key": {
              "$ref": "#/components/schemas/string"
            },
            "map_sid": {
              "$ref": "#/components/schemas/sid_MP"
            },
            "revision": {
              "$ref": "#/components/schemas/string"
            },
            "service_sid": {
              "$ref": "#/components/schemas/sid_IS"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.sync.service.sync_map.sync_map_permission": {
          "properties": {
            "account_sid": {
              "$ref": "#/components/schemas/sid_AC"
            },
            "identity": {
              "$ref": "#/components/schemas/string"
            },
            "manage": {
              "$ref": "#/components/schemas/boolean"
            },
            "map_sid": {
              "$ref": "#/components/schemas/sid_MP"
            },
            "read": {
              "$ref": "#/components/schemas/boolean"
            },
            "service_sid": {
              "$ref": "#/components/schemas/sid_IS"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            },
            "write": {
              "$ref": "#/components/schemas/boolean"
            }
          },
          "type": "object"
        },
        "preview.trusted_comms.branded_channel": {
          "properties": {
            "account_sid": {
              "$ref": "#/components/schemas/sid_AC"
            },
            "brand_sid": {
              "$ref": "#/components/schemas/sid_BZ"
            },
            "business_sid": {
              "$ref": "#/components/schemas/sid_BX"
            },
            "links": {
              "$ref": "#/components/schemas/uri_map"
            },
            "sid": {
              "$ref": "#/components/schemas/sid_BW"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.trusted_comms.branded_channel.channel": {
          "properties": {
            "account_sid": {
              "$ref": "#/components/schemas/sid_AC"
            },
            "brand_sid": {
              "$ref": "#/components/schemas/sid_BZ"
            },
            "branded_channel_sid": {
              "$ref": "#/components/schemas/sid_BW"
            },
            "business_sid": {
              "$ref": "#/components/schemas/sid_BX"
            },
            "phone_number": {
              "$ref": "#/components/schemas/string"
            },
            "phone_number_sid": {
              "$ref": "#/components/schemas/sid_PN"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.trusted_comms.brands_information": {
          "properties": {
            "file_link": {
              "$ref": "#/components/schemas/url"
            },
            "file_link_ttl_in_seconds": {
              "$ref": "#/components/schemas/string"
            },
            "update_time": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.trusted_comms.cps": {
          "properties": {
            "cps_url": {
              "$ref": "#/components/schemas/url"
            },
            "phone_number": {
              "$ref": "#/components/schemas/string"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.trusted_comms.current_call": {
          "properties": {
            "bg_color": {
              "$ref": "#/components/schemas/string"
            },
            "caller": {
              "$ref": "#/components/schemas/string"
            },
            "created_at": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "font_color": {
              "$ref": "#/components/schemas/string"
            },
            "from": {
              "$ref": "#/components/schemas/string"
            },
            "logo": {
              "$ref": "#/components/schemas/string"
            },
            "manager": {
              "$ref": "#/components/schemas/string"
            },
            "reason": {
              "$ref": "#/components/schemas/string"
            },
            "shield_img": {
              "$ref": "#/components/schemas/string"
            },
            "sid": {
              "$ref": "#/components/schemas/sid_CQ"
            },
            "status": {
              "$ref": "#/components/schemas/string"
            },
            "to": {
              "$ref": "#/components/schemas/string"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            },
            "use_case": {
              "$ref": "#/components/schemas/string"
            }
          },
          "type": "object"
        },
        "preview.understand.assistant": {
          "properties": {
            "account_sid": {
              "$ref": "#/components/schemas/sid_AC"
            },
            "callback_events": {
              "$ref": "#/components/schemas/string"
            },
            "callback_url": {
              "$ref": "#/components/schemas/url"
            },
            "date_created": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "date_updated": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "friendly_name": {
              "$ref": "#/components/schemas/string"
            },
            "latest_model_build_sid": {
              "$ref": "#/components/schemas/sid_UG"
            },
            "links": {
              "$ref": "#/components/schemas/uri_map"
            },
            "log_queries": {
              "$ref": "#/components/schemas/boolean"
            },
            "sid": {
              "$ref": "#/components/schemas/sid_UA"
            },
            "unique_name": {
              "$ref": "#/components/schemas/string"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.understand.assistant.assistant_fallback_actions": {
          "properties": {
            "account_sid": {
              "$ref": "#/components/schemas/sid_AC"
            },
            "assistant_sid": {
              "$ref": "#/components/schemas/sid_UA"
            },
            "data": {
              "$ref": "#/components/schemas/object"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.understand.assistant.assistant_initiation_actions": {
          "properties": {
            "account_sid": {
              "$ref": "#/components/schemas/sid_AC"
            },
            "assistant_sid": {
              "$ref": "#/components/schemas/sid_UA"
            },
            "data": {
              "$ref": "#/components/schemas/object"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.understand.assistant.dialogue": {
          "properties": {
            "account_sid": {
              "$ref": "#/components/schemas/sid_AC"
            },
            "assistant_sid": {
              "$ref": "#/components/schemas/sid_UA"
            },
            "data": {
              "$ref": "#/components/schemas/object"
            },
            "sid": {
              "$ref": "#/components/schemas/sid_UK"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.understand.assistant.field_type": {
          "properties": {
            "account_sid": {
              "$ref": "#/components/schemas/sid_AC"
            },
            "assistant_sid": {
              "$ref": "#/components/schemas/sid_UA"
            },
            "date_created": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "date_updated": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "friendly_name": {
              "$ref": "#/components/schemas/string"
            },
            "links": {
              "$ref": "#/components/schemas/uri_map"
            },
            "sid": {
              "$ref": "#/components/schemas/sid_UB"
            },
            "unique_name": {
              "$ref": "#/components/schemas/string"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.understand.assistant.field_type.field_value": {
          "properties": {
            "account_sid": {
              "$ref": "#/components/schemas/sid_AC"
            },
            "assistant_sid": {
              "$ref": "#/components/schemas/sid_UA"
            },
            "date_created": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "date_updated": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "field_type_sid": {
              "$ref": "#/components/schemas/sid_UB"
            },
            "language": {
              "$ref": "#/components/schemas/string"
            },
            "sid": {
              "$ref": "#/components/schemas/sid_UC"
            },
            "synonym_of": {
              "$ref": "#/components/schemas/sid_UC"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            },
            "value": {
              "$ref": "#/components/schemas/string"
            }
          },
          "type": "object"
        },
        "preview.understand.assistant.model_build": {
          "properties": {
            "account_sid": {
              "$ref": "#/components/schemas/sid_AC"
            },
            "assistant_sid": {
              "$ref": "#/components/schemas/sid_UA"
            },
            "build_duration": {
              "$ref": "#/components/schemas/integer"
            },
            "date_created": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "date_updated": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "error_code": {
              "$ref": "#/components/schemas/integer"
            },
            "sid": {
              "$ref": "#/components/schemas/sid_UG"
            },
            "status": {
              "$ref": "#/components/schemas/model_build_status"
            },
            "unique_name": {
              "$ref": "#/components/schemas/string"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.understand.assistant.query": {
          "properties": {
            "account_sid": {
              "$ref": "#/components/schemas/sid_AC"
            },
            "assistant_sid": {
              "$ref": "#/components/schemas/sid_UA"
            },
            "date_created": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "date_updated": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "language": {
              "$ref": "#/components/schemas/string"
            },
            "model_build_sid": {
              "$ref": "#/components/schemas/sid_UG"
            },
            "query": {
              "$ref": "#/components/schemas/string"
            },
            "results": {
              "$ref": "#/components/schemas/object"
            },
            "sample_sid": {
              "$ref": "#/components/schemas/sid_UF"
            },
            "sid": {
              "$ref": "#/components/schemas/sid_UH"
            },
            "source_channel": {
              "$ref": "#/components/schemas/string"
            },
            "status": {
              "$ref": "#/components/schemas/string"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.understand.assistant.style_sheet": {
          "properties": {
            "account_sid": {
              "$ref": "#/components/schemas/sid_AC"
            },
            "assistant_sid": {
              "$ref": "#/components/schemas/sid_UA"
            },
            "data": {
              "$ref": "#/components/schemas/object"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.understand.assistant.task": {
          "properties": {
            "account_sid": {
              "$ref": "#/components/schemas/sid_AC"
            },
            "actions_url": {
              "$ref": "#/components/schemas/url"
            },
            "assistant_sid": {
              "$ref": "#/components/schemas/sid_UA"
            },
            "date_created": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "date_updated": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "friendly_name": {
              "$ref": "#/components/schemas/string"
            },
            "links": {
              "$ref": "#/components/schemas/uri_map"
            },
            "sid": {
              "$ref": "#/components/schemas/sid_UD"
            },
            "unique_name": {
              "$ref": "#/components/schemas/string"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.understand.assistant.task.field": {
          "properties": {
            "account_sid": {
              "$ref": "#/components/schemas/sid_AC"
            },
            "assistant_sid": {
              "$ref": "#/components/schemas/sid_UA"
            },
            "date_created": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "date_updated": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "field_type": {
              "$ref": "#/components/schemas/string"
            },
            "sid": {
              "$ref": "#/components/schemas/sid_UE"
            },
            "task_sid": {
              "$ref": "#/components/schemas/sid_UD"
            },
            "unique_name": {
              "$ref": "#/components/schemas/string"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.understand.assistant.task.sample": {
          "properties": {
            "account_sid": {
              "$ref": "#/components/schemas/sid_AC"
            },
            "assistant_sid": {
              "$ref": "#/components/schemas/sid_UA"
            },
            "date_created": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "date_updated": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "language": {
              "$ref": "#/components/schemas/string"
            },
            "sid": {
              "$ref": "#/components/schemas/sid_UF"
            },
            "source_channel": {
              "$ref": "#/components/schemas/string"
            },
            "tagged_text": {
              "$ref": "#/components/schemas/string"
            },
            "task_sid": {
              "$ref": "#/components/schemas/sid_UD"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.understand.assistant.task.task_actions": {
          "properties": {
            "account_sid": {
              "$ref": "#/components/schemas/sid_AC"
            },
            "assistant_sid": {
              "$ref": "#/components/schemas/sid_UA"
            },
            "data": {
              "$ref": "#/components/schemas/object"
            },
            "task_sid": {
              "$ref": "#/components/schemas/sid_UD"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.understand.assistant.task.task_statistics": {
          "properties": {
            "account_sid": {
              "$ref": "#/components/schemas/sid_AC"
            },
            "assistant_sid": {
              "$ref": "#/components/schemas/sid_UA"
            },
            "fields_count": {
              "$ref": "#/components/schemas/integer"
            },
            "samples_count": {
              "$ref": "#/components/schemas/integer"
            },
            "task_sid": {
              "$ref": "#/components/schemas/sid_UD"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.wireless.command": {
          "properties": {
            "account_sid": {
              "$ref": "#/components/schemas/sid_AC"
            },
            "command": {
              "$ref": "#/components/schemas/string"
            },
            "command_mode": {
              "$ref": "#/components/schemas/string"
            },
            "date_created": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "date_updated": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "device_sid": {
              "$ref": "#/components/schemas/sid_DE"
            },
            "direction": {
              "$ref": "#/components/schemas/string"
            },
            "sid": {
              "$ref": "#/components/schemas/sid_DC"
            },
            "sim_sid": {
              "$ref": "#/components/schemas/sid_DE"
            },
            "status": {
              "$ref": "#/components/schemas/string"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.wireless.rate_plan": {
          "properties": {
            "account_sid": {
              "$ref": "#/components/schemas/sid_AC"
            },
            "data_enabled": {
              "$ref": "#/components/schemas/boolean"
            },
            "data_limit": {
              "$ref": "#/components/schemas/integer"
            },
            "data_metering": {
              "$ref": "#/components/schemas/string"
            },
            "date_created": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "date_updated": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "friendly_name": {
              "$ref": "#/components/schemas/string"
            },
            "international_roaming": {
              "$ref": "#/components/schemas/string_list"
            },
            "messaging_enabled": {
              "$ref": "#/components/schemas/boolean"
            },
            "national_roaming_enabled": {
              "$ref": "#/components/schemas/boolean"
            },
            "sid": {
              "$ref": "#/components/schemas/sid_WP"
            },
            "unique_name": {
              "$ref": "#/components/schemas/string"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            },
            "voice_enabled": {
              "$ref": "#/components/schemas/boolean"
            }
          },
          "type": "object"
        },
        "preview.wireless.sim": {
          "properties": {
            "account_sid": {
              "$ref": "#/components/schemas/sid_AC"
            },
            "commands_callback_method": {
              "$ref": "#/components/schemas/string"
            },
            "commands_callback_url": {
              "$ref": "#/components/schemas/url"
            },
            "date_created": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "date_updated": {
              "$ref": "#/components/schemas/date_time_iso8601"
            },
            "e_id": {
              "$ref": "#/components/schemas/string"
            },
            "friendly_name": {
              "$ref": "#/components/schemas/string"
            },
            "iccid": {
              "$ref": "#/components/schemas/string"
            },
            "links": {
              "$ref": "#/components/schemas/uri_map"
            },
            "rate_plan_sid": {
              "$ref": "#/components/schemas/sid_WP"
            },
            "sid": {
              "$ref": "#/components/schemas/sid_DE"
            },
            "sms_fallback_method": {
              "$ref": "#/components/schemas/http_method"
            },
            "sms_fallback_url": {
              "$ref": "#/components/schemas/url"
            },
            "sms_method": {
              "$ref": "#/components/schemas/http_method"
            },
            "sms_url": {
              "$ref": "#/components/schemas/url"
            },
            "status": {
              "$ref": "#/components/schemas/string"
            },
            "unique_name": {
              "$ref": "#/components/schemas/string"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            },
            "voice_fallback_method": {
              "$ref": "#/components/schemas/http_method"
            },
            "voice_fallback_url": {
              "$ref": "#/components/schemas/url"
            },
            "voice_method": {
              "$ref": "#/components/schemas/http_method"
            },
            "voice_url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "preview.wireless.sim.usage": {
          "properties": {
            "account_sid": {
              "$ref": "#/components/schemas/sid_AC"
            },
            "commands_costs": {
              "$ref": "#/components/schemas/object"
            },
            "commands_usage": {
              "$ref": "#/components/schemas/object"
            },
            "data_costs": {
              "$ref": "#/components/schemas/object"
            },
            "data_usage": {
              "$ref": "#/components/schemas/object"
            },
            "period": {
              "$ref": "#/components/schemas/object"
            },
            "sim_sid": {
              "$ref": "#/components/schemas/sid_DE"
            },
            "sim_unique_name": {
              "$ref": "#/components/schemas/string"
            },
            "url": {
              "$ref": "#/components/schemas/url"
            }
          },
          "type": "object"
        },
        "sid_AC": {
          "maxLength": 34,
          "minLength": 34,
          "nullable": true,
          "pattern": "^AC[0-9a-fA-F]{32}$",
          "type": "string"
        },
        "sid_AD": {
          "maxLength": 34,
          "minLength": 34,
          "nullable": true,
          "pattern": "^AD[0-9a-fA-F]{32}$",
          "type": "string"
        },
        "sid_BW": {
          "maxLength": 34,
          "minLength": 34,
          "nullable": true,
          "pattern": "^BW[0-9a-fA-F]{32}$",
          "type": "string"
        },
        "sid_BX": {
          "maxLength": 34,
          "minLength": 34,
          "nullable": true,
          "pattern": "^BX[0-9a-fA-F]{32}$",
          "type": "string"
        },
        "sid_BZ": {
          "maxLength": 34,
          "minLength": 34,
          "nullable": true,
          "pattern": "^BZ[0-9a-fA-F]{32}$",
          "type": "string"
        },
        "sid_CQ": {
          "maxLength": 34,
          "minLength": 34,
          "nullable": true,
          "pattern": "^CQ[0-9a-fA-F]{32}$",
          "type": "string"
        },
        "sid_CY": {
          "maxLength": 34,
          "minLength": 34,
          "nullable": true,
          "pattern": "^CY[0-9a-fA-F]{32}$",
          "type": "string"
        },
        "sid_DC": {
          "maxLength": 34,
          "minLength": 34,
          "nullable": true,
          "pattern": "^DC[0-9a-fA-F]{32}$",
          "type": "string"
        },
        "sid_DE": {
          "maxLength": 34,
          "minLength": 34,
          "nullable": true,
          "pattern": "^DE[0-9a-fA-F]{32}$",
          "type": "string"
        },
        "sid_DL": {
          "maxLength": 34,
          "minLength": 34,
          "nullable": true,
          "pattern": "^DL[0-9a-fA-F]{32}$",
          "type": "string"
        },
        "sid_ES": {
          "maxLength": 34,
          "minLength": 34,
          "nullable": true,
          "pattern": "^ES[0-9a-fA-F]{32}$",
          "type": "string"
        },
        "sid_ET": {
          "maxLength": 34,
          "minLength": 34,
          "nullable": true,
          "pattern": "^ET[0-9a-fA-F]{32}$",
          "type": "string"
        },
        "sid_HR": {
          "maxLength": 34,
          "minLength": 34,
          "nullable": true,
          "pattern": "^HR[0-9a-fA-F]{32}$",
          "type": "string"
        },
        "sid_IS": {
          "maxLength": 34,
          "minLength": 34,
          "nullable": true,
          "pattern": "^IS[0-9a-fA-F]{32}$",
          "type": "string"
        },
        "sid_JS": {
          "maxLength": 34,
          "minLength": 34,
          "nullable": true,
          "pattern": "^JS[0-9a-fA-F]{32}$",
          "type": "string"
        },
        "sid_KY": {
          "maxLength": 34,
          "minLength": 34,
          "nullable": true,
          "pattern": "^KY[0-9a-fA-F]{32}$",
          "type": "string"
        },
        "sid_MP": {
          "maxLength": 34,
          "minLength": 34,
          "nullable": true,
          "pattern": "^MP[0-9a-fA-F]{32}$",
          "type": "string"
        },
        "sid_PN": {
          "maxLength": 34,
          "minLength": 34,
          "nullable": true,
          "pattern": "^PN[0-9a-fA-F]{32}$",
          "type": "string"
        },
        "sid_PX": {
          "maxLength": 34,
          "minLength": 34,
          "nullable": true,
          "pattern": "^PX[0-9a-fA-F]{32}$",
          "type": "string"
        },
        "sid_RI": {
          "maxLength": 34,
          "minLength": 34,
          "nullable": true,
          "pattern": "^RI[0-9a-fA-F]{32}$",
          "type": "string"
        },
        "sid_TH": {
          "maxLength": 34,
          "minLength": 34,
          "nullable": true,
          "pattern": "^TH[0-9a-fA-F]{32}$",
          "type": "string"
        },
        "sid_UA": {
          "maxLength": 34,
          "minLength": 34,
          "nullable": true,
          "pattern": "^UA[0-9a-fA-F]{32}$",
          "type": "string"
        },
        "sid_UB": {
          "maxLength": 34,
          "minLength": 34,
          "nullable": true,
          "pattern": "^UB[0-9a-fA-F]{32}$",
          "type": "string"
        },
        "sid_UC": {
          "maxLength": 34,
          "minLength": 34,
          "nullable": true,
          "pattern": "^UC[0-9a-fA-F]{32}$",
          "type": "string"
        },
        "sid_UD": {
          "maxLength": 34,
          "minLength": 34,
          "nullable": true,
          "pattern": "^UD[0-9a-fA-F]{32}$",
          "type": "string"
        },
        "sid_UE": {
          "maxLength": 34,
          "minLength": 34,
          "nullable": true,
          "pattern": "^UE[0-9a-fA-F]{32}$",
          "type": "string"
        },
        "sid_UF": {
          "maxLength": 34,
          "minLength": 34,
          "nullable": true,
          "pattern": "^UF[0-9a-fA-F]{32}$",
          "type": "string"
        },
        "sid_UG": {
          "maxLength": 34,
          "minLength": 34,
          "nullable": true,
          "pattern": "^UG[0-9a-fA-F]{32}$",
          "type": "string"
        },
        "sid_UH": {
          "maxLength": 34,
          "minLength": 34,
          "nullable": true,
          "pattern": "^UH[0-9a-fA-F]{32}$",
          "type": "string"
        },
        "sid_UK": {
          "maxLength": 34,
          "minLength": 34,
          "nullable": true,
          "pattern": "^UK[0-9a-fA-F]{32}$",
          "type": "string"
        },
        "sid_WP": {
          "maxLength": 34,
          "minLength": 34,
          "nullable": true,
          "pattern": "^WP[0-9a-fA-F]{32}$",
          "type": "string"
        },
        "sid_XB": {
          "maxLength": 34,
          "minLength": 34,
          "nullable": true,
          "pattern": "^XB[0-9a-fA-F]{32}$",
          "type": "string"
        },
        "sid_XE": {
          "maxLength": 34,
          "minLength": 34,
          "nullable": true,
          "pattern": "^XE[0-9a-fA-F]{32}$",
          "type": "string"
        },
        "sid_XF": {
          "maxLength": 34,
          "minLength": 34,
          "nullable": true,
          "pattern": "^XF[0-9a-fA-F]{32}$",
          "type": "string"
        },
        "sid_like_FL": {
          "nullable": true,
          "type": "string"
        },
        "string": {
          "nullable": true,
          "type": "string"
        },
        "string_list": {
          "items": {
            "type": "string"
          },
          "nullable": true,
          "type": "array"
        },
        "uri_map": {
          "nullable": true,
          "type": "object"
        },
        "url": {
          "format": "uri",
          "nullable": true,
          "type": "string"
        }
      },
      "securitySchemes": {
        "accountSid_authToken": {
          "scheme": "basic",
          "type": "http"
        }
      }
    },
    "info": {
      "contact": {
        "email": "support@twilio.com",
        "name": "Twilio Support",
        "url": "https://support.twilio.com"
      },
      "description": "This is the public Twilio REST API.",
      "license": {
        "name": "Apache 2.0",
        "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
      },
      "termsOfService": "https://www.twilio.com/legal/tos",
      "title": "Twilio - Preview",
      "version": "1.10.0"
    },
    "openapi": "3.0.1",
    "paths": {
      "/BulkExports/Exports/Jobs/{JobSid}": {
        "delete": {
          "description": "",
          "operationId": "DeleteJob",
          "parameters": [
            {
              "description": "The unique string that that we created to identify the Bulk Export job",
              "in": "path",
              "name": "JobSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^JS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "The resource was deleted successfully."
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "FetchJob",
          "parameters": [
            {
              "description": "The unique string that that we created to identify the Bulk Export job",
              "in": "path",
              "name": "JobSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^JS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.bulk_exports.export.job"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/BulkExports/Exports/{ResourceType}": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Fetch a specific Export.",
          "operationId": "FetchExport",
          "parameters": [
            {
              "description": "The type of communication \u2013 Messages, Calls, Conferences, and Participants",
              "in": "path",
              "name": "ResourceType",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.bulk_exports.export"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/BulkExports/Exports/{ResourceType}/Configuration": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Fetch a specific Export Configuration.",
          "operationId": "FetchExportConfiguration",
          "parameters": [
            {
              "description": "The type of communication \u2013 Messages, Calls, Conferences, and Participants",
              "in": "path",
              "name": "ResourceType",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.bulk_exports.export_configuration"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "Update a specific Export Configuration.",
          "operationId": "UpdateExportConfiguration",
          "parameters": [
            {
              "description": "The type of communication \u2013 Messages, Calls, Conferences, and Participants",
              "in": "path",
              "name": "ResourceType",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "Enabled": {
                      "description": "If true, Twilio will automatically generate every day's file when the day is over.",
                      "type": "boolean"
                    },
                    "WebhookMethod": {
                      "description": "Sets whether Twilio should call a webhook URL when the automatic generation is complete, using GET or POST. The actual destination is set in the webhook_url",
                      "type": "string"
                    },
                    "WebhookUrl": {
                      "description": "Stores the URL destination for the method specified in webhook_method.",
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "title": "UpdateExportConfigurationRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.bulk_exports.export_configuration"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/BulkExports/Exports/{ResourceType}/Days": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Retrieve a list of all Days for a resource.",
          "operationId": "ListDay",
          "parameters": [
            {
              "description": "The type of communication \u2013 Messages, Calls, Conferences, and Participants",
              "in": "path",
              "name": "ResourceType",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
              "in": "query",
              "name": "PageSize",
              "schema": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "days": {
                        "items": {
                          "$ref": "#/components/schemas/preview.bulk_exports.export.day"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "first_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "next_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "page": {
                            "type": "integer"
                          },
                          "page_size": {
                            "type": "integer"
                          },
                          "previous_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "title": "ListDayResponse",
                    "type": "object"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "list"
      },
      "/BulkExports/Exports/{ResourceType}/Days/{Day}": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Fetch a specific Day.",
          "operationId": "FetchDay",
          "parameters": [
            {
              "description": "The type of communication \u2013 Messages, Calls, Conferences, and Participants",
              "in": "path",
              "name": "ResourceType",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The ISO 8601 format date of the resources in the file, for a UTC day",
              "in": "path",
              "name": "Day",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "307": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.bulk_exports.export.day-instance"
                  }
                }
              },
              "description": "Temporary Redirect"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/BulkExports/Exports/{ResourceType}/Jobs": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "ListExportCustomJob",
          "parameters": [
            {
              "description": "The type of communication \u2013 Messages, Calls, Conferences, and Participants",
              "in": "path",
              "name": "ResourceType",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
              "in": "query",
              "name": "PageSize",
              "schema": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "jobs": {
                        "items": {
                          "$ref": "#/components/schemas/preview.bulk_exports.export.export_custom_job"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "first_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "next_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "page": {
                            "type": "integer"
                          },
                          "page_size": {
                            "type": "integer"
                          },
                          "previous_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "title": "ListExportCustomJobResponse",
                    "type": "object"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "",
          "operationId": "CreateExportCustomJob",
          "parameters": [
            {
              "description": "The type of communication \u2013 Messages or Calls, Conferences, and Participants",
              "in": "path",
              "name": "ResourceType",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "Email": {
                      "description": "The optional email to send the completion notification to",
                      "type": "string"
                    },
                    "EndDay": {
                      "description": "The end day for the custom export specified as a string in the format of yyyy-mm-dd. End day is inclusive and must be 2 days earlier than the current UTC day.",
                      "type": "string"
                    },
                    "FriendlyName": {
                      "description": "The friendly name specified when creating the job",
                      "type": "string"
                    },
                    "StartDay": {
                      "description": "The start day for the custom export specified as a string in the format of yyyy-mm-dd",
                      "type": "string"
                    },
                    "WebhookMethod": {
                      "description": "This is the method used to call the webhook on completion of the job. If this is supplied, `WebhookUrl` must also be supplied.",
                      "type": "string"
                    },
                    "WebhookUrl": {
                      "description": "The optional webhook url called on completion of the job. If this is supplied, `WebhookMethod` must also be supplied.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "StartDay",
                    "EndDay",
                    "FriendlyName"
                  ],
                  "title": "CreateExportCustomJobRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.bulk_exports.export.export_custom_job"
                  }
                }
              },
              "description": "Created"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "list"
      },
      "/DeployedDevices/Fleets": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Retrieve a list of all Fleets belonging to your account.",
          "operationId": "ListFleet",
          "parameters": [
            {
              "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
              "in": "query",
              "name": "PageSize",
              "schema": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "fleets": {
                        "items": {
                          "$ref": "#/components/schemas/preview.deployed_devices.fleet"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "first_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "next_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "page": {
                            "type": "integer"
                          },
                          "page_size": {
                            "type": "integer"
                          },
                          "previous_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "title": "ListFleetResponse",
                    "type": "object"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "Create a new Fleet for scoping of deployed devices within your account.",
          "operationId": "CreateFleet",
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "FriendlyName": {
                      "description": "Provides a human readable descriptive text for this Fleet, up to 256 characters long.",
                      "type": "string"
                    }
                  },
                  "title": "CreateFleetRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.deployed_devices.fleet"
                  }
                }
              },
              "description": "Created"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "list"
      },
      "/DeployedDevices/Fleets/{FleetSid}/Certificates": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Retrieve a list of all Certificate credentials belonging to the Fleet.",
          "operationId": "ListCertificate",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "FleetSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Filters the resulting list of Certificates by a unique string identifier of an authenticated Device.",
              "in": "query",
              "name": "DeviceSid",
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^TH[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
              "in": "query",
              "name": "PageSize",
              "schema": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "certificates": {
                        "items": {
                          "$ref": "#/components/schemas/preview.deployed_devices.fleet.certificate"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "first_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "next_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "page": {
                            "type": "integer"
                          },
                          "page_size": {
                            "type": "integer"
                          },
                          "previous_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "title": "ListCertificateResponse",
                    "type": "object"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "Enroll a new Certificate credential to the Fleet, optionally giving it a friendly name and assigning to a Device.",
          "operationId": "CreateCertificate",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "FleetSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "CertificateData": {
                      "description": "Provides a URL encoded representation of the public certificate in PEM format.",
                      "type": "string"
                    },
                    "DeviceSid": {
                      "description": "Provides the unique string identifier of an existing Device to become authenticated with this Certificate credential.",
                      "maxLength": 34,
                      "minLength": 34,
                      "pattern": "^TH[0-9a-fA-F]{32}$",
                      "type": "string"
                    },
                    "FriendlyName": {
                      "description": "Provides a human readable descriptive text for this Certificate credential, up to 256 characters long.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "CertificateData"
                  ],
                  "title": "CreateCertificateRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.deployed_devices.fleet.certificate"
                  }
                }
              },
              "description": "Created"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "list"
      },
      "/DeployedDevices/Fleets/{FleetSid}/Certificates/{Sid}": {
        "delete": {
          "description": "Unregister a specific Certificate credential from the Fleet, effectively disallowing any inbound client connections that are presenting it.",
          "operationId": "DeleteCertificate",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "FleetSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Provides a 34 character string that uniquely identifies the requested Certificate credential resource.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^CY[0-9a-fA-F]{32}$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "The resource was deleted successfully."
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Fetch information about a specific Certificate credential in the Fleet.",
          "operationId": "FetchCertificate",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "FleetSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Provides a 34 character string that uniquely identifies the requested Certificate credential resource.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^CY[0-9a-fA-F]{32}$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.deployed_devices.fleet.certificate"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "Update the given properties of a specific Certificate credential in the Fleet, giving it a friendly name or assigning to a Device.",
          "operationId": "UpdateCertificate",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "FleetSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Provides a 34 character string that uniquely identifies the requested Certificate credential resource.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^CY[0-9a-fA-F]{32}$",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "DeviceSid": {
                      "description": "Provides the unique string identifier of an existing Device to become authenticated with this Certificate credential.",
                      "maxLength": 34,
                      "minLength": 34,
                      "pattern": "^TH[0-9a-fA-F]{32}$",
                      "type": "string"
                    },
                    "FriendlyName": {
                      "description": "Provides a human readable descriptive text for this Certificate credential, up to 256 characters long.",
                      "type": "string"
                    }
                  },
                  "title": "UpdateCertificateRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.deployed_devices.fleet.certificate"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/DeployedDevices/Fleets/{FleetSid}/Deployments": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Retrieve a list of all Deployments belonging to the Fleet.",
          "operationId": "ListDeployment",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "FleetSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
              "in": "query",
              "name": "PageSize",
              "schema": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "deployments": {
                        "items": {
                          "$ref": "#/components/schemas/preview.deployed_devices.fleet.deployment"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "first_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "next_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "page": {
                            "type": "integer"
                          },
                          "page_size": {
                            "type": "integer"
                          },
                          "previous_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "title": "ListDeploymentResponse",
                    "type": "object"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "Create a new Deployment in the Fleet, optionally giving it a friendly name and linking to a specific Twilio Sync service instance.",
          "operationId": "CreateDeployment",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "FleetSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "FriendlyName": {
                      "description": "Provides a human readable descriptive text for this Deployment, up to 256 characters long.",
                      "type": "string"
                    },
                    "SyncServiceSid": {
                      "description": "Provides the unique string identifier of the Twilio Sync service instance that will be linked to and accessible by this Deployment.",
                      "maxLength": 34,
                      "minLength": 34,
                      "pattern": "^IS[0-9a-fA-F]{32}$",
                      "type": "string"
                    }
                  },
                  "title": "CreateDeploymentRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.deployed_devices.fleet.deployment"
                  }
                }
              },
              "description": "Created"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "list"
      },
      "/DeployedDevices/Fleets/{FleetSid}/Deployments/{Sid}": {
        "delete": {
          "description": "Delete a specific Deployment from the Fleet, leaving associated devices effectively undeployed.",
          "operationId": "DeleteDeployment",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "FleetSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Provides a 34 character string that uniquely identifies the requested Deployment resource.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^DL[0-9a-fA-F]{32}$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "The resource was deleted successfully."
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Fetch information about a specific Deployment in the Fleet.",
          "operationId": "FetchDeployment",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "FleetSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Provides a 34 character string that uniquely identifies the requested Deployment resource.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^DL[0-9a-fA-F]{32}$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.deployed_devices.fleet.deployment"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "Update the given properties of a specific Deployment credential in the Fleet, giving it a friendly name or linking to a specific Twilio Sync service instance.",
          "operationId": "UpdateDeployment",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "FleetSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Provides a 34 character string that uniquely identifies the requested Deployment resource.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^DL[0-9a-fA-F]{32}$",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "FriendlyName": {
                      "description": "Provides a human readable descriptive text for this Deployment, up to 64 characters long",
                      "type": "string"
                    },
                    "SyncServiceSid": {
                      "description": "Provides the unique string identifier of the Twilio Sync service instance that will be linked to and accessible by this Deployment.",
                      "maxLength": 34,
                      "minLength": 34,
                      "pattern": "^IS[0-9a-fA-F]{32}$",
                      "type": "string"
                    }
                  },
                  "title": "UpdateDeploymentRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.deployed_devices.fleet.deployment"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/DeployedDevices/Fleets/{FleetSid}/Devices": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Retrieve a list of all Devices belonging to the Fleet.",
          "operationId": "ListDevice",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "FleetSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Filters the resulting list of Devices by a unique string identifier of the Deployment they are associated with.",
              "in": "query",
              "name": "DeploymentSid",
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^DL[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
              "in": "query",
              "name": "PageSize",
              "schema": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "devices": {
                        "items": {
                          "$ref": "#/components/schemas/preview.deployed_devices.fleet.device"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "first_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "next_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "page": {
                            "type": "integer"
                          },
                          "page_size": {
                            "type": "integer"
                          },
                          "previous_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "title": "ListDeviceResponse",
                    "type": "object"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "Create a new Device in the Fleet, optionally giving it a unique name, friendly name, and assigning to a Deployment and/or human identity.",
          "operationId": "CreateDevice",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "FleetSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "DeploymentSid": {
                      "description": "Specifies the unique string identifier of the Deployment group that this Device is going to be associated with.",
                      "maxLength": 34,
                      "minLength": 34,
                      "pattern": "^DL[0-9a-fA-F]{32}$",
                      "type": "string"
                    },
                    "Enabled": {
                      "description": "",
                      "type": "boolean"
                    },
                    "FriendlyName": {
                      "description": "Provides a human readable descriptive text to be assigned to this Device, up to 256 characters long.",
                      "type": "string"
                    },
                    "Identity": {
                      "description": "Provides an arbitrary string identifier representing a human user to be associated with this Device, up to 256 characters long.",
                      "type": "string"
                    },
                    "UniqueName": {
                      "description": "Provides a unique and addressable name to be assigned to this Device, to be used in addition to SID, up to 128 characters long.",
                      "type": "string"
                    }
                  },
                  "title": "CreateDeviceRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.deployed_devices.fleet.device"
                  }
                }
              },
              "description": "Created"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "list"
      },
      "/DeployedDevices/Fleets/{FleetSid}/Devices/{Sid}": {
        "delete": {
          "description": "Delete a specific Device from the Fleet, also removing it from associated Deployments.",
          "operationId": "DeleteDevice",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "FleetSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Provides a 34 character string that uniquely identifies the requested Device resource.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "The resource was deleted successfully."
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Fetch information about a specific Device in the Fleet.",
          "operationId": "FetchDevice",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "FleetSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Provides a 34 character string that uniquely identifies the requested Device resource.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.deployed_devices.fleet.device"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "Update the given properties of a specific Device in the Fleet, giving it a friendly name, assigning to a Deployment, or a human identity.",
          "operationId": "UpdateDevice",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "FleetSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Provides a 34 character string that uniquely identifies the requested Device resource.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "DeploymentSid": {
                      "description": "Specifies the unique string identifier of the Deployment group that this Device is going to be associated with.",
                      "maxLength": 34,
                      "minLength": 34,
                      "pattern": "^DL[0-9a-fA-F]{32}$",
                      "type": "string"
                    },
                    "Enabled": {
                      "description": "",
                      "type": "boolean"
                    },
                    "FriendlyName": {
                      "description": "Provides a human readable descriptive text to be assigned to this Device, up to 256 characters long.",
                      "type": "string"
                    },
                    "Identity": {
                      "description": "Provides an arbitrary string identifier representing a human user to be associated with this Device, up to 256 characters long.",
                      "type": "string"
                    }
                  },
                  "title": "UpdateDeviceRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.deployed_devices.fleet.device"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/DeployedDevices/Fleets/{FleetSid}/Keys": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Retrieve a list of all Keys credentials belonging to the Fleet.",
          "operationId": "ListKey",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "FleetSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Filters the resulting list of Keys by a unique string identifier of an authenticated Device.",
              "in": "query",
              "name": "DeviceSid",
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^TH[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
              "in": "query",
              "name": "PageSize",
              "schema": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "keys": {
                        "items": {
                          "$ref": "#/components/schemas/preview.deployed_devices.fleet.key"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "first_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "next_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "page": {
                            "type": "integer"
                          },
                          "page_size": {
                            "type": "integer"
                          },
                          "previous_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "title": "ListKeyResponse",
                    "type": "object"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "Create a new Key credential in the Fleet, optionally giving it a friendly name and assigning to a Device.",
          "operationId": "CreateKey",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "FleetSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "DeviceSid": {
                      "description": "Provides the unique string identifier of an existing Device to become authenticated with this Key credential.",
                      "maxLength": 34,
                      "minLength": 34,
                      "pattern": "^TH[0-9a-fA-F]{32}$",
                      "type": "string"
                    },
                    "FriendlyName": {
                      "description": "Provides a human readable descriptive text for this Key credential, up to 256 characters long.",
                      "type": "string"
                    }
                  },
                  "title": "CreateKeyRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.deployed_devices.fleet.key"
                  }
                }
              },
              "description": "Created"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "list"
      },
      "/DeployedDevices/Fleets/{FleetSid}/Keys/{Sid}": {
        "delete": {
          "description": "Delete a specific Key credential from the Fleet, effectively disallowing any inbound client connections that are presenting it.",
          "operationId": "DeleteKey",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "FleetSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Provides a 34 character string that uniquely identifies the requested Key credential resource.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^KY[0-9a-fA-F]{32}$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "The resource was deleted successfully."
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Fetch information about a specific Key credential in the Fleet.",
          "operationId": "FetchKey",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "FleetSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Provides a 34 character string that uniquely identifies the requested Key credential resource.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^KY[0-9a-fA-F]{32}$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.deployed_devices.fleet.key"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "Update the given properties of a specific Key credential in the Fleet, giving it a friendly name or assigning to a Device.",
          "operationId": "UpdateKey",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "FleetSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Provides a 34 character string that uniquely identifies the requested Key credential resource.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^KY[0-9a-fA-F]{32}$",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "DeviceSid": {
                      "description": "Provides the unique string identifier of an existing Device to become authenticated with this Key credential.",
                      "maxLength": 34,
                      "minLength": 34,
                      "pattern": "^TH[0-9a-fA-F]{32}$",
                      "type": "string"
                    },
                    "FriendlyName": {
                      "description": "Provides a human readable descriptive text for this Key credential, up to 256 characters long.",
                      "type": "string"
                    }
                  },
                  "title": "UpdateKeyRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.deployed_devices.fleet.key"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/DeployedDevices/Fleets/{Sid}": {
        "delete": {
          "description": "Delete a specific Fleet from your account, also destroys all nested resources: Devices, Deployments, Certificates, Keys.",
          "operationId": "DeleteFleet",
          "parameters": [
            {
              "description": "Provides a 34 character string that uniquely identifies the requested Fleet resource.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "The resource was deleted successfully."
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Fetch information about a specific Fleet in your account.",
          "operationId": "FetchFleet",
          "parameters": [
            {
              "description": "Provides a 34 character string that uniquely identifies the requested Fleet resource.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.deployed_devices.fleet"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "Update the friendly name property of a specific Fleet in your account.",
          "operationId": "UpdateFleet",
          "parameters": [
            {
              "description": "Provides a 34 character string that uniquely identifies the requested Fleet resource.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "DefaultDeploymentSid": {
                      "description": "Provides a string identifier of a Deployment that is going to be used as a default one for this Fleet.",
                      "maxLength": 34,
                      "minLength": 34,
                      "pattern": "^DL[0-9a-fA-F]{32}$",
                      "type": "string"
                    },
                    "FriendlyName": {
                      "description": "Provides a human readable descriptive text for this Fleet, up to 256 characters long.",
                      "type": "string"
                    }
                  },
                  "title": "UpdateFleetRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.deployed_devices.fleet"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/HostedNumbers/AuthorizationDocuments": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Retrieve a list of AuthorizationDocuments belonging to the account initiating the request.",
          "operationId": "ListAuthorizationDocument",
          "parameters": [
            {
              "description": "Email that this AuthorizationDocument will be sent to for signing.",
              "in": "query",
              "name": "Email",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Status of an instance resource. It can hold one of the values: 1. opened 2. signing, 3. signed LOA, 4. canceled, 5. failed. See the section entitled [Status Values](https://www.twilio.com/docs/api/phone-numbers/hosted-number-authorization-documents#status-values) for more information on each of these statuses.",
              "in": "query",
              "name": "Status",
              "schema": {
                "enum": [
                  "opened",
                  "signing",
                  "signed",
                  "canceled",
                  "failed"
                ],
                "type": "string"
              }
            },
            {
              "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
              "in": "query",
              "name": "PageSize",
              "schema": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "items": {
                        "items": {
                          "$ref": "#/components/schemas/preview.hosted_numbers.authorization_document"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "first_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "next_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "page": {
                            "type": "integer"
                          },
                          "page_size": {
                            "type": "integer"
                          },
                          "previous_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "title": "ListAuthorizationDocumentResponse",
                    "type": "object"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "Create an AuthorizationDocument for authorizing the hosting of phone number capabilities on Twilio's platform.",
          "operationId": "CreateAuthorizationDocument",
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "AddressSid": {
                      "description": "A 34 character string that uniquely identifies the Address resource that is associated with this AuthorizationDocument.",
                      "maxLength": 34,
                      "minLength": 34,
                      "pattern": "^AD[0-9a-fA-F]{32}$",
                      "type": "string"
                    },
                    "CcEmails": {
                      "description": "Email recipients who will be informed when an Authorization Document has been sent and signed.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "ContactPhoneNumber": {
                      "description": "The contact phone number of the person authorized to sign the Authorization Document.",
                      "type": "string"
                    },
                    "ContactTitle": {
                      "description": "The title of the person authorized to sign the Authorization Document for this phone number.",
                      "type": "string"
                    },
                    "Email": {
                      "description": "Email that this AuthorizationDocument will be sent to for signing.",
                      "type": "string"
                    },
                    "HostedNumberOrderSids": {
                      "description": "A list of HostedNumberOrder sids that this AuthorizationDocument will authorize for hosting phone number capabilities on Twilio's platform.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "HostedNumberOrderSids",
                    "AddressSid",
                    "Email",
                    "ContactTitle",
                    "ContactPhoneNumber"
                  ],
                  "title": "CreateAuthorizationDocumentRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.hosted_numbers.authorization_document"
                  }
                }
              },
              "description": "Created"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "list"
      },
      "/HostedNumbers/AuthorizationDocuments/{Sid}": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Fetch a specific AuthorizationDocument.",
          "operationId": "FetchAuthorizationDocument",
          "parameters": [
            {
              "description": "A 34 character string that uniquely identifies this AuthorizationDocument.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^PX[0-9a-fA-F]{32}$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.hosted_numbers.authorization_document"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "Updates a specific AuthorizationDocument.",
          "operationId": "UpdateAuthorizationDocument",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^PX[0-9a-fA-F]{32}$",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "AddressSid": {
                      "description": "A 34 character string that uniquely identifies the Address resource that is associated with this AuthorizationDocument.",
                      "maxLength": 34,
                      "minLength": 34,
                      "pattern": "^AD[0-9a-fA-F]{32}$",
                      "type": "string"
                    },
                    "CcEmails": {
                      "description": "Email recipients who will be informed when an Authorization Document has been sent and signed",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "ContactPhoneNumber": {
                      "description": "The contact phone number of the person authorized to sign the Authorization Document.",
                      "type": "string"
                    },
                    "ContactTitle": {
                      "description": "The title of the person authorized to sign the Authorization Document for this phone number.",
                      "type": "string"
                    },
                    "Email": {
                      "description": "Email that this AuthorizationDocument will be sent to for signing.",
                      "type": "string"
                    },
                    "HostedNumberOrderSids": {
                      "description": "A list of HostedNumberOrder sids that this AuthorizationDocument will authorize for hosting phone number capabilities on Twilio's platform.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "Status": {
                      "description": "Status of an instance resource. It can hold one of the values: 1. opened 2. signing, 3. signed LOA, 4. canceled, 5. failed. See the section entitled [Status Values](https://www.twilio.com/docs/api/phone-numbers/hosted-number-authorization-documents#status-values) for more information on each of these statuses.",
                      "enum": [
                        "opened",
                        "signing",
                        "signed",
                        "canceled",
                        "failed"
                      ],
                      "type": "string"
                    }
                  },
                  "title": "UpdateAuthorizationDocumentRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.hosted_numbers.authorization_document"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/HostedNumbers/AuthorizationDocuments/{SigningDocumentSid}/DependentHostedNumberOrders": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Retrieve a list of dependent HostedNumberOrders belonging to the AuthorizationDocument.",
          "operationId": "ListDependentHostedNumberOrder",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "SigningDocumentSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^PX[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "Status of an instance resource. It can hold one of the values: 1. opened 2. signing, 3. signed LOA, 4. canceled, 5. failed. See the section entitled [Status Values](https://www.twilio.com/docs/api/phone-numbers/hosted-number-authorization-documents#status-values) for more information on each of these statuses.",
              "in": "query",
              "name": "Status",
              "schema": {
                "enum": [
                  "received",
                  "pending-verification",
                  "verified",
                  "pending-loa",
                  "carrier-processing",
                  "testing",
                  "completed",
                  "failed",
                  "action-required"
                ],
                "type": "string"
              }
            },
            {
              "description": "An E164 formatted phone number hosted by this HostedNumberOrder.",
              "in": "query",
              "name": "PhoneNumber",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "A 34 character string that uniquely identifies the IncomingPhoneNumber resource created by this HostedNumberOrder.",
              "in": "query",
              "name": "IncomingPhoneNumberSid",
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^PN[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "A human readable description of this resource, up to 64 characters.",
              "in": "query",
              "name": "FriendlyName",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Provides a unique and addressable name to be assigned to this HostedNumberOrder, assigned by the developer, to be optionally used in addition to SID.",
              "in": "query",
              "name": "UniqueName",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
              "in": "query",
              "name": "PageSize",
              "schema": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "items": {
                        "items": {
                          "$ref": "#/components/schemas/preview.hosted_numbers.authorization_document.dependent_hosted_number_order"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "first_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "next_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "page": {
                            "type": "integer"
                          },
                          "page_size": {
                            "type": "integer"
                          },
                          "previous_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "title": "ListDependentHostedNumberOrderResponse",
                    "type": "object"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "list"
      },
      "/HostedNumbers/HostedNumberOrders": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Retrieve a list of HostedNumberOrders belonging to the account initiating the request.",
          "operationId": "ListHostedNumberOrder",
          "parameters": [
            {
              "description": "The Status of this HostedNumberOrder. One of `received`, `pending-verification`, `verified`, `pending-loa`, `carrier-processing`, `testing`, `completed`, `failed`, or `action-required`.",
              "in": "query",
              "name": "Status",
              "schema": {
                "enum": [
                  "received",
                  "pending-verification",
                  "verified",
                  "pending-loa",
                  "carrier-processing",
                  "testing",
                  "completed",
                  "failed",
                  "action-required"
                ],
                "type": "string"
              }
            },
            {
              "description": "An E164 formatted phone number hosted by this HostedNumberOrder.",
              "in": "query",
              "name": "PhoneNumber",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "A 34 character string that uniquely identifies the IncomingPhoneNumber resource created by this HostedNumberOrder.",
              "in": "query",
              "name": "IncomingPhoneNumberSid",
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^PN[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "A human readable description of this resource, up to 64 characters.",
              "in": "query",
              "name": "FriendlyName",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Provides a unique and addressable name to be assigned to this HostedNumberOrder, assigned by the developer, to be optionally used in addition to SID.",
              "in": "query",
              "name": "UniqueName",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
              "in": "query",
              "name": "PageSize",
              "schema": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "items": {
                        "items": {
                          "$ref": "#/components/schemas/preview.hosted_numbers.hosted_number_order"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "first_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "next_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "page": {
                            "type": "integer"
                          },
                          "page_size": {
                            "type": "integer"
                          },
                          "previous_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "title": "ListHostedNumberOrderResponse",
                    "type": "object"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "Host a phone number's capability on Twilio's platform.",
          "operationId": "CreateHostedNumberOrder",
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "AccountSid": {
                      "description": "This defaults to the AccountSid of the authorization the user is using. This can be provided to specify a subaccount to add the HostedNumberOrder to.",
                      "maxLength": 34,
                      "minLength": 34,
                      "pattern": "^AC[0-9a-fA-F]{32}$",
                      "type": "string"
                    },
                    "AddressSid": {
                      "description": "Optional. A 34 character string that uniquely identifies the Address resource that represents the address of the owner of this phone number.",
                      "maxLength": 34,
                      "minLength": 34,
                      "pattern": "^AD[0-9a-fA-F]{32}$",
                      "type": "string"
                    },
                    "CcEmails": {
                      "description": "Optional. A list of emails that the LOA document for this HostedNumberOrder will be carbon copied to.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "Email": {
                      "description": "Optional. Email of the owner of this phone number that is being hosted.",
                      "type": "string"
                    },
                    "FriendlyName": {
                      "description": "A 64 character string that is a human readable text that describes this resource.",
                      "type": "string"
                    },
                    "PhoneNumber": {
                      "description": "The number to host in [+E.164](https://en.wikipedia.org/wiki/E.164) format",
                      "type": "string"
                    },
                    "SmsApplicationSid": {
                      "description": "Optional. The 34 character sid of the application Twilio should use to handle SMS messages sent to this number. If a `SmsApplicationSid` is present, Twilio will ignore all of the SMS urls above and use those set on the application.",
                      "maxLength": 34,
                      "minLength": 34,
                      "pattern": "^AP[0-9a-fA-F]{32}$",
                      "type": "string"
                    },
                    "SmsCapability": {
                      "description": "Used to specify that the SMS capability will be hosted on Twilio's platform.",
                      "type": "boolean"
                    },
                    "SmsFallbackMethod": {
                      "description": "The HTTP method that should be used to request the SmsFallbackUrl. Must be either `GET` or `POST`. This will be copied onto the IncomingPhoneNumber resource.",
                      "enum": [
                        "HEAD",
                        "GET",
                        "POST",
                        "PATCH",
                        "PUT",
                        "DELETE"
                      ],
                      "type": "string"
                    },
                    "SmsFallbackUrl": {
                      "description": "A URL that Twilio will request if an error occurs requesting or executing the TwiML defined by SmsUrl. This will be copied onto the IncomingPhoneNumber resource.",
                      "format": "uri",
                      "type": "string"
                    },
                    "SmsMethod": {
                      "description": "The HTTP method that should be used to request the SmsUrl. Must be either `GET` or `POST`.  This will be copied onto the IncomingPhoneNumber resource.",
                      "enum": [
                        "HEAD",
                        "GET",
                        "POST",
                        "PATCH",
                        "PUT",
                        "DELETE"
                      ],
                      "type": "string"
                    },
                    "SmsUrl": {
                      "description": "The URL that Twilio should request when somebody sends an SMS to the phone number. This will be copied onto the IncomingPhoneNumber resource.",
                      "format": "uri",
                      "type": "string"
                    },
                    "StatusCallbackMethod": {
                      "description": "Optional. The Status Callback Method attached to the IncomingPhoneNumber resource.",
                      "enum": [
                        "HEAD",
                        "GET",
                        "POST",
                        "PATCH",
                        "PUT",
                        "DELETE"
                      ],
                      "type": "string"
                    },
                    "StatusCallbackUrl": {
                      "description": "Optional. The Status Callback URL attached to the IncomingPhoneNumber resource.",
                      "format": "uri",
                      "type": "string"
                    },
                    "UniqueName": {
                      "description": "Optional. Provides a unique and addressable name to be assigned to this HostedNumberOrder, assigned by the developer, to be optionally used in addition to SID.",
                      "type": "string"
                    },
                    "VerificationDocumentSid": {
                      "description": "Optional. The unique sid identifier of the Identity Document that represents the document for verifying ownership of the number to be hosted. Required when VerificationType is phone-bill.",
                      "maxLength": 34,
                      "minLength": 34,
                      "pattern": "^RI[0-9a-fA-F]{32}$",
                      "type": "string"
                    },
                    "VerificationType": {
                      "description": "Optional. The method used for verifying ownership of the number to be hosted. One of phone-call (default) or phone-bill.",
                      "enum": [
                        "phone-call",
                        "phone-bill"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "PhoneNumber",
                    "SmsCapability"
                  ],
                  "title": "CreateHostedNumberOrderRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.hosted_numbers.hosted_number_order"
                  }
                }
              },
              "description": "Created"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "list"
      },
      "/HostedNumbers/HostedNumberOrders/{Sid}": {
        "delete": {
          "description": "Cancel the HostedNumberOrder (only available when the status is in `received`).",
          "operationId": "DeleteHostedNumberOrder",
          "parameters": [
            {
              "description": "A 34 character string that uniquely identifies this HostedNumberOrder.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^HR[0-9a-fA-F]{32}$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "The resource was deleted successfully."
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Fetch a specific HostedNumberOrder.",
          "operationId": "FetchHostedNumberOrder",
          "parameters": [
            {
              "description": "A 34 character string that uniquely identifies this HostedNumberOrder.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^HR[0-9a-fA-F]{32}$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.hosted_numbers.hosted_number_order"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "Updates a specific HostedNumberOrder.",
          "operationId": "UpdateHostedNumberOrder",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^HR[0-9a-fA-F]{32}$",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "CallDelay": {
                      "description": "The number of seconds, between 0 and 60, to delay before initiating the verification call. Defaults to 0.",
                      "type": "integer"
                    },
                    "CcEmails": {
                      "description": "Optional. A list of emails that LOA document for this HostedNumberOrder will be carbon copied to.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "Email": {
                      "description": "Email of the owner of this phone number that is being hosted.",
                      "type": "string"
                    },
                    "Extension": {
                      "description": "Digits to dial after connecting the verification call.",
                      "type": "string"
                    },
                    "FriendlyName": {
                      "description": "A 64 character string that is a human readable text that describes this resource.",
                      "type": "string"
                    },
                    "Status": {
                      "description": "User can only post to `pending-verification` status to transition the HostedNumberOrder to initiate a verification call or verification of ownership with a copy of a phone bill.",
                      "enum": [
                        "received",
                        "pending-verification",
                        "verified",
                        "pending-loa",
                        "carrier-processing",
                        "testing",
                        "completed",
                        "failed",
                        "action-required"
                      ],
                      "type": "string"
                    },
                    "UniqueName": {
                      "description": "Provides a unique and addressable name to be assigned to this HostedNumberOrder, assigned by the developer, to be optionally used in addition to SID.",
                      "type": "string"
                    },
                    "VerificationCode": {
                      "description": "A verification code that is given to the user via a phone call to the phone number that is being hosted.",
                      "type": "string"
                    },
                    "VerificationDocumentSid": {
                      "description": "Optional. The unique sid identifier of the Identity Document that represents the document for verifying ownership of the number to be hosted. Required when VerificationType is phone-bill.",
                      "maxLength": 34,
                      "minLength": 34,
                      "pattern": "^RI[0-9a-fA-F]{32}$",
                      "type": "string"
                    },
                    "VerificationType": {
                      "description": "Optional. The method used for verifying ownership of the number to be hosted. One of phone-call (default) or phone-bill.",
                      "enum": [
                        "phone-call",
                        "phone-bill"
                      ],
                      "type": "string"
                    }
                  },
                  "title": "UpdateHostedNumberOrderRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.hosted_numbers.hosted_number_order"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/Sync/Services": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "ListService",
          "parameters": [
            {
              "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
              "in": "query",
              "name": "PageSize",
              "schema": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "meta": {
                        "properties": {
                          "first_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "next_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "page": {
                            "type": "integer"
                          },
                          "page_size": {
                            "type": "integer"
                          },
                          "previous_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "services": {
                        "items": {
                          "$ref": "#/components/schemas/preview.sync.service"
                        },
                        "type": "array"
                      }
                    },
                    "title": "ListServiceResponse",
                    "type": "object"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "",
          "operationId": "CreateService",
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "AclEnabled": {
                      "description": "",
                      "type": "boolean"
                    },
                    "FriendlyName": {
                      "description": "",
                      "type": "string"
                    },
                    "ReachabilityWebhooksEnabled": {
                      "description": "",
                      "type": "boolean"
                    },
                    "WebhookUrl": {
                      "description": "",
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "title": "CreateServiceRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.sync.service"
                  }
                }
              },
              "description": "Created"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "list"
      },
      "/Sync/Services/{ServiceSid}/Documents": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "ListDocument",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "ServiceSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
              "in": "query",
              "name": "PageSize",
              "schema": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "documents": {
                        "items": {
                          "$ref": "#/components/schemas/preview.sync.service.document"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "first_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "next_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "page": {
                            "type": "integer"
                          },
                          "page_size": {
                            "type": "integer"
                          },
                          "previous_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "title": "ListDocumentResponse",
                    "type": "object"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "",
          "operationId": "CreateDocument",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "ServiceSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "Data": {
                      "description": "",
                      "type": "object"
                    },
                    "UniqueName": {
                      "description": "",
                      "type": "string"
                    }
                  },
                  "title": "CreateDocumentRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.sync.service.document"
                  }
                }
              },
              "description": "Created"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "list"
      },
      "/Sync/Services/{ServiceSid}/Documents/{DocumentSid}/Permissions": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Retrieve a list of all Permissions applying to a Sync Document.",
          "operationId": "ListDocumentPermission",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "ServiceSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "Identifier of the Sync Document. Either a SID or a unique name.",
              "in": "path",
              "name": "DocumentSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
              "in": "query",
              "name": "PageSize",
              "schema": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "meta": {
                        "properties": {
                          "first_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "next_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "page": {
                            "type": "integer"
                          },
                          "page_size": {
                            "type": "integer"
                          },
                          "previous_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "permissions": {
                        "items": {
                          "$ref": "#/components/schemas/preview.sync.service.document.document_permission"
                        },
                        "type": "array"
                      }
                    },
                    "title": "ListDocumentPermissionResponse",
                    "type": "object"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "list"
      },
      "/Sync/Services/{ServiceSid}/Documents/{DocumentSid}/Permissions/{Identity}": {
        "delete": {
          "description": "Delete a specific Sync Document Permission.",
          "operationId": "DeleteDocumentPermission",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "ServiceSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "Identifier of the Sync Document. Either a SID or a unique name.",
              "in": "path",
              "name": "DocumentSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Arbitrary string identifier representing a user associated with an FPA token, assigned by the developer.",
              "in": "path",
              "name": "Identity",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "The resource was deleted successfully."
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Fetch a specific Sync Document Permission.",
          "operationId": "FetchDocumentPermission",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "ServiceSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "Identifier of the Sync Document. Either a SID or a unique name.",
              "in": "path",
              "name": "DocumentSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Arbitrary string identifier representing a user associated with an FPA token, assigned by the developer.",
              "in": "path",
              "name": "Identity",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.sync.service.document.document_permission"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "Update an identity's access to a specific Sync Document.",
          "operationId": "UpdateDocumentPermission",
          "parameters": [
            {
              "description": "The unique SID identifier of the Sync Service Instance.",
              "in": "path",
              "name": "ServiceSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "Identifier of the Sync Document. Either a SID or a unique name.",
              "in": "path",
              "name": "DocumentSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Arbitrary string identifier representing a human user associated with an FPA token, assigned by the developer.",
              "in": "path",
              "name": "Identity",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "Manage": {
                      "description": "Boolean flag specifying whether the identity can delete the Sync Document.",
                      "type": "boolean"
                    },
                    "Read": {
                      "description": "Boolean flag specifying whether the identity can read the Sync Document.",
                      "type": "boolean"
                    },
                    "Write": {
                      "description": "Boolean flag specifying whether the identity can update the Sync Document.",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "Read",
                    "Write",
                    "Manage"
                  ],
                  "title": "UpdateDocumentPermissionRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.sync.service.document.document_permission"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/Sync/Services/{ServiceSid}/Documents/{Sid}": {
        "delete": {
          "description": "",
          "operationId": "DeleteDocument",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "ServiceSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "The resource was deleted successfully."
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "FetchDocument",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "ServiceSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.sync.service.document"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "",
          "operationId": "UpdateDocument",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "ServiceSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The If-Match HTTP request header",
              "in": "header",
              "name": "If-Match",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "Data": {
                      "description": "",
                      "type": "object"
                    }
                  },
                  "required": [
                    "Data"
                  ],
                  "title": "UpdateDocumentRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.sync.service.document"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/Sync/Services/{ServiceSid}/Lists": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "ListSyncList",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "ServiceSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
              "in": "query",
              "name": "PageSize",
              "schema": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "lists": {
                        "items": {
                          "$ref": "#/components/schemas/preview.sync.service.sync_list"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "first_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "next_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "page": {
                            "type": "integer"
                          },
                          "page_size": {
                            "type": "integer"
                          },
                          "previous_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "title": "ListSyncListResponse",
                    "type": "object"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "",
          "operationId": "CreateSyncList",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "ServiceSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "UniqueName": {
                      "description": "",
                      "type": "string"
                    }
                  },
                  "title": "CreateSyncListRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.sync.service.sync_list"
                  }
                }
              },
              "description": "Created"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "list"
      },
      "/Sync/Services/{ServiceSid}/Lists/{ListSid}/Items": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "ListSyncListItem",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "ServiceSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "path",
              "name": "ListSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "query",
              "name": "Order",
              "schema": {
                "enum": [
                  "asc",
                  "desc"
                ],
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "query",
              "name": "From",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "query",
              "name": "Bounds",
              "schema": {
                "enum": [
                  "inclusive",
                  "exclusive"
                ],
                "type": "string"
              }
            },
            {
              "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
              "in": "query",
              "name": "PageSize",
              "schema": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "items": {
                        "items": {
                          "$ref": "#/components/schemas/preview.sync.service.sync_list.sync_list_item"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "first_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "next_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "page": {
                            "type": "integer"
                          },
                          "page_size": {
                            "type": "integer"
                          },
                          "previous_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "title": "ListSyncListItemResponse",
                    "type": "object"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "",
          "operationId": "CreateSyncListItem",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "ServiceSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "path",
              "name": "ListSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "Data": {
                      "description": "",
                      "type": "object"
                    }
                  },
                  "required": [
                    "Data"
                  ],
                  "title": "CreateSyncListItemRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.sync.service.sync_list.sync_list_item"
                  }
                }
              },
              "description": "Created"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "list"
      },
      "/Sync/Services/{ServiceSid}/Lists/{ListSid}/Items/{Index}": {
        "delete": {
          "description": "",
          "operationId": "DeleteSyncListItem",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "ServiceSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "path",
              "name": "ListSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "path",
              "name": "Index",
              "required": true,
              "schema": {
                "type": "integer"
              }
            },
            {
              "description": "The If-Match HTTP request header",
              "in": "header",
              "name": "If-Match",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "The resource was deleted successfully."
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "FetchSyncListItem",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "ServiceSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "path",
              "name": "ListSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "path",
              "name": "Index",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.sync.service.sync_list.sync_list_item"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "",
          "operationId": "UpdateSyncListItem",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "ServiceSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "path",
              "name": "ListSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "path",
              "name": "Index",
              "required": true,
              "schema": {
                "type": "integer"
              }
            },
            {
              "description": "The If-Match HTTP request header",
              "in": "header",
              "name": "If-Match",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "Data": {
                      "description": "",
                      "type": "object"
                    }
                  },
                  "required": [
                    "Data"
                  ],
                  "title": "UpdateSyncListItemRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.sync.service.sync_list.sync_list_item"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/Sync/Services/{ServiceSid}/Lists/{ListSid}/Permissions": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Retrieve a list of all Permissions applying to a Sync List.",
          "operationId": "ListSyncListPermission",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "ServiceSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "Identifier of the Sync List. Either a SID or a unique name.",
              "in": "path",
              "name": "ListSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
              "in": "query",
              "name": "PageSize",
              "schema": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "meta": {
                        "properties": {
                          "first_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "next_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "page": {
                            "type": "integer"
                          },
                          "page_size": {
                            "type": "integer"
                          },
                          "previous_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "permissions": {
                        "items": {
                          "$ref": "#/components/schemas/preview.sync.service.sync_list.sync_list_permission"
                        },
                        "type": "array"
                      }
                    },
                    "title": "ListSyncListPermissionResponse",
                    "type": "object"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "list"
      },
      "/Sync/Services/{ServiceSid}/Lists/{ListSid}/Permissions/{Identity}": {
        "delete": {
          "description": "Delete a specific Sync List Permission.",
          "operationId": "DeleteSyncListPermission",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "ServiceSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "Identifier of the Sync List. Either a SID or a unique name.",
              "in": "path",
              "name": "ListSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Arbitrary string identifier representing a user associated with an FPA token, assigned by the developer.",
              "in": "path",
              "name": "Identity",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "The resource was deleted successfully."
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Fetch a specific Sync List Permission.",
          "operationId": "FetchSyncListPermission",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "ServiceSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "Identifier of the Sync List. Either a SID or a unique name.",
              "in": "path",
              "name": "ListSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Arbitrary string identifier representing a user associated with an FPA token, assigned by the developer.",
              "in": "path",
              "name": "Identity",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.sync.service.sync_list.sync_list_permission"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "Update an identity's access to a specific Sync List.",
          "operationId": "UpdateSyncListPermission",
          "parameters": [
            {
              "description": "The unique SID identifier of the Sync Service Instance.",
              "in": "path",
              "name": "ServiceSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "Identifier of the Sync List. Either a SID or a unique name.",
              "in": "path",
              "name": "ListSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Arbitrary string identifier representing a human user associated with an FPA token, assigned by the developer.",
              "in": "path",
              "name": "Identity",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "Manage": {
                      "description": "Boolean flag specifying whether the identity can delete the Sync List.",
                      "type": "boolean"
                    },
                    "Read": {
                      "description": "Boolean flag specifying whether the identity can read the Sync List.",
                      "type": "boolean"
                    },
                    "Write": {
                      "description": "Boolean flag specifying whether the identity can create, update and delete Items of the Sync List.",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "Read",
                    "Write",
                    "Manage"
                  ],
                  "title": "UpdateSyncListPermissionRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.sync.service.sync_list.sync_list_permission"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/Sync/Services/{ServiceSid}/Lists/{Sid}": {
        "delete": {
          "description": "",
          "operationId": "DeleteSyncList",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "ServiceSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "The resource was deleted successfully."
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "FetchSyncList",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "ServiceSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.sync.service.sync_list"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/Sync/Services/{ServiceSid}/Maps": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "ListSyncMap",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "ServiceSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
              "in": "query",
              "name": "PageSize",
              "schema": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "maps": {
                        "items": {
                          "$ref": "#/components/schemas/preview.sync.service.sync_map"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "first_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "next_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "page": {
                            "type": "integer"
                          },
                          "page_size": {
                            "type": "integer"
                          },
                          "previous_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "title": "ListSyncMapResponse",
                    "type": "object"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "",
          "operationId": "CreateSyncMap",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "ServiceSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "UniqueName": {
                      "description": "",
                      "type": "string"
                    }
                  },
                  "title": "CreateSyncMapRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.sync.service.sync_map"
                  }
                }
              },
              "description": "Created"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "list"
      },
      "/Sync/Services/{ServiceSid}/Maps/{MapSid}/Items": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "ListSyncMapItem",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "ServiceSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "path",
              "name": "MapSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "query",
              "name": "Order",
              "schema": {
                "enum": [
                  "asc",
                  "desc"
                ],
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "query",
              "name": "From",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "query",
              "name": "Bounds",
              "schema": {
                "enum": [
                  "inclusive",
                  "exclusive"
                ],
                "type": "string"
              }
            },
            {
              "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
              "in": "query",
              "name": "PageSize",
              "schema": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "items": {
                        "items": {
                          "$ref": "#/components/schemas/preview.sync.service.sync_map.sync_map_item"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "first_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "next_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "page": {
                            "type": "integer"
                          },
                          "page_size": {
                            "type": "integer"
                          },
                          "previous_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "title": "ListSyncMapItemResponse",
                    "type": "object"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "",
          "operationId": "CreateSyncMapItem",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "ServiceSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "path",
              "name": "MapSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "Data": {
                      "description": "",
                      "type": "object"
                    },
                    "Key": {
                      "description": "",
                      "type": "string"
                    }
                  },
                  "required": [
                    "Key",
                    "Data"
                  ],
                  "title": "CreateSyncMapItemRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.sync.service.sync_map.sync_map_item"
                  }
                }
              },
              "description": "Created"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "list"
      },
      "/Sync/Services/{ServiceSid}/Maps/{MapSid}/Items/{Key}": {
        "delete": {
          "description": "",
          "operationId": "DeleteSyncMapItem",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "ServiceSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "path",
              "name": "MapSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "path",
              "name": "Key",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The If-Match HTTP request header",
              "in": "header",
              "name": "If-Match",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "The resource was deleted successfully."
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "FetchSyncMapItem",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "ServiceSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "path",
              "name": "MapSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "path",
              "name": "Key",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.sync.service.sync_map.sync_map_item"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "",
          "operationId": "UpdateSyncMapItem",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "ServiceSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "path",
              "name": "MapSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "path",
              "name": "Key",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The If-Match HTTP request header",
              "in": "header",
              "name": "If-Match",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "Data": {
                      "description": "",
                      "type": "object"
                    }
                  },
                  "required": [
                    "Data"
                  ],
                  "title": "UpdateSyncMapItemRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.sync.service.sync_map.sync_map_item"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/Sync/Services/{ServiceSid}/Maps/{MapSid}/Permissions": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Retrieve a list of all Permissions applying to a Sync Map.",
          "operationId": "ListSyncMapPermission",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "ServiceSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "Identifier of the Sync Map. Either a SID or a unique name.",
              "in": "path",
              "name": "MapSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
              "in": "query",
              "name": "PageSize",
              "schema": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "meta": {
                        "properties": {
                          "first_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "next_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "page": {
                            "type": "integer"
                          },
                          "page_size": {
                            "type": "integer"
                          },
                          "previous_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "permissions": {
                        "items": {
                          "$ref": "#/components/schemas/preview.sync.service.sync_map.sync_map_permission"
                        },
                        "type": "array"
                      }
                    },
                    "title": "ListSyncMapPermissionResponse",
                    "type": "object"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "list"
      },
      "/Sync/Services/{ServiceSid}/Maps/{MapSid}/Permissions/{Identity}": {
        "delete": {
          "description": "Delete a specific Sync Map Permission.",
          "operationId": "DeleteSyncMapPermission",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "ServiceSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "Identifier of the Sync Map. Either a SID or a unique name.",
              "in": "path",
              "name": "MapSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Arbitrary string identifier representing a user associated with an FPA token, assigned by the developer.",
              "in": "path",
              "name": "Identity",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "The resource was deleted successfully."
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Fetch a specific Sync Map Permission.",
          "operationId": "FetchSyncMapPermission",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "ServiceSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "Identifier of the Sync Map. Either a SID or a unique name.",
              "in": "path",
              "name": "MapSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Arbitrary string identifier representing a user associated with an FPA token, assigned by the developer.",
              "in": "path",
              "name": "Identity",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.sync.service.sync_map.sync_map_permission"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "Update an identity's access to a specific Sync Map.",
          "operationId": "UpdateSyncMapPermission",
          "parameters": [
            {
              "description": "The unique SID identifier of the Sync Service Instance.",
              "in": "path",
              "name": "ServiceSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "Identifier of the Sync Map. Either a SID or a unique name.",
              "in": "path",
              "name": "MapSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Arbitrary string identifier representing a human user associated with an FPA token, assigned by the developer.",
              "in": "path",
              "name": "Identity",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "Manage": {
                      "description": "Boolean flag specifying whether the identity can delete the Sync Map.",
                      "type": "boolean"
                    },
                    "Read": {
                      "description": "Boolean flag specifying whether the identity can read the Sync Map.",
                      "type": "boolean"
                    },
                    "Write": {
                      "description": "Boolean flag specifying whether the identity can create, update and delete Items of the Sync Map.",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "Read",
                    "Write",
                    "Manage"
                  ],
                  "title": "UpdateSyncMapPermissionRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.sync.service.sync_map.sync_map_permission"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/Sync/Services/{ServiceSid}/Maps/{Sid}": {
        "delete": {
          "description": "",
          "operationId": "DeleteSyncMap",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "ServiceSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "The resource was deleted successfully."
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "FetchSyncMap",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "ServiceSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.sync.service.sync_map"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/Sync/Services/{Sid}": {
        "delete": {
          "description": "",
          "operationId": "DeleteService",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "The resource was deleted successfully."
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "FetchService",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.sync.service"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "",
          "operationId": "UpdateService",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^IS[0-9a-fA-F]{32}$",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "AclEnabled": {
                      "description": "",
                      "type": "boolean"
                    },
                    "FriendlyName": {
                      "description": "",
                      "type": "string"
                    },
                    "ReachabilityWebhooksEnabled": {
                      "description": "",
                      "type": "boolean"
                    },
                    "WebhookUrl": {
                      "description": "",
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "title": "UpdateServiceRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.sync.service"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/TrustedComms/BrandedChannels/{BrandedChannelSid}/Channels": {
        "description": "TODO: Resource-level docs",
        "post": {
          "description": "Associate a channel to a branded channel",
          "operationId": "CreateChannel",
          "parameters": [
            {
              "description": "The unique SID identifier of the Branded Channel. The given phone number is going to be assigned to this Branded Channel",
              "in": "path",
              "name": "BrandedChannelSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^BW[0-9a-fA-F]{32}$",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "PhoneNumberSid": {
                      "description": "The unique SID identifier of the Phone Number of the Phone number to be assigned to the Branded Channel.",
                      "maxLength": 34,
                      "minLength": 34,
                      "pattern": "^PN[0-9a-fA-F]{32}$",
                      "type": "string"
                    }
                  },
                  "required": [
                    "PhoneNumberSid"
                  ],
                  "title": "CreateChannelRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.trusted_comms.branded_channel.channel"
                  }
                }
              },
              "description": "Created"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [
          "account_sid",
          "business_sid",
          "brand_sid",
          "branded_channel_sid",
          "phone_number_sid",
          "phone_number",
          "url"
        ],
        "x-path-type": "list"
      },
      "/TrustedComms/BrandedChannels/{Sid}": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Fetch a specific Branded Channel.",
          "operationId": "FetchBrandedChannel",
          "parameters": [
            {
              "description": "The unique SID identifier of the Branded Channel.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^BW[0-9a-fA-F]{32}$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.trusted_comms.branded_channel"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [
          "account_sid",
          "business_sid",
          "brand_sid",
          "sid",
          "links",
          "url"
        ],
        "x-path-type": "instance"
      },
      "/TrustedComms/BrandsInformation": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Retrieve the newest available BrandInformation",
          "operationId": "FetchBrandsInformation",
          "parameters": [
            {
              "description": "Standard `If-None-Match` HTTP header. For more information visit: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match.",
              "in": "header",
              "name": "If-None-Match",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.trusted_comms.brands_information"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [
          "update_time",
          "file_link",
          "file_link_ttl_in_seconds",
          "url"
        ],
        "x-path-type": "instance"
      },
      "/TrustedComms/CPS": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Fetch a specific Call Placement Service (CPS) given a phone number via `X-XCNAM-Sensitive-Phone-Number` header.",
          "operationId": "FetchCps",
          "parameters": [
            {
              "description": "Phone number used to retrieve its corresponding CPS.",
              "in": "header",
              "name": "X-Xcnam-Sensitive-Phone-Number",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.trusted_comms.cps"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [
          "cps_url",
          "phone_number",
          "url"
        ],
        "x-path-type": "instance"
      },
      "/TrustedComms/CurrentCall": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Retrieve a current call given the originating and terminating number via `X-XCNAM-Sensitive-Phone-Number-From` and `X-XCNAM-Sensitive-Phone-Number-To` headers.",
          "operationId": "FetchCurrentCall",
          "parameters": [
            {
              "description": "The originating Phone Number, given in [E.164 format](https://www.twilio.com/docs/glossary/what-e164). This phone number should be a Twilio number, otherwise it will return an error with HTTP Status Code 400.",
              "in": "header",
              "name": "X-Xcnam-Sensitive-Phone-Number-From",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The terminating Phone Number, given in [E.164 format](https://www.twilio.com/docs/glossary/what-e164).",
              "in": "header",
              "name": "X-Xcnam-Sensitive-Phone-Number-To",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.trusted_comms.current_call"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [
          "bg_color",
          "caller",
          "created_at",
          "font_color",
          "from",
          "logo",
          "manager",
          "reason",
          "shield_img",
          "sid",
          "status",
          "to",
          "url",
          "use_case"
        ],
        "x-path-type": "instance"
      },
      "/marketplace/AvailableAddOns": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Retrieve a list of Add-ons currently available to be installed.",
          "operationId": "ListAvailableAddOn",
          "parameters": [
            {
              "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
              "in": "query",
              "name": "PageSize",
              "schema": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "available_add_ons": {
                        "items": {
                          "$ref": "#/components/schemas/preview.marketplace.available_add_on"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "first_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "next_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "page": {
                            "type": "integer"
                          },
                          "page_size": {
                            "type": "integer"
                          },
                          "previous_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "title": "ListAvailableAddOnResponse",
                    "type": "object"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "list"
      },
      "/marketplace/AvailableAddOns/{AvailableAddOnSid}/Extensions": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Retrieve a list of Extensions for the Available Add-on.",
          "operationId": "ListAvailableAddOnExtension",
          "parameters": [
            {
              "description": "The SID of the AvailableAddOn resource with the extensions to read.",
              "in": "path",
              "name": "AvailableAddOnSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^XB[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
              "in": "query",
              "name": "PageSize",
              "schema": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "extensions": {
                        "items": {
                          "$ref": "#/components/schemas/preview.marketplace.available_add_on.available_add_on_extension"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "first_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "next_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "page": {
                            "type": "integer"
                          },
                          "page_size": {
                            "type": "integer"
                          },
                          "previous_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "title": "ListAvailableAddOnExtensionResponse",
                    "type": "object"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "list"
      },
      "/marketplace/AvailableAddOns/{AvailableAddOnSid}/Extensions/{Sid}": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Fetch an instance of an Extension for the Available Add-on.",
          "operationId": "FetchAvailableAddOnExtension",
          "parameters": [
            {
              "description": "The SID of the AvailableAddOn resource with the extension to fetch.",
              "in": "path",
              "name": "AvailableAddOnSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^XB[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "The SID of the AvailableAddOn Extension resource to fetch.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^XF[0-9a-fA-F]{32}$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.marketplace.available_add_on.available_add_on_extension"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/marketplace/AvailableAddOns/{Sid}": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Fetch an instance of an Add-on currently available to be installed.",
          "operationId": "FetchAvailableAddOn",
          "parameters": [
            {
              "description": "The SID of the AvailableAddOn resource to fetch.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^XB[0-9a-fA-F]{32}$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.marketplace.available_add_on"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/marketplace/InstalledAddOns": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Retrieve a list of Add-ons currently installed on this Account.",
          "operationId": "ListInstalledAddOn",
          "parameters": [
            {
              "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
              "in": "query",
              "name": "PageSize",
              "schema": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "installed_add_ons": {
                        "items": {
                          "$ref": "#/components/schemas/preview.marketplace.installed_add_on"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "first_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "next_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "page": {
                            "type": "integer"
                          },
                          "page_size": {
                            "type": "integer"
                          },
                          "previous_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "title": "ListInstalledAddOnResponse",
                    "type": "object"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "Install an Add-on for the Account specified.",
          "operationId": "CreateInstalledAddOn",
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "AcceptTermsOfService": {
                      "description": "Whether the Terms of Service were accepted.",
                      "type": "boolean"
                    },
                    "AvailableAddOnSid": {
                      "description": "The SID of the AvaliableAddOn to install.",
                      "maxLength": 34,
                      "minLength": 34,
                      "pattern": "^XB[0-9a-fA-F]{32}$",
                      "type": "string"
                    },
                    "Configuration": {
                      "description": "The JSON object that represents the configuration of the new Add-on being installed.",
                      "type": "object"
                    },
                    "UniqueName": {
                      "description": "An application-defined string that uniquely identifies the resource. This value must be unique within the Account.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "AvailableAddOnSid",
                    "AcceptTermsOfService"
                  ],
                  "title": "CreateInstalledAddOnRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.marketplace.installed_add_on"
                  }
                }
              },
              "description": "Created"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "list"
      },
      "/marketplace/InstalledAddOns/{InstalledAddOnSid}/Extensions": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Retrieve a list of Extensions for the Installed Add-on.",
          "operationId": "ListInstalledAddOnExtension",
          "parameters": [
            {
              "description": "The SID of the InstalledAddOn resource with the extensions to read.",
              "in": "path",
              "name": "InstalledAddOnSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^XE[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
              "in": "query",
              "name": "PageSize",
              "schema": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "extensions": {
                        "items": {
                          "$ref": "#/components/schemas/preview.marketplace.installed_add_on.installed_add_on_extension"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "first_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "next_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "page": {
                            "type": "integer"
                          },
                          "page_size": {
                            "type": "integer"
                          },
                          "previous_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "title": "ListInstalledAddOnExtensionResponse",
                    "type": "object"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "list"
      },
      "/marketplace/InstalledAddOns/{InstalledAddOnSid}/Extensions/{Sid}": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Fetch an instance of an Extension for the Installed Add-on.",
          "operationId": "FetchInstalledAddOnExtension",
          "parameters": [
            {
              "description": "The SID of the InstalledAddOn resource with the extension to fetch.",
              "in": "path",
              "name": "InstalledAddOnSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^XE[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "The SID of the InstalledAddOn Extension resource to fetch.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^XF[0-9a-fA-F]{32}$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.marketplace.installed_add_on.installed_add_on_extension"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "Update an Extension for an Add-on installation.",
          "operationId": "UpdateInstalledAddOnExtension",
          "parameters": [
            {
              "description": "The SID of the InstalledAddOn resource with the extension to update.",
              "in": "path",
              "name": "InstalledAddOnSid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^XE[0-9a-fA-F]{32}$",
                "type": "string"
              }
            },
            {
              "description": "The SID of the InstalledAddOn Extension resource to update.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^XF[0-9a-fA-F]{32}$",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "Enabled": {
                      "description": "Whether the Extension should be invoked.",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "Enabled"
                  ],
                  "title": "UpdateInstalledAddOnExtensionRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.marketplace.installed_add_on.installed_add_on_extension"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/marketplace/InstalledAddOns/{Sid}": {
        "delete": {
          "description": "Remove an Add-on installation from your account",
          "operationId": "DeleteInstalledAddOn",
          "parameters": [
            {
              "description": "The SID of the InstalledAddOn resource to delete.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^XE[0-9a-fA-F]{32}$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "The resource was deleted successfully."
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Fetch an instance of an Add-on currently installed on this Account.",
          "operationId": "FetchInstalledAddOn",
          "parameters": [
            {
              "description": "The SID of the InstalledAddOn resource to fetch.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^XE[0-9a-fA-F]{32}$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.marketplace.installed_add_on"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "Update an Add-on installation for the Account specified.",
          "operationId": "UpdateInstalledAddOn",
          "parameters": [
            {
              "description": "The SID of the InstalledAddOn resource to update.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^XE[0-9a-fA-F]{32}$",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "Configuration": {
                      "description": "Valid JSON object that conform to the configuration schema exposed by the associated AvailableAddOn resource. This is only required by Add-ons that need to be configured",
                      "type": "object"
                    },
                    "UniqueName": {
                      "description": "An application-defined string that uniquely identifies the resource. This value must be unique within the Account.",
                      "type": "string"
                    }
                  },
                  "title": "UpdateInstalledAddOnRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.marketplace.installed_add_on"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/understand/Assistants": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "ListAssistant",
          "parameters": [
            {
              "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
              "in": "query",
              "name": "PageSize",
              "schema": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "assistants": {
                        "items": {
                          "$ref": "#/components/schemas/preview.understand.assistant"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "first_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "next_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "page": {
                            "type": "integer"
                          },
                          "page_size": {
                            "type": "integer"
                          },
                          "previous_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "title": "ListAssistantResponse",
                    "type": "object"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "",
          "operationId": "CreateAssistant",
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "CallbackEvents": {
                      "description": "Space-separated list of callback events that will trigger callbacks.",
                      "type": "string"
                    },
                    "CallbackUrl": {
                      "description": "A user-provided URL to send event callbacks to.",
                      "format": "uri",
                      "type": "string"
                    },
                    "FallbackActions": {
                      "description": "The JSON actions to be executed when the user's input is not recognized as matching any Task.",
                      "type": "object"
                    },
                    "FriendlyName": {
                      "description": "A text description for the Assistant. It is non-unique and can up to 255 characters long.",
                      "type": "string"
                    },
                    "InitiationActions": {
                      "description": "The JSON actions to be executed on inbound phone calls when the Assistant has to say something first.",
                      "type": "object"
                    },
                    "LogQueries": {
                      "description": "A boolean that specifies whether queries should be logged for 30 days further training. If false, no queries will be stored, if true, queries will be stored for 30 days and deleted thereafter. Defaults to true if no value is provided.",
                      "type": "boolean"
                    },
                    "StyleSheet": {
                      "description": "The JSON object that holds the style sheet for the assistant",
                      "type": "object"
                    },
                    "UniqueName": {
                      "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
                      "type": "string"
                    }
                  },
                  "title": "CreateAssistantRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.understand.assistant"
                  }
                }
              },
              "description": "Created"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "list"
      },
      "/understand/Assistants/{AssistantSid}/Dialogues/{Sid}": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "FetchDialogue",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.understand.assistant.dialogue"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/understand/Assistants/{AssistantSid}/FallbackActions": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "FetchAssistantFallbackActions",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.understand.assistant.assistant_fallback_actions"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "",
          "operationId": "UpdateAssistantFallbackActions",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "FallbackActions": {
                      "description": "",
                      "type": "object"
                    }
                  },
                  "title": "UpdateAssistantFallbackActionsRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.understand.assistant.assistant_fallback_actions"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/understand/Assistants/{AssistantSid}/FieldTypes": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "ListFieldType",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
              "in": "query",
              "name": "PageSize",
              "schema": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "field_types": {
                        "items": {
                          "$ref": "#/components/schemas/preview.understand.assistant.field_type"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "first_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "next_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "page": {
                            "type": "integer"
                          },
                          "page_size": {
                            "type": "integer"
                          },
                          "previous_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "title": "ListFieldTypeResponse",
                    "type": "object"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "",
          "operationId": "CreateFieldType",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "FriendlyName": {
                      "description": "A user-provided string that identifies this resource. It is non-unique and can up to 255 characters long.",
                      "type": "string"
                    },
                    "UniqueName": {
                      "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "UniqueName"
                  ],
                  "title": "CreateFieldTypeRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.understand.assistant.field_type"
                  }
                }
              },
              "description": "Created"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "list"
      },
      "/understand/Assistants/{AssistantSid}/FieldTypes/{FieldTypeSid}/FieldValues": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "ListFieldValue",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "path",
              "name": "FieldTypeSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "An ISO language-country string of the value. For example: *en-US*",
              "in": "query",
              "name": "Language",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
              "in": "query",
              "name": "PageSize",
              "schema": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "field_values": {
                        "items": {
                          "$ref": "#/components/schemas/preview.understand.assistant.field_type.field_value"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "first_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "next_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "page": {
                            "type": "integer"
                          },
                          "page_size": {
                            "type": "integer"
                          },
                          "previous_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "title": "ListFieldValueResponse",
                    "type": "object"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "",
          "operationId": "CreateFieldValue",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "path",
              "name": "FieldTypeSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "Language": {
                      "description": "An ISO language-country string of the value.",
                      "type": "string"
                    },
                    "SynonymOf": {
                      "description": "A value that indicates this field value is a synonym of. Empty if the value is not a synonym.",
                      "type": "string"
                    },
                    "Value": {
                      "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "Language",
                    "Value"
                  ],
                  "title": "CreateFieldValueRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.understand.assistant.field_type.field_value"
                  }
                }
              },
              "description": "Created"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "list"
      },
      "/understand/Assistants/{AssistantSid}/FieldTypes/{FieldTypeSid}/FieldValues/{Sid}": {
        "delete": {
          "description": "",
          "operationId": "DeleteFieldValue",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "path",
              "name": "FieldTypeSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "The resource was deleted successfully."
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "FetchFieldValue",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "path",
              "name": "FieldTypeSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.understand.assistant.field_type.field_value"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/understand/Assistants/{AssistantSid}/FieldTypes/{Sid}": {
        "delete": {
          "description": "",
          "operationId": "DeleteFieldType",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "The resource was deleted successfully."
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "FetchFieldType",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.understand.assistant.field_type"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "",
          "operationId": "UpdateFieldType",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "FriendlyName": {
                      "description": "A user-provided string that identifies this resource. It is non-unique and can up to 255 characters long.",
                      "type": "string"
                    },
                    "UniqueName": {
                      "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
                      "type": "string"
                    }
                  },
                  "title": "UpdateFieldTypeRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.understand.assistant.field_type"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/understand/Assistants/{AssistantSid}/InitiationActions": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "FetchAssistantInitiationActions",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.understand.assistant.assistant_initiation_actions"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "",
          "operationId": "UpdateAssistantInitiationActions",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "InitiationActions": {
                      "description": "",
                      "type": "object"
                    }
                  },
                  "title": "UpdateAssistantInitiationActionsRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.understand.assistant.assistant_initiation_actions"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/understand/Assistants/{AssistantSid}/ModelBuilds": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "ListModelBuild",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
              "in": "query",
              "name": "PageSize",
              "schema": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "meta": {
                        "properties": {
                          "first_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "next_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "page": {
                            "type": "integer"
                          },
                          "page_size": {
                            "type": "integer"
                          },
                          "previous_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "model_builds": {
                        "items": {
                          "$ref": "#/components/schemas/preview.understand.assistant.model_build"
                        },
                        "type": "array"
                      }
                    },
                    "title": "ListModelBuildResponse",
                    "type": "object"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "",
          "operationId": "CreateModelBuild",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "StatusCallback": {
                      "description": "",
                      "format": "uri",
                      "type": "string"
                    },
                    "UniqueName": {
                      "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long. For example: v0.1",
                      "type": "string"
                    }
                  },
                  "title": "CreateModelBuildRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.understand.assistant.model_build"
                  }
                }
              },
              "description": "Created"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "list"
      },
      "/understand/Assistants/{AssistantSid}/ModelBuilds/{Sid}": {
        "delete": {
          "description": "",
          "operationId": "DeleteModelBuild",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "The resource was deleted successfully."
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "FetchModelBuild",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.understand.assistant.model_build"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "",
          "operationId": "UpdateModelBuild",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "UniqueName": {
                      "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long. For example: v0.1",
                      "type": "string"
                    }
                  },
                  "title": "UpdateModelBuildRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.understand.assistant.model_build"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/understand/Assistants/{AssistantSid}/Queries": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "ListQuery",
          "parameters": [
            {
              "description": "The unique ID of the parent Assistant.",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "An ISO language-country string of the sample.",
              "in": "query",
              "name": "Language",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The Model Build Sid or unique name of the Model Build to be queried.",
              "in": "query",
              "name": "ModelBuild",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "A string that described the query status. The values can be: pending_review, reviewed, discarded",
              "in": "query",
              "name": "Status",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
              "in": "query",
              "name": "PageSize",
              "schema": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "meta": {
                        "properties": {
                          "first_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "next_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "page": {
                            "type": "integer"
                          },
                          "page_size": {
                            "type": "integer"
                          },
                          "previous_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "queries": {
                        "items": {
                          "$ref": "#/components/schemas/preview.understand.assistant.query"
                        },
                        "type": "array"
                      }
                    },
                    "title": "ListQueryResponse",
                    "type": "object"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "",
          "operationId": "CreateQuery",
          "parameters": [
            {
              "description": "The unique ID of the parent Assistant.",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "Field": {
                      "description": "Constraints the query to a given Field with an task. Useful when you know the Field you are expecting. It accepts one field in the format *task-unique-name-1*:*field-unique-name*",
                      "type": "string"
                    },
                    "Language": {
                      "description": "An ISO language-country string of the sample.",
                      "type": "string"
                    },
                    "ModelBuild": {
                      "description": "The Model Build Sid or unique name of the Model Build to be queried.",
                      "type": "string"
                    },
                    "Query": {
                      "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. It can be up to 2048 characters long.",
                      "type": "string"
                    },
                    "Tasks": {
                      "description": "Constraints the query to a set of tasks. Useful when you need to constrain the paths the user can take. Tasks should be comma separated *task-unique-name-1*, *task-unique-name-2*",
                      "type": "string"
                    }
                  },
                  "required": [
                    "Language",
                    "Query"
                  ],
                  "title": "CreateQueryRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.understand.assistant.query"
                  }
                }
              },
              "description": "Created"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "list"
      },
      "/understand/Assistants/{AssistantSid}/Queries/{Sid}": {
        "delete": {
          "description": "",
          "operationId": "DeleteQuery",
          "parameters": [
            {
              "description": "The unique ID of the Assistant.",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "A 34 character string that uniquely identifies this resource.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "The resource was deleted successfully."
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "FetchQuery",
          "parameters": [
            {
              "description": "The unique ID of the Assistant.",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "A 34 character string that uniquely identifies this resource.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.understand.assistant.query"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "",
          "operationId": "UpdateQuery",
          "parameters": [
            {
              "description": "The unique ID of the parent Assistant.",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "A 34 character string that uniquely identifies this resource.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "SampleSid": {
                      "description": "An optional reference to the Sample created from this query.",
                      "maxLength": 34,
                      "minLength": 34,
                      "pattern": "^UF[0-9a-fA-F]{32}$",
                      "type": "string"
                    },
                    "Status": {
                      "description": "A string that described the query status. The values can be: pending_review, reviewed, discarded",
                      "type": "string"
                    }
                  },
                  "title": "UpdateQueryRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.understand.assistant.query"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/understand/Assistants/{AssistantSid}/StyleSheet": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Returns Style sheet JSON object for this Assistant",
          "operationId": "FetchStyleSheet",
          "parameters": [
            {
              "description": "The unique ID of the Assistant",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.understand.assistant.style_sheet"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "Updates the style sheet for an assistant identified by {AssistantSid} or {AssistantUniqueName}.",
          "operationId": "UpdateStyleSheet",
          "parameters": [
            {
              "description": "The unique ID of the Assistant",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "StyleSheet": {
                      "description": "The JSON Style sheet string",
                      "type": "object"
                    }
                  },
                  "title": "UpdateStyleSheetRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.understand.assistant.style_sheet"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/understand/Assistants/{AssistantSid}/Tasks": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "ListTask",
          "parameters": [
            {
              "description": "The unique ID of the Assistant.",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
              "in": "query",
              "name": "PageSize",
              "schema": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "meta": {
                        "properties": {
                          "first_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "next_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "page": {
                            "type": "integer"
                          },
                          "page_size": {
                            "type": "integer"
                          },
                          "previous_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "tasks": {
                        "items": {
                          "$ref": "#/components/schemas/preview.understand.assistant.task"
                        },
                        "type": "array"
                      }
                    },
                    "title": "ListTaskResponse",
                    "type": "object"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "",
          "operationId": "CreateTask",
          "parameters": [
            {
              "description": "The unique ID of the Assistant.",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "Actions": {
                      "description": "A user-provided JSON object encoded as a string to specify the actions for this task. It is optional and non-unique.",
                      "type": "object"
                    },
                    "ActionsUrl": {
                      "description": "User-provided HTTP endpoint where from the assistant fetches actions",
                      "format": "uri",
                      "type": "string"
                    },
                    "FriendlyName": {
                      "description": "A user-provided string that identifies this resource. It is non-unique and can up to 255 characters long.",
                      "type": "string"
                    },
                    "UniqueName": {
                      "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "UniqueName"
                  ],
                  "title": "CreateTaskRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.understand.assistant.task"
                  }
                }
              },
              "description": "Created"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "list"
      },
      "/understand/Assistants/{AssistantSid}/Tasks/{Sid}": {
        "delete": {
          "description": "",
          "operationId": "DeleteTask",
          "parameters": [
            {
              "description": "The unique ID of the Assistant.",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "A 34 character string that uniquely identifies this resource.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "The resource was deleted successfully."
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "FetchTask",
          "parameters": [
            {
              "description": "The unique ID of the Assistant.",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "A 34 character string that uniquely identifies this resource.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.understand.assistant.task"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "",
          "operationId": "UpdateTask",
          "parameters": [
            {
              "description": "The unique ID of the Assistant.",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "A 34 character string that uniquely identifies this resource.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "Actions": {
                      "description": "A user-provided JSON object encoded as a string to specify the actions for this task. It is optional and non-unique.",
                      "type": "object"
                    },
                    "ActionsUrl": {
                      "description": "User-provided HTTP endpoint where from the assistant fetches actions",
                      "format": "uri",
                      "type": "string"
                    },
                    "FriendlyName": {
                      "description": "A user-provided string that identifies this resource. It is non-unique and can up to 255 characters long.",
                      "type": "string"
                    },
                    "UniqueName": {
                      "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
                      "type": "string"
                    }
                  },
                  "title": "UpdateTaskRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.understand.assistant.task"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/understand/Assistants/{AssistantSid}/Tasks/{TaskSid}/Actions": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "Returns JSON actions for this Task.",
          "operationId": "FetchTaskActions",
          "parameters": [
            {
              "description": "The unique ID of the parent Assistant.",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The unique ID of the Task.",
              "in": "path",
              "name": "TaskSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.understand.assistant.task.task_actions"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "Updates the actions of an Task identified by {TaskSid} or {TaskUniqueName}.",
          "operationId": "UpdateTaskActions",
          "parameters": [
            {
              "description": "The unique ID of the parent Assistant.",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The unique ID of the Task.",
              "in": "path",
              "name": "TaskSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "Actions": {
                      "description": "The JSON actions that instruct the Assistant how to perform this task.",
                      "type": "object"
                    }
                  },
                  "title": "UpdateTaskActionsRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.understand.assistant.task.task_actions"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/understand/Assistants/{AssistantSid}/Tasks/{TaskSid}/Fields": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "ListField",
          "parameters": [
            {
              "description": "The unique ID of the Assistant.",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The unique ID of the Task associated with this Field.",
              "in": "path",
              "name": "TaskSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
              "in": "query",
              "name": "PageSize",
              "schema": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "fields": {
                        "items": {
                          "$ref": "#/components/schemas/preview.understand.assistant.task.field"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "first_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "next_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "page": {
                            "type": "integer"
                          },
                          "page_size": {
                            "type": "integer"
                          },
                          "previous_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "title": "ListFieldResponse",
                    "type": "object"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "",
          "operationId": "CreateField",
          "parameters": [
            {
              "description": "The unique ID of the parent Assistant.",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The unique ID of the Task associated with this Field.",
              "in": "path",
              "name": "TaskSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "FieldType": {
                      "description": "The unique name or sid of the FieldType. It can be any [Built-in Field Type](https://www.twilio.com/docs/assistant/api/built-in-field-types) or the unique_name or the Field Type sid of a custom Field Type.",
                      "type": "string"
                    },
                    "UniqueName": {
                      "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "FieldType",
                    "UniqueName"
                  ],
                  "title": "CreateFieldRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.understand.assistant.task.field"
                  }
                }
              },
              "description": "Created"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "list"
      },
      "/understand/Assistants/{AssistantSid}/Tasks/{TaskSid}/Fields/{Sid}": {
        "delete": {
          "description": "",
          "operationId": "DeleteField",
          "parameters": [
            {
              "description": "The unique ID of the Assistant.",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The unique ID of the Task associated with this Field.",
              "in": "path",
              "name": "TaskSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "A 34 character string that uniquely identifies this resource.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "The resource was deleted successfully."
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "FetchField",
          "parameters": [
            {
              "description": "The unique ID of the Assistant.",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The unique ID of the Task associated with this Field.",
              "in": "path",
              "name": "TaskSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "A 34 character string that uniquely identifies this resource.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.understand.assistant.task.field"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/understand/Assistants/{AssistantSid}/Tasks/{TaskSid}/Samples": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "ListSample",
          "parameters": [
            {
              "description": "The unique ID of the Assistant.",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The unique ID of the Task associated with this Sample.",
              "in": "path",
              "name": "TaskSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "An ISO language-country string of the sample.",
              "in": "query",
              "name": "Language",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
              "in": "query",
              "name": "PageSize",
              "schema": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "meta": {
                        "properties": {
                          "first_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "next_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "page": {
                            "type": "integer"
                          },
                          "page_size": {
                            "type": "integer"
                          },
                          "previous_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "samples": {
                        "items": {
                          "$ref": "#/components/schemas/preview.understand.assistant.task.sample"
                        },
                        "type": "array"
                      }
                    },
                    "title": "ListSampleResponse",
                    "type": "object"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "",
          "operationId": "CreateSample",
          "parameters": [
            {
              "description": "The unique ID of the Assistant.",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The unique ID of the Task associated with this Sample.",
              "in": "path",
              "name": "TaskSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "Language": {
                      "description": "An ISO language-country string of the sample.",
                      "type": "string"
                    },
                    "SourceChannel": {
                      "description": "The communication channel the sample was captured. It can be: *voice*, *sms*, *chat*, *alexa*, *google-assistant*, or *slack*. If not included the value will be null",
                      "type": "string"
                    },
                    "TaggedText": {
                      "description": "The text example of how end-users may express this task. The sample may contain Field tag blocks.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "Language",
                    "TaggedText"
                  ],
                  "title": "CreateSampleRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.understand.assistant.task.sample"
                  }
                }
              },
              "description": "Created"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "list"
      },
      "/understand/Assistants/{AssistantSid}/Tasks/{TaskSid}/Samples/{Sid}": {
        "delete": {
          "description": "",
          "operationId": "DeleteSample",
          "parameters": [
            {
              "description": "The unique ID of the Assistant.",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The unique ID of the Task associated with this Sample.",
              "in": "path",
              "name": "TaskSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "A 34 character string that uniquely identifies this resource.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^UF[0-9a-fA-F]{32}$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "The resource was deleted successfully."
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "FetchSample",
          "parameters": [
            {
              "description": "The unique ID of the Assistant.",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The unique ID of the Task associated with this Sample.",
              "in": "path",
              "name": "TaskSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "A 34 character string that uniquely identifies this resource.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^UF[0-9a-fA-F]{32}$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.understand.assistant.task.sample"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "",
          "operationId": "UpdateSample",
          "parameters": [
            {
              "description": "The unique ID of the Assistant.",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The unique ID of the Task associated with this Sample.",
              "in": "path",
              "name": "TaskSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "A 34 character string that uniquely identifies this resource.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^UF[0-9a-fA-F]{32}$",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "Language": {
                      "description": "An ISO language-country string of the sample.",
                      "type": "string"
                    },
                    "SourceChannel": {
                      "description": "The communication channel the sample was captured. It can be: *voice*, *sms*, *chat*, *alexa*, *google-assistant*, or *slack*. If not included the value will be null",
                      "type": "string"
                    },
                    "TaggedText": {
                      "description": "The text example of how end-users may express this task. The sample may contain Field tag blocks.",
                      "type": "string"
                    }
                  },
                  "title": "UpdateSampleRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.understand.assistant.task.sample"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/understand/Assistants/{AssistantSid}/Tasks/{TaskSid}/Statistics": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "FetchTaskStatistics",
          "parameters": [
            {
              "description": "The unique ID of the parent Assistant.",
              "in": "path",
              "name": "AssistantSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The unique ID of the Task associated with this Field.",
              "in": "path",
              "name": "TaskSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.understand.assistant.task.task_statistics"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/understand/Assistants/{Sid}": {
        "delete": {
          "description": "",
          "operationId": "DeleteAssistant",
          "parameters": [
            {
              "description": "A 34 character string that uniquely identifies this resource.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "The resource was deleted successfully."
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "FetchAssistant",
          "parameters": [
            {
              "description": "A 34 character string that uniquely identifies this resource.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.understand.assistant"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "",
          "operationId": "UpdateAssistant",
          "parameters": [
            {
              "description": "A 34 character string that uniquely identifies this resource.",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "CallbackEvents": {
                      "description": "Space-separated list of callback events that will trigger callbacks.",
                      "type": "string"
                    },
                    "CallbackUrl": {
                      "description": "A user-provided URL to send event callbacks to.",
                      "format": "uri",
                      "type": "string"
                    },
                    "FallbackActions": {
                      "description": "The JSON actions to be executed when the user's input is not recognized as matching any Task.",
                      "type": "object"
                    },
                    "FriendlyName": {
                      "description": "A text description for the Assistant. It is non-unique and can up to 255 characters long.",
                      "type": "string"
                    },
                    "InitiationActions": {
                      "description": "The JSON actions to be executed on inbound phone calls when the Assistant has to say something first.",
                      "type": "object"
                    },
                    "LogQueries": {
                      "description": "A boolean that specifies whether queries should be logged for 30 days further training. If false, no queries will be stored, if true, queries will be stored for 30 days and deleted thereafter. Defaults to true if no value is provided.",
                      "type": "boolean"
                    },
                    "StyleSheet": {
                      "description": "The JSON object that holds the style sheet for the assistant",
                      "type": "object"
                    },
                    "UniqueName": {
                      "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
                      "type": "string"
                    }
                  },
                  "title": "UpdateAssistantRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.understand.assistant"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/wireless/Commands": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "ListCommand",
          "parameters": [
            {
              "description": "",
              "in": "query",
              "name": "Device",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "query",
              "name": "Sim",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "query",
              "name": "Status",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "query",
              "name": "Direction",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
              "in": "query",
              "name": "PageSize",
              "schema": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "commands": {
                        "items": {
                          "$ref": "#/components/schemas/preview.wireless.command"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "first_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "next_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "page": {
                            "type": "integer"
                          },
                          "page_size": {
                            "type": "integer"
                          },
                          "previous_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "title": "ListCommandResponse",
                    "type": "object"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "",
          "operationId": "CreateCommand",
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "CallbackMethod": {
                      "description": "",
                      "type": "string"
                    },
                    "CallbackUrl": {
                      "description": "",
                      "format": "uri",
                      "type": "string"
                    },
                    "Command": {
                      "description": "",
                      "type": "string"
                    },
                    "CommandMode": {
                      "description": "",
                      "type": "string"
                    },
                    "Device": {
                      "description": "",
                      "type": "string"
                    },
                    "IncludeSid": {
                      "description": "",
                      "type": "string"
                    },
                    "Sim": {
                      "description": "",
                      "type": "string"
                    }
                  },
                  "required": [
                    "Command"
                  ],
                  "title": "CreateCommandRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.wireless.command"
                  }
                }
              },
              "description": "Created"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "list"
      },
      "/wireless/Commands/{Sid}": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "FetchCommand",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "maxLength": 34,
                "minLength": 34,
                "pattern": "^DC[0-9a-fA-F]{32}$",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.wireless.command"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/wireless/RatePlans": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "ListRatePlan",
          "parameters": [
            {
              "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
              "in": "query",
              "name": "PageSize",
              "schema": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "meta": {
                        "properties": {
                          "first_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "next_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "page": {
                            "type": "integer"
                          },
                          "page_size": {
                            "type": "integer"
                          },
                          "previous_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "rate_plans": {
                        "items": {
                          "$ref": "#/components/schemas/preview.wireless.rate_plan"
                        },
                        "type": "array"
                      }
                    },
                    "title": "ListRatePlanResponse",
                    "type": "object"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "",
          "operationId": "CreateRatePlan",
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "CommandsEnabled": {
                      "description": "",
                      "type": "boolean"
                    },
                    "DataEnabled": {
                      "description": "",
                      "type": "boolean"
                    },
                    "DataLimit": {
                      "description": "",
                      "type": "integer"
                    },
                    "DataMetering": {
                      "description": "",
                      "type": "string"
                    },
                    "FriendlyName": {
                      "description": "",
                      "type": "string"
                    },
                    "InternationalRoaming": {
                      "description": "",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "MessagingEnabled": {
                      "description": "",
                      "type": "boolean"
                    },
                    "NationalRoamingEnabled": {
                      "description": "",
                      "type": "boolean"
                    },
                    "UniqueName": {
                      "description": "",
                      "type": "string"
                    },
                    "VoiceEnabled": {
                      "description": "",
                      "type": "boolean"
                    }
                  },
                  "title": "CreateRatePlanRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.wireless.rate_plan"
                  }
                }
              },
              "description": "Created"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "list"
      },
      "/wireless/RatePlans/{Sid}": {
        "delete": {
          "description": "",
          "operationId": "DeleteRatePlan",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "The resource was deleted successfully."
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "FetchRatePlan",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.wireless.rate_plan"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "",
          "operationId": "UpdateRatePlan",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "FriendlyName": {
                      "description": "",
                      "type": "string"
                    },
                    "UniqueName": {
                      "description": "",
                      "type": "string"
                    }
                  },
                  "title": "UpdateRatePlanRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.wireless.rate_plan"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/wireless/Sims": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "ListSim",
          "parameters": [
            {
              "description": "",
              "in": "query",
              "name": "Status",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "query",
              "name": "Iccid",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "query",
              "name": "RatePlan",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "query",
              "name": "EId",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "query",
              "name": "SimRegistrationCode",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
              "in": "query",
              "name": "PageSize",
              "schema": {
                "maximum": 1000,
                "minimum": 1,
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "meta": {
                        "properties": {
                          "first_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "next_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "page": {
                            "type": "integer"
                          },
                          "page_size": {
                            "type": "integer"
                          },
                          "previous_page_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "sims": {
                        "items": {
                          "$ref": "#/components/schemas/preview.wireless.sim"
                        },
                        "type": "array"
                      }
                    },
                    "title": "ListSimResponse",
                    "type": "object"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "list"
      },
      "/wireless/Sims/{Sid}": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "FetchSim",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.wireless.sim"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "post": {
          "description": "",
          "operationId": "UpdateSim",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "Sid",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "properties": {
                    "CallbackMethod": {
                      "description": "",
                      "type": "string"
                    },
                    "CallbackUrl": {
                      "description": "",
                      "format": "uri",
                      "type": "string"
                    },
                    "CommandsCallbackMethod": {
                      "description": "",
                      "enum": [
                        "HEAD",
                        "GET",
                        "POST",
                        "PATCH",
                        "PUT",
                        "DELETE"
                      ],
                      "type": "string"
                    },
                    "CommandsCallbackUrl": {
                      "description": "",
                      "format": "uri",
                      "type": "string"
                    },
                    "FriendlyName": {
                      "description": "",
                      "type": "string"
                    },
                    "RatePlan": {
                      "description": "",
                      "type": "string"
                    },
                    "SmsFallbackMethod": {
                      "description": "",
                      "enum": [
                        "HEAD",
                        "GET",
                        "POST",
                        "PATCH",
                        "PUT",
                        "DELETE"
                      ],
                      "type": "string"
                    },
                    "SmsFallbackUrl": {
                      "description": "",
                      "format": "uri",
                      "type": "string"
                    },
                    "SmsMethod": {
                      "description": "",
                      "enum": [
                        "HEAD",
                        "GET",
                        "POST",
                        "PATCH",
                        "PUT",
                        "DELETE"
                      ],
                      "type": "string"
                    },
                    "SmsUrl": {
                      "description": "",
                      "format": "uri",
                      "type": "string"
                    },
                    "Status": {
                      "description": "",
                      "type": "string"
                    },
                    "UniqueName": {
                      "description": "",
                      "type": "string"
                    },
                    "VoiceFallbackMethod": {
                      "description": "",
                      "enum": [
                        "HEAD",
                        "GET",
                        "POST",
                        "PATCH",
                        "PUT",
                        "DELETE"
                      ],
                      "type": "string"
                    },
                    "VoiceFallbackUrl": {
                      "description": "",
                      "format": "uri",
                      "type": "string"
                    },
                    "VoiceMethod": {
                      "description": "",
                      "enum": [
                        "HEAD",
                        "GET",
                        "POST",
                        "PATCH",
                        "PUT",
                        "DELETE"
                      ],
                      "type": "string"
                    },
                    "VoiceUrl": {
                      "description": "",
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "title": "UpdateSimRequest",
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.wireless.sim"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      },
      "/wireless/Sims/{SimSid}/Usage": {
        "description": "TODO: Resource-level docs",
        "get": {
          "description": "",
          "operationId": "FetchUsage",
          "parameters": [
            {
              "description": "",
              "in": "path",
              "name": "SimSid",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "query",
              "name": "End",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "",
              "in": "query",
              "name": "Start",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/preview.wireless.sim.usage"
                  }
                }
              },
              "description": "OK"
            }
          },
          "security": [
            {
              "accountSid_authToken": []
            }
          ],
          "x-maturity": [
            "Preview"
          ]
        },
        "servers": [
          {
            "url": "https://preview.twilio.com"
          }
        ],
        "x-default-output-properties": [],
        "x-path-type": "instance"
      }
    },
    "x-maturity": [
      {
        "description": "PLEASE NOTE that this is a Preview product that is subject to change. Use it with caution. If you currently do not have developer preview access, please contact help@twilio.com.",
        "name": "Preview"
      }
    ]
  }