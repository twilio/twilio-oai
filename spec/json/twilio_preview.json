{
  "components": {
    "schemas": {
      "preview.deployed_devices.fleet.certificate": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^CY[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "A string that uniquely identifies this Certificate."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "URL of this Certificate."
          },
          "friendly_name": {
            "type": "string",
            "nullable": true,
            "description": "A human readable description for this Certificate."
          },
          "fleet_sid": {
            "type": "string",
            "nullable": true,
            "description": "The unique identifier of the Fleet."
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique SID that identifies this Account."
          },
          "device_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^TH[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique identifier of a mapped Device."
          },
          "thumbprint": {
            "type": "string",
            "nullable": true,
            "description": "A Certificate unique payload hash."
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date this Certificate was created."
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date this Certificate was updated."
          }
        }
      },
      "preview.deployed_devices.fleet.deployment": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^DL[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "A string that uniquely identifies this Deployment."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "URL of this Deployment."
          },
          "friendly_name": {
            "type": "string",
            "nullable": true,
            "description": "A human readable description for this Deployment"
          },
          "fleet_sid": {
            "type": "string",
            "nullable": true,
            "description": "The unique identifier of the Fleet."
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique SID that identifies this Account."
          },
          "sync_service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique identifier of the Sync service instance."
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date this Deployment was created."
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date this Deployment was updated."
          }
        }
      },
      "preview.deployed_devices.fleet.device": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^TH[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "A string that uniquely identifies this Device."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "URL of this Device."
          },
          "unique_name": {
            "type": "string",
            "nullable": true,
            "description": "A unique, addressable name of this Device."
          },
          "friendly_name": {
            "type": "string",
            "nullable": true,
            "description": "A human readable description for this Device"
          },
          "fleet_sid": {
            "type": "string",
            "nullable": true,
            "description": "The unique identifier of the Fleet."
          },
          "enabled": {
            "type": "boolean",
            "nullable": true,
            "description": "Device enabled flag."
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique SID that identifies this Account."
          },
          "identity": {
            "type": "string",
            "nullable": true,
            "description": "An identifier of the Device user."
          },
          "deployment_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^DL[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique SID of the Deployment group."
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date this Device was created."
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date this Device was updated."
          },
          "date_authenticated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date this Device was authenticated."
          }
        }
      },
      "preview.deployed_devices.fleet": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^TH[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "A string that uniquely identifies this Fleet."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "URL of this Fleet."
          },
          "unique_name": {
            "type": "string",
            "nullable": true,
            "description": "A unique, addressable name of this Fleet."
          },
          "friendly_name": {
            "type": "string",
            "nullable": true,
            "description": "A human readable description for this Fleet."
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique SID that identifies this Account."
          },
          "default_deployment_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^DL[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique SID that identifies this Fleet's default Deployment."
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date this Fleet was created."
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date this Fleet was updated."
          },
          "links": {
            "type": "object",
            "format": "uri-map",
            "nullable": true,
            "description": "Nested resource URLs."
          }
        }
      },
      "preview.deployed_devices.fleet.key": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^KY[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "A string that uniquely identifies this Key."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "URL of this Key."
          },
          "friendly_name": {
            "type": "string",
            "nullable": true,
            "description": "A human readable description for this Key."
          },
          "fleet_sid": {
            "type": "string",
            "nullable": true,
            "description": "The unique identifier of the Fleet."
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique SID that identifies this Account."
          },
          "device_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^TH[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique identifier of a mapped Device."
          },
          "secret": {
            "type": "string",
            "nullable": true,
            "description": "The key secret."
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date this Key credential was created."
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date this Key credential was updated."
          }
        }
      },
      "preview.hosted_numbers.authorization_document": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^PX[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "AuthorizationDocument sid."
          },
          "address_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AD[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "Address sid."
          },
          "status": {
            "type": "string",
            "$ref": "#/components/schemas/authorization_document_enum_status",
            "nullable": true,
            "description": "The Status of this AuthorizationDocument."
          },
          "email": {
            "type": "string",
            "nullable": true,
            "description": "Email."
          },
          "cc_emails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "description": "A list of emails."
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date this AuthorizationDocument was created."
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date this AuthorizationDocument was updated."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "links": {
            "type": "object",
            "format": "uri-map",
            "nullable": true
          }
        }
      },
      "authorization_document_enum_status": {
        "type": "string",
        "enum": [
          "opened",
          "signing",
          "signed",
          "canceled",
          "failed"
        ]
      },
      "preview.hosted_numbers.authorization_document.dependent_hosted_number_order": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^HR[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "HostedNumberOrder sid."
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "Account sid."
          },
          "incoming_phone_number_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^PN[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "IncomingPhoneNumber sid."
          },
          "address_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AD[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "Address sid."
          },
          "signing_document_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^PX[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "LOA document sid."
          },
          "phone_number": {
            "type": "string",
            "format": "phone-number",
            "nullable": true,
            "description": "An E164 formatted phone number."
          },
          "capabilities": {
            "type": "object",
            "format": "phone-number-capabilities",
            "properties": {
              "mms": {
                "type": "boolean"
              },
              "sms": {
                "type": "boolean"
              },
              "voice": {
                "type": "boolean"
              },
              "fax": {
                "type": "boolean"
              }
            },
            "nullable": true,
            "description": "A mapping of phone number capabilities."
          },
          "friendly_name": {
            "type": "string",
            "nullable": true,
            "description": "A human readable description of this resource."
          },
          "unique_name": {
            "type": "string",
            "nullable": true,
            "description": "A unique, developer assigned name of this HostedNumberOrder."
          },
          "status": {
            "type": "string",
            "$ref": "#/components/schemas/dependent_hosted_number_order_enum_status",
            "nullable": true,
            "description": "The Status of this HostedNumberOrder."
          },
          "failure_reason": {
            "type": "string",
            "nullable": true,
            "description": "Why a hosted_number_order reached status \"action-required\""
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date this HostedNumberOrder was created."
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date this HostedNumberOrder was updated."
          },
          "verification_attempts": {
            "type": "integer",
            "nullable": true,
            "description": "The number of attempts made to verify ownership of the phone number."
          },
          "email": {
            "type": "string",
            "nullable": true,
            "description": "Email."
          },
          "cc_emails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "description": "A list of emails."
          },
          "verification_type": {
            "type": "string",
            "$ref": "#/components/schemas/dependent_hosted_number_order_enum_verification_type",
            "nullable": true,
            "description": "The method used for verifying ownership of the number to be hosted."
          },
          "verification_document_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^RI[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "Verification Document Sid."
          },
          "extension": {
            "type": "string",
            "nullable": true,
            "description": "Phone extension to use for ownership verification call."
          },
          "call_delay": {
            "type": "integer",
            "nullable": true,
            "description": "Seconds (0-30) to delay ownership verification call by."
          },
          "verification_code": {
            "type": "string",
            "nullable": true,
            "description": "The digits passed during the ownership verification call."
          },
          "verification_call_sids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "description": "List of IDs for ownership verification calls."
          }
        }
      },
      "dependent_hosted_number_order_enum_status": {
        "type": "string",
        "enum": [
          "received",
          "pending-verification",
          "verified",
          "pending-loa",
          "carrier-processing",
          "testing",
          "completed",
          "failed",
          "action-required"
        ]
      },
      "dependent_hosted_number_order_enum_verification_type": {
        "type": "string",
        "enum": [
          "phone-call",
          "phone-bill"
        ]
      },
      "preview.hosted_numbers.hosted_number_order": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^HR[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "HostedNumberOrder sid."
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "Account Sid."
          },
          "incoming_phone_number_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^PN[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "IncomingPhoneNumber sid."
          },
          "address_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AD[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "Address sid."
          },
          "signing_document_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^PX[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "LOA document sid."
          },
          "phone_number": {
            "type": "string",
            "format": "phone-number",
            "nullable": true,
            "description": "An E164 formatted phone number."
          },
          "capabilities": {
            "type": "object",
            "format": "phone-number-capabilities",
            "properties": {
              "mms": {
                "type": "boolean"
              },
              "sms": {
                "type": "boolean"
              },
              "voice": {
                "type": "boolean"
              },
              "fax": {
                "type": "boolean"
              }
            },
            "nullable": true,
            "description": "A mapping of phone number capabilities."
          },
          "friendly_name": {
            "type": "string",
            "nullable": true,
            "description": "A human readable description of this resource."
          },
          "unique_name": {
            "type": "string",
            "nullable": true,
            "description": "A unique, developer assigned name of this HostedNumberOrder."
          },
          "status": {
            "type": "string",
            "$ref": "#/components/schemas/hosted_number_order_enum_status",
            "nullable": true,
            "description": "The Status of this HostedNumberOrder."
          },
          "failure_reason": {
            "type": "string",
            "nullable": true,
            "description": "Why a hosted_number_order reached status \"action-required\""
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date this HostedNumberOrder was created."
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date this HostedNumberOrder was updated."
          },
          "verification_attempts": {
            "type": "integer",
            "nullable": true,
            "description": "The number of attempts made to verify ownership of the phone number."
          },
          "email": {
            "type": "string",
            "nullable": true,
            "description": "Email."
          },
          "cc_emails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "description": "A list of emails."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The URL of this HostedNumberOrder."
          },
          "verification_type": {
            "type": "string",
            "$ref": "#/components/schemas/hosted_number_order_enum_verification_type",
            "nullable": true,
            "description": "The method used for verifying ownership of the number to be hosted."
          },
          "verification_document_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^RI[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "Verification Document Sid."
          },
          "extension": {
            "type": "string",
            "nullable": true,
            "description": "Phone extension to use for ownership verification call."
          },
          "call_delay": {
            "type": "integer",
            "nullable": true,
            "description": "Seconds (0-30) to delay ownership verification call by."
          },
          "verification_code": {
            "type": "string",
            "nullable": true,
            "description": "The digits passed during the ownership verification call."
          },
          "verification_call_sids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "description": "List of IDs for ownership verification calls."
          }
        }
      },
      "hosted_number_order_enum_status": {
        "type": "string",
        "enum": [
          "received",
          "pending-verification",
          "verified",
          "pending-loa",
          "carrier-processing",
          "testing",
          "completed",
          "failed",
          "action-required"
        ]
      },
      "hosted_number_order_enum_verification_type": {
        "type": "string",
        "enum": [
          "phone-call",
          "phone-bill"
        ]
      },
      "preview.marketplace.available_add_on": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^XB[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique string that identifies the resource"
          },
          "friendly_name": {
            "type": "string",
            "nullable": true,
            "description": "The string that you assigned to describe the resource"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "A short description of the Add-on's functionality"
          },
          "pricing_type": {
            "type": "string",
            "nullable": true,
            "description": "How customers are charged for using this Add-on"
          },
          "configuration_schema": {
            "nullable": true,
            "description": "The JSON object with the configuration that must be provided when installing a given Add-on"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The absolute URL of the resource"
          },
          "links": {
            "type": "object",
            "format": "uri-map",
            "nullable": true,
            "description": "The URLs of related resources"
          }
        }
      },
      "preview.marketplace.available_add_on.available_add_on_extension": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^XF[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique string that identifies the resource"
          },
          "available_add_on_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^XB[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the AvailableAddOn resource to which this extension applies"
          },
          "friendly_name": {
            "type": "string",
            "nullable": true,
            "description": "The string that you assigned to describe the resource"
          },
          "product_name": {
            "type": "string",
            "nullable": true,
            "description": "The name of the Extension's Product"
          },
          "unique_name": {
            "type": "string",
            "nullable": true,
            "description": "An application-defined string that uniquely identifies the resource"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The absolute URL of the resource"
          }
        }
      },
      "preview.marketplace.installed_add_on": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^XE[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique string that identifies the resource"
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Account that created the resource"
          },
          "friendly_name": {
            "type": "string",
            "nullable": true,
            "description": "The string that you assigned to describe the resource"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "A short description of the Add-on's functionality"
          },
          "configuration": {
            "nullable": true,
            "description": "The JSON object that represents the current configuration of installed Add-on"
          },
          "unique_name": {
            "type": "string",
            "nullable": true,
            "description": "An application-defined string that uniquely identifies the resource"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the resource was created"
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the resource was last updated"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The absolute URL of the resource"
          },
          "links": {
            "type": "object",
            "format": "uri-map",
            "nullable": true,
            "description": "The URLs of related resources"
          }
        }
      },
      "preview.marketplace.installed_add_on.installed_add_on_extension": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^XF[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique string that identifies the resource"
          },
          "installed_add_on_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^XE[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the InstalledAddOn resource to which this extension applies"
          },
          "friendly_name": {
            "type": "string",
            "nullable": true,
            "description": "The string that you assigned to describe the resource"
          },
          "product_name": {
            "type": "string",
            "nullable": true,
            "description": "The name of the Extension's Product"
          },
          "unique_name": {
            "type": "string",
            "nullable": true,
            "description": "An application-defined string that uniquely identifies the resource"
          },
          "enabled": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether the Extension will be invoked"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The absolute URL of the resource"
          }
        }
      },
      "preview.sync.service.document": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ET[0-9a-fA-F]{32}$",
            "nullable": true
          },
          "unique_name": {
            "type": "string",
            "nullable": true
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true
          },
          "service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "links": {
            "type": "object",
            "format": "uri-map",
            "nullable": true
          },
          "revision": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "nullable": true
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created_by": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "preview.sync.service.document.document_permission": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "Twilio Account SID."
          },
          "service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "Sync Service Instance SID."
          },
          "document_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ET[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "Sync Document SID."
          },
          "identity": {
            "type": "string",
            "nullable": true,
            "description": "Identity of the user to whom the Sync Document Permission applies."
          },
          "read": {
            "type": "boolean",
            "nullable": true,
            "description": "Read access."
          },
          "write": {
            "type": "boolean",
            "nullable": true,
            "description": "Write access."
          },
          "manage": {
            "type": "boolean",
            "nullable": true,
            "description": "Manage access."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "URL of this Sync Document Permission."
          }
        }
      },
      "preview.sync.service": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "nullable": true
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true
          },
          "friendly_name": {
            "type": "string",
            "nullable": true
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "webhook_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "reachability_webhooks_enabled": {
            "type": "boolean",
            "nullable": true
          },
          "acl_enabled": {
            "type": "boolean",
            "nullable": true
          },
          "links": {
            "type": "object",
            "format": "uri-map",
            "nullable": true
          }
        }
      },
      "preview.sync.service.sync_list": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ES[0-9a-fA-F]{32}$",
            "nullable": true
          },
          "unique_name": {
            "type": "string",
            "nullable": true
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true
          },
          "service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "links": {
            "type": "object",
            "format": "uri-map",
            "nullable": true
          },
          "revision": {
            "type": "string",
            "nullable": true
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created_by": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "preview.sync.service.sync_list.sync_list_item": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "nullable": true
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true
          },
          "service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "nullable": true
          },
          "list_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ES[0-9a-fA-F]{32}$",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "revision": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "nullable": true
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created_by": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "sync_list_item_enum_query_result_order": {
        "type": "string",
        "enum": [
          "asc",
          "desc"
        ]
      },
      "sync_list_item_enum_query_from_bound_type": {
        "type": "string",
        "enum": [
          "inclusive",
          "exclusive"
        ]
      },
      "preview.sync.service.sync_list.sync_list_permission": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "Twilio Account SID."
          },
          "service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "Sync Service Instance SID."
          },
          "list_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ES[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "Sync List SID."
          },
          "identity": {
            "type": "string",
            "nullable": true,
            "description": "Identity of the user to whom the Sync List Permission applies."
          },
          "read": {
            "type": "boolean",
            "nullable": true,
            "description": "Read access."
          },
          "write": {
            "type": "boolean",
            "nullable": true,
            "description": "Write access."
          },
          "manage": {
            "type": "boolean",
            "nullable": true,
            "description": "Manage access."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "URL of this Sync List Permission."
          }
        }
      },
      "preview.sync.service.sync_map": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^MP[0-9a-fA-F]{32}$",
            "nullable": true
          },
          "unique_name": {
            "type": "string",
            "nullable": true
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true
          },
          "service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "links": {
            "type": "object",
            "format": "uri-map",
            "nullable": true
          },
          "revision": {
            "type": "string",
            "nullable": true
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created_by": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "preview.sync.service.sync_map.sync_map_item": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true
          },
          "service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "nullable": true
          },
          "map_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^MP[0-9a-fA-F]{32}$",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "revision": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "nullable": true
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created_by": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "sync_map_item_enum_query_result_order": {
        "type": "string",
        "enum": [
          "asc",
          "desc"
        ]
      },
      "sync_map_item_enum_query_from_bound_type": {
        "type": "string",
        "enum": [
          "inclusive",
          "exclusive"
        ]
      },
      "preview.sync.service.sync_map.sync_map_permission": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "Twilio Account SID."
          },
          "service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "Sync Service Instance SID."
          },
          "map_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^MP[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "Sync Map SID."
          },
          "identity": {
            "type": "string",
            "nullable": true,
            "description": "Identity of the user to whom the Sync Map Permission applies."
          },
          "read": {
            "type": "boolean",
            "nullable": true,
            "description": "Read access."
          },
          "write": {
            "type": "boolean",
            "nullable": true,
            "description": "Write access."
          },
          "manage": {
            "type": "boolean",
            "nullable": true,
            "description": "Manage access."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "URL of this Sync Map Permission."
          }
        }
      },
      "preview.understand.assistant": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Account that created this Assistant."
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was created"
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was last updated"
          },
          "friendly_name": {
            "type": "string",
            "nullable": true,
            "description": "A text description for the Assistant. It is non-unique and can up to 255 characters long."
          },
          "latest_model_build_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^UG[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID (Sid) of the latest model build. Null if no model has been built."
          },
          "links": {
            "type": "object",
            "format": "uri-map",
            "nullable": true
          },
          "log_queries": {
            "type": "boolean",
            "nullable": true,
            "description": "A boolean that specifies whether queries should be logged for 30 days further training. If false, no queries will be stored, if true, queries will be stored for 30 days and deleted thereafter."
          },
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^UA[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "A 34 character string that uniquely identifies this resource."
          },
          "unique_name": {
            "type": "string",
            "nullable": true,
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. You can use the unique name in the URL path. Unique up to 64 characters long."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "callback_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "A user-provided URL to send event callbacks to."
          },
          "callback_events": {
            "type": "string",
            "nullable": true,
            "description": "Space-separated list of callback events that will trigger callbacks."
          }
        }
      },
      "preview.understand.assistant.assistant_fallback_actions": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true
          },
          "assistant_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^UA[0-9a-fA-F]{32}$",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "data": {
            "nullable": true
          }
        }
      },
      "preview.understand.assistant.assistant_initiation_actions": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true
          },
          "assistant_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^UA[0-9a-fA-F]{32}$",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "data": {
            "nullable": true
          }
        }
      },
      "preview.understand.assistant.dialogue": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Account that created this Field."
          },
          "assistant_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^UA[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the parent Assistant."
          },
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^UK[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Dialogue"
          },
          "data": {
            "nullable": true,
            "description": "The dialogue memory object as json"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        }
      },
      "preview.understand.assistant.task.field": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Account that created this Field."
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was created"
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was last updated"
          },
          "field_type": {
            "type": "string",
            "nullable": true,
            "description": "The Field Type of this field. It can be any Built-in Field Type or unique_name or the Field Type sid of a custom Field Type."
          },
          "task_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^UD[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Task associated with this Field."
          },
          "assistant_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^UA[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the parent Assistant."
          },
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^UE[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "A 34 character string that uniquely identifies this resource."
          },
          "unique_name": {
            "type": "string",
            "nullable": true,
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        }
      },
      "preview.understand.assistant.field_type": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Account that created this Field Type."
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was created"
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was last updated"
          },
          "friendly_name": {
            "type": "string",
            "nullable": true,
            "description": "A user-provided string that identifies this resource. It is non-unique and can up to 255 characters long."
          },
          "links": {
            "type": "object",
            "format": "uri-map",
            "nullable": true
          },
          "assistant_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^UA[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Assistant."
          },
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^UB[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "A 34 character string that uniquely identifies this resource."
          },
          "unique_name": {
            "type": "string",
            "nullable": true,
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        }
      },
      "preview.understand.assistant.field_type.field_value": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Account that created this Field Value."
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was created"
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was last updated"
          },
          "field_type_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^UB[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Field Type associated with this Field Value."
          },
          "language": {
            "type": "string",
            "nullable": true,
            "description": "An ISO language-country string of the value."
          },
          "assistant_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^UA[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Assistant."
          },
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^UC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "A 34 character string that uniquely identifies this resource."
          },
          "value": {
            "type": "string",
            "nullable": true,
            "description": "The Field Value itself."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "synonym_of": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^UC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "A value that indicates this field value is a synonym of. Empty if the value is not a synonym."
          }
        }
      },
      "preview.understand.assistant.model_build": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Account that created this Model Build."
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was created"
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was last updated"
          },
          "assistant_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^UA[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the parent Assistant."
          },
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^UG[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "A 34 character string that uniquely identifies this resource."
          },
          "status": {
            "type": "string",
            "$ref": "#/components/schemas/model_build_enum_status",
            "nullable": true,
            "description": "A string that described the model build status. The values can be: enqueued, building, completed, failed"
          },
          "unique_name": {
            "type": "string",
            "nullable": true,
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "build_duration": {
            "type": "integer",
            "nullable": true,
            "description": "The time in seconds it took to build the model."
          },
          "error_code": {
            "type": "integer",
            "nullable": true
          }
        }
      },
      "model_build_enum_status": {
        "type": "string",
        "enum": [
          "enqueued",
          "building",
          "completed",
          "failed",
          "canceled"
        ]
      },
      "preview.understand.assistant.query": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Account that created this Query."
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was created"
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was last updated"
          },
          "results": {
            "nullable": true,
            "description": "The natural language analysis results which include the Task recognized, the confidence score and a list of identified Fields."
          },
          "language": {
            "type": "string",
            "nullable": true,
            "description": "An ISO language-country string of the sample."
          },
          "model_build_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^UG[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Model Build queried."
          },
          "query": {
            "type": "string",
            "nullable": true,
            "description": "The end-user's natural language input."
          },
          "sample_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^UF[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "An optional reference to the Sample created from this query."
          },
          "assistant_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^UA[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the parent Assistant."
          },
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^UH[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "A 34 character string that uniquely identifies this resource."
          },
          "status": {
            "type": "string",
            "nullable": true,
            "description": "A string that described the query status. The values can be: pending_review, reviewed, discarded"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "source_channel": {
            "type": "string",
            "nullable": true,
            "description": "The communication channel where this end-user input came from"
          }
        }
      },
      "preview.understand.assistant.task.sample": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Account that created this Sample."
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was created"
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was last updated"
          },
          "task_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^UD[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Task associated with this Sample."
          },
          "language": {
            "type": "string",
            "nullable": true,
            "description": "An ISO language-country string of the sample."
          },
          "assistant_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^UA[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Assistant."
          },
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^UF[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "A 34 character string that uniquely identifies this resource."
          },
          "tagged_text": {
            "type": "string",
            "nullable": true,
            "description": "The text example of how end-users may express this task. The sample may contain Field tag blocks."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "source_channel": {
            "type": "string",
            "nullable": true,
            "description": "The communication channel the sample was captured. It can be: voice, sms, chat, alexa, google-assistant, or slack. If not included the value will be null"
          }
        }
      },
      "preview.understand.assistant.style_sheet": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Account that created this Assistant"
          },
          "assistant_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^UA[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Assistant"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "data": {
            "nullable": true,
            "description": "The JSON style sheet object"
          }
        }
      },
      "preview.understand.assistant.task": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Account that created this Task."
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was created"
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was last updated"
          },
          "friendly_name": {
            "type": "string",
            "nullable": true,
            "description": "A user-provided string that identifies this resource. It is non-unique and can up to 255 characters long."
          },
          "links": {
            "type": "object",
            "format": "uri-map",
            "nullable": true
          },
          "assistant_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^UA[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Assistant."
          },
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^UD[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "A 34 character string that uniquely identifies this resource."
          },
          "unique_name": {
            "type": "string",
            "nullable": true,
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long."
          },
          "actions_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "User-provided HTTP endpoint where from the assistant fetches actions"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        }
      },
      "preview.understand.assistant.task.task_actions": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Account that created this Field."
          },
          "assistant_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^UA[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the parent Assistant."
          },
          "task_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^UD[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Task."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "data": {
            "nullable": true
          }
        }
      },
      "preview.understand.assistant.task.task_statistics": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Account that created this Field."
          },
          "assistant_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^UA[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the parent Assistant."
          },
          "task_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^UD[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Task associated with this Field."
          },
          "samples_count": {
            "type": "integer",
            "nullable": true,
            "description": "The total number of Samples associated with this Task."
          },
          "fields_count": {
            "type": "integer",
            "nullable": true,
            "description": "The total number of Fields associated with this Task."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        }
      },
      "preview.wireless.command": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^DC[0-9a-fA-F]{32}$",
            "nullable": true
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true
          },
          "device_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^DE[0-9a-fA-F]{32}$",
            "nullable": true
          },
          "sim_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^DE[0-9a-fA-F]{32}$",
            "nullable": true
          },
          "command": {
            "type": "string",
            "nullable": true
          },
          "command_mode": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "direction": {
            "type": "string",
            "nullable": true
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        }
      },
      "preview.wireless.rate_plan": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^WP[0-9a-fA-F]{32}$",
            "nullable": true
          },
          "unique_name": {
            "type": "string",
            "nullable": true
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true
          },
          "friendly_name": {
            "type": "string",
            "nullable": true
          },
          "data_enabled": {
            "type": "boolean",
            "nullable": true
          },
          "data_metering": {
            "type": "string",
            "nullable": true
          },
          "data_limit": {
            "type": "integer",
            "nullable": true
          },
          "messaging_enabled": {
            "type": "boolean",
            "nullable": true
          },
          "voice_enabled": {
            "type": "boolean",
            "nullable": true
          },
          "national_roaming_enabled": {
            "type": "boolean",
            "nullable": true
          },
          "international_roaming": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        }
      },
      "preview.wireless.sim": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^DE[0-9a-fA-F]{32}$",
            "nullable": true
          },
          "unique_name": {
            "type": "string",
            "nullable": true
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true
          },
          "rate_plan_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^WP[0-9a-fA-F]{32}$",
            "nullable": true
          },
          "friendly_name": {
            "type": "string",
            "nullable": true
          },
          "iccid": {
            "type": "string",
            "nullable": true
          },
          "e_id": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "commands_callback_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "commands_callback_method": {
            "type": "string",
            "nullable": true
          },
          "sms_fallback_method": {
            "type": "string",
            "format": "http-method",
            "enum": [
              "HEAD",
              "GET",
              "POST",
              "PATCH",
              "PUT",
              "DELETE"
            ],
            "nullable": true
          },
          "sms_fallback_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "sms_method": {
            "type": "string",
            "format": "http-method",
            "enum": [
              "HEAD",
              "GET",
              "POST",
              "PATCH",
              "PUT",
              "DELETE"
            ],
            "nullable": true
          },
          "sms_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "voice_fallback_method": {
            "type": "string",
            "format": "http-method",
            "enum": [
              "HEAD",
              "GET",
              "POST",
              "PATCH",
              "PUT",
              "DELETE"
            ],
            "nullable": true
          },
          "voice_fallback_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "voice_method": {
            "type": "string",
            "format": "http-method",
            "enum": [
              "HEAD",
              "GET",
              "POST",
              "PATCH",
              "PUT",
              "DELETE"
            ],
            "nullable": true
          },
          "voice_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "links": {
            "type": "object",
            "format": "uri-map",
            "nullable": true
          }
        }
      },
      "preview.wireless.sim.usage": {
        "type": "object",
        "properties": {
          "sim_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^DE[0-9a-fA-F]{32}$",
            "nullable": true
          },
          "sim_unique_name": {
            "type": "string",
            "nullable": true
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true
          },
          "period": {
            "nullable": true
          },
          "commands_usage": {
            "nullable": true
          },
          "commands_costs": {
            "nullable": true
          },
          "data_usage": {
            "nullable": true
          },
          "data_costs": {
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        }
      },
      "preview.trusted_comms.branded_channel": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "Account Sid."
          },
          "business_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^BX[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "Business Sid."
          },
          "brand_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^BZ[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "Brand Sid."
          },
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^BW[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "Branded Channel Sid."
          },
          "links": {
            "type": "object",
            "format": "uri-map",
            "nullable": true,
            "description": "Nested resource URLs."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The URL of this resource."
          }
        }
      },
      "preview.trusted_comms.brands_information": {
        "type": "object",
        "properties": {
          "update_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Creation time of the information retrieved"
          },
          "file_link": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The URL to the brands information"
          },
          "file_link_ttl_in_seconds": {
            "type": "string",
            "nullable": true,
            "description": "How long will be the `file_link` valid"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The URL of this resource"
          }
        }
      },
      "preview.trusted_comms.branded_channel.channel": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "Account Sid."
          },
          "business_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^BX[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "Business Sid."
          },
          "brand_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^BZ[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "Brand Sid."
          },
          "branded_channel_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^BW[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "Branded Channel Sid."
          },
          "phone_number_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^PN[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "Phone Number Sid to be branded."
          },
          "phone_number": {
            "type": "string",
            "nullable": true,
            "description": "Twilio number to assign to the Branded Channel"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The URL of this resource."
          }
        }
      },
      "preview.trusted_comms.cps": {
        "type": "object",
        "properties": {
          "cps_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "CPS URL of the phone number."
          },
          "phone_number": {
            "type": "string",
            "nullable": true,
            "description": "Phone number passed."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The URL of this resource."
          }
        }
      },
      "preview.trusted_comms.current_call": {
        "type": "object",
        "properties": {
          "bg_color": {
            "type": "string",
            "nullable": true,
            "description": "Background color of the current phone call"
          },
          "caller": {
            "type": "string",
            "nullable": true,
            "description": "Caller name of the current phone call"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date this current phone call was created"
          },
          "font_color": {
            "type": "string",
            "nullable": true,
            "description": "Font color of the current phone call"
          },
          "from": {
            "type": "string",
            "nullable": true,
            "description": "The originating phone number"
          },
          "logo": {
            "type": "string",
            "nullable": true,
            "description": "Logo URL of the caller"
          },
          "manager": {
            "type": "string",
            "nullable": true,
            "description": "The name of the CPS organization"
          },
          "reason": {
            "type": "string",
            "nullable": true,
            "description": "The business reason for this current phone call"
          },
          "shield_img": {
            "type": "string",
            "nullable": true,
            "description": "Shield image URL that serves as authenticity proof of the current phone call"
          },
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^CQ[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "A string that uniquely identifies this current branded phone call."
          },
          "status": {
            "type": "string",
            "nullable": true,
            "description": "The status of the current phone call"
          },
          "to": {
            "type": "string",
            "nullable": true,
            "description": "The terminating phone number"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The URL of this resource."
          },
          "use_case": {
            "type": "string",
            "nullable": true,
            "description": "The use case for the current phone call"
          }
        }
      }
    },
    "securitySchemes": {
      "accountSid_authToken": {
        "type": "http",
        "scheme": "basic"
      }
    }
  },
  "info": {
    "title": "Twilio - Preview",
    "description": "This is the public Twilio REST API.",
    "termsOfService": "https://www.twilio.com/legal/tos",
    "contact": {
      "name": "Twilio Support",
      "url": "https://support.twilio.com",
      "email": "support@twilio.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.33.0"
  },
  "openapi": "3.0.1",
  "paths": {
    "/DeployedDevices/Fleets/{FleetSid}/Certificates/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance",
        "parent": "/Fleets"
      },
      "get": {
        "description": "Fetch information about a specific Certificate credential in the Fleet.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Provides a 34 character string that uniquely identifies the requested Certificate credential resource.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CY[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.deployed_devices.fleet.certificate"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchDeployedDevicesCertificate",
        "x-maturity": [
          "Preview"
        ]
      },
      "delete": {
        "description": "Unregister a specific Certificate credential from the Fleet, effectively disallowing any inbound client connections that are presenting it.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Provides a 34 character string that uniquely identifies the requested Certificate credential resource.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CY[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteDeployedDevicesCertificate",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "Update the given properties of a specific Certificate credential in the Fleet, giving it a friendly name or assigning to a Device.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Provides a 34 character string that uniquely identifies the requested Certificate credential resource.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CY[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.deployed_devices.fleet.certificate"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateDeployedDevicesCertificate",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateDeployedDevicesCertificateRequest",
                "properties": {
                  "FriendlyName": {
                    "type": "string",
                    "description": "Provides a human readable descriptive text for this Certificate credential, up to 256 characters long."
                  },
                  "DeviceSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^TH[0-9a-fA-F]{32}$",
                    "description": "Provides the unique string identifier of an existing Device to become authenticated with this Certificate credential."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/DeployedDevices/Fleets/{FleetSid}/Certificates": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "list",
        "parent": "/Fleets"
      },
      "post": {
        "description": "Enroll a new Certificate credential to the Fleet, optionally giving it a friendly name and assigning to a Device.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.deployed_devices.fleet.certificate"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateDeployedDevicesCertificate",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateDeployedDevicesCertificateRequest",
                "properties": {
                  "CertificateData": {
                    "type": "string",
                    "description": "Provides a URL encoded representation of the public certificate in PEM format."
                  },
                  "FriendlyName": {
                    "type": "string",
                    "description": "Provides a human readable descriptive text for this Certificate credential, up to 256 characters long."
                  },
                  "DeviceSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^TH[0-9a-fA-F]{32}$",
                    "description": "Provides the unique string identifier of an existing Device to become authenticated with this Certificate credential."
                  }
                },
                "required": [
                  "CertificateData"
                ]
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieve a list of all Certificate credentials belonging to the Fleet.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "DeviceSid",
            "in": "query",
            "description": "Filters the resulting list of Certificates by a unique string identifier of an authenticated Device.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListDeployedDevicesCertificateResponse",
                  "properties": {
                    "certificates": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/preview.deployed_devices.fleet.certificate"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListDeployedDevicesCertificate",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/DeployedDevices/Fleets/{FleetSid}/Deployments/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance",
        "parent": "/Fleets"
      },
      "get": {
        "description": "Fetch information about a specific Deployment in the Fleet.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Provides a 34 character string that uniquely identifies the requested Deployment resource.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DL[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.deployed_devices.fleet.deployment"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchDeployedDevicesDeployment",
        "x-maturity": [
          "Preview"
        ]
      },
      "delete": {
        "description": "Delete a specific Deployment from the Fleet, leaving associated devices effectively undeployed.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Provides a 34 character string that uniquely identifies the requested Deployment resource.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DL[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteDeployedDevicesDeployment",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "Update the given properties of a specific Deployment credential in the Fleet, giving it a friendly name or linking to a specific Twilio Sync service instance.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Provides a 34 character string that uniquely identifies the requested Deployment resource.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DL[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.deployed_devices.fleet.deployment"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateDeployedDevicesDeployment",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateDeployedDevicesDeploymentRequest",
                "properties": {
                  "FriendlyName": {
                    "type": "string",
                    "description": "Provides a human readable descriptive text for this Deployment, up to 64 characters long"
                  },
                  "SyncServiceSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^IS[0-9a-fA-F]{32}$",
                    "description": "Provides the unique string identifier of the Twilio Sync service instance that will be linked to and accessible by this Deployment."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/DeployedDevices/Fleets/{FleetSid}/Deployments": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "list",
        "parent": "/Fleets"
      },
      "post": {
        "description": "Create a new Deployment in the Fleet, optionally giving it a friendly name and linking to a specific Twilio Sync service instance.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.deployed_devices.fleet.deployment"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateDeployedDevicesDeployment",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateDeployedDevicesDeploymentRequest",
                "properties": {
                  "FriendlyName": {
                    "type": "string",
                    "description": "Provides a human readable descriptive text for this Deployment, up to 256 characters long."
                  },
                  "SyncServiceSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^IS[0-9a-fA-F]{32}$",
                    "description": "Provides the unique string identifier of the Twilio Sync service instance that will be linked to and accessible by this Deployment."
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieve a list of all Deployments belonging to the Fleet.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListDeployedDevicesDeploymentResponse",
                  "properties": {
                    "deployments": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/preview.deployed_devices.fleet.deployment"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListDeployedDevicesDeployment",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/DeployedDevices/Fleets/{FleetSid}/Devices/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance",
        "parent": "/Fleets"
      },
      "get": {
        "description": "Fetch information about a specific Device in the Fleet.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Provides a 34 character string that uniquely identifies the requested Device resource.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.deployed_devices.fleet.device"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchDeployedDevicesDevice",
        "x-maturity": [
          "Preview"
        ]
      },
      "delete": {
        "description": "Delete a specific Device from the Fleet, also removing it from associated Deployments.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Provides a 34 character string that uniquely identifies the requested Device resource.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteDeployedDevicesDevice",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "Update the given properties of a specific Device in the Fleet, giving it a friendly name, assigning to a Deployment, or a human identity.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Provides a 34 character string that uniquely identifies the requested Device resource.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.deployed_devices.fleet.device"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateDeployedDevicesDevice",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateDeployedDevicesDeviceRequest",
                "properties": {
                  "FriendlyName": {
                    "type": "string",
                    "description": "Provides a human readable descriptive text to be assigned to this Device, up to 256 characters long."
                  },
                  "Identity": {
                    "type": "string",
                    "description": "Provides an arbitrary string identifier representing a human user to be associated with this Device, up to 256 characters long."
                  },
                  "DeploymentSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^DL[0-9a-fA-F]{32}$",
                    "description": "Specifies the unique string identifier of the Deployment group that this Device is going to be associated with."
                  },
                  "Enabled": {
                    "type": "boolean",
                    "description": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/DeployedDevices/Fleets/{FleetSid}/Devices": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "list",
        "parent": "/Fleets"
      },
      "post": {
        "description": "Create a new Device in the Fleet, optionally giving it a unique name, friendly name, and assigning to a Deployment and/or human identity.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.deployed_devices.fleet.device"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateDeployedDevicesDevice",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateDeployedDevicesDeviceRequest",
                "properties": {
                  "UniqueName": {
                    "type": "string",
                    "description": "Provides a unique and addressable name to be assigned to this Device, to be used in addition to SID, up to 128 characters long."
                  },
                  "FriendlyName": {
                    "type": "string",
                    "description": "Provides a human readable descriptive text to be assigned to this Device, up to 256 characters long."
                  },
                  "Identity": {
                    "type": "string",
                    "description": "Provides an arbitrary string identifier representing a human user to be associated with this Device, up to 256 characters long."
                  },
                  "DeploymentSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^DL[0-9a-fA-F]{32}$",
                    "description": "Specifies the unique string identifier of the Deployment group that this Device is going to be associated with."
                  },
                  "Enabled": {
                    "type": "boolean",
                    "description": ""
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieve a list of all Devices belonging to the Fleet.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "DeploymentSid",
            "in": "query",
            "description": "Filters the resulting list of Devices by a unique string identifier of the Deployment they are associated with.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DL[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListDeployedDevicesDeviceResponse",
                  "properties": {
                    "devices": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/preview.deployed_devices.fleet.device"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListDeployedDevicesDevice",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/DeployedDevices/Fleets/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance"
      },
      "get": {
        "description": "Fetch information about a specific Fleet in your account.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "Provides a 34 character string that uniquely identifies the requested Fleet resource.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.deployed_devices.fleet"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchDeployedDevicesFleet",
        "x-maturity": [
          "Preview"
        ]
      },
      "delete": {
        "description": "Delete a specific Fleet from your account, also destroys all nested resources: Devices, Deployments, Certificates, Keys.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "Provides a 34 character string that uniquely identifies the requested Fleet resource.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteDeployedDevicesFleet",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "Update the friendly name property of a specific Fleet in your account.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "Provides a 34 character string that uniquely identifies the requested Fleet resource.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.deployed_devices.fleet"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateDeployedDevicesFleet",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateDeployedDevicesFleetRequest",
                "properties": {
                  "FriendlyName": {
                    "type": "string",
                    "description": "Provides a human readable descriptive text for this Fleet, up to 256 characters long."
                  },
                  "DefaultDeploymentSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^DL[0-9a-fA-F]{32}$",
                    "description": "Provides a string identifier of a Deployment that is going to be used as a default one for this Fleet."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/DeployedDevices/Fleets": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "list"
      },
      "post": {
        "description": "Create a new Fleet for scoping of deployed devices within your account.",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.deployed_devices.fleet"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateDeployedDevicesFleet",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateDeployedDevicesFleetRequest",
                "properties": {
                  "FriendlyName": {
                    "type": "string",
                    "description": "Provides a human readable descriptive text for this Fleet, up to 256 characters long."
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieve a list of all Fleets belonging to your account.",
        "parameters": [
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListDeployedDevicesFleetResponse",
                  "properties": {
                    "fleets": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/preview.deployed_devices.fleet"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListDeployedDevicesFleet",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/DeployedDevices/Fleets/{FleetSid}/Keys/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance",
        "parent": "/Fleets"
      },
      "get": {
        "description": "Fetch information about a specific Key credential in the Fleet.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Provides a 34 character string that uniquely identifies the requested Key credential resource.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KY[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.deployed_devices.fleet.key"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchDeployedDevicesKey",
        "x-maturity": [
          "Preview"
        ]
      },
      "delete": {
        "description": "Delete a specific Key credential from the Fleet, effectively disallowing any inbound client connections that are presenting it.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Provides a 34 character string that uniquely identifies the requested Key credential resource.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KY[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteDeployedDevicesKey",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "Update the given properties of a specific Key credential in the Fleet, giving it a friendly name or assigning to a Device.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "Provides a 34 character string that uniquely identifies the requested Key credential resource.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^KY[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.deployed_devices.fleet.key"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateDeployedDevicesKey",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateDeployedDevicesKeyRequest",
                "properties": {
                  "FriendlyName": {
                    "type": "string",
                    "description": "Provides a human readable descriptive text for this Key credential, up to 256 characters long."
                  },
                  "DeviceSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^TH[0-9a-fA-F]{32}$",
                    "description": "Provides the unique string identifier of an existing Device to become authenticated with this Key credential."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/DeployedDevices/Fleets/{FleetSid}/Keys": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "list",
        "parent": "/Fleets"
      },
      "post": {
        "description": "Create a new Key credential in the Fleet, optionally giving it a friendly name and assigning to a Device.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.deployed_devices.fleet.key"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateDeployedDevicesKey",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateDeployedDevicesKeyRequest",
                "properties": {
                  "FriendlyName": {
                    "type": "string",
                    "description": "Provides a human readable descriptive text for this Key credential, up to 256 characters long."
                  },
                  "DeviceSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^TH[0-9a-fA-F]{32}$",
                    "description": "Provides the unique string identifier of an existing Device to become authenticated with this Key credential."
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieve a list of all Keys credentials belonging to the Fleet.",
        "parameters": [
          {
            "name": "FleetSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "DeviceSid",
            "in": "query",
            "description": "Filters the resulting list of Keys by a unique string identifier of an authenticated Device.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^TH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListDeployedDevicesKeyResponse",
                  "properties": {
                    "keys": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/preview.deployed_devices.fleet.key"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListDeployedDevicesKey",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/HostedNumbers/AuthorizationDocuments/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance"
      },
      "get": {
        "description": "Fetch a specific AuthorizationDocument.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this AuthorizationDocument.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PX[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.hosted_numbers.authorization_document"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchHostedNumbersAuthorizationDocument",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "Updates a specific AuthorizationDocument.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PX[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.hosted_numbers.authorization_document"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateHostedNumbersAuthorizationDocument",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateHostedNumbersAuthorizationDocumentRequest",
                "properties": {
                  "HostedNumberOrderSids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "A list of HostedNumberOrder sids that this AuthorizationDocument will authorize for hosting phone number capabilities on Twilio's platform."
                  },
                  "AddressSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^AD[0-9a-fA-F]{32}$",
                    "description": "A 34 character string that uniquely identifies the Address resource that is associated with this AuthorizationDocument."
                  },
                  "Email": {
                    "type": "string",
                    "description": "Email that this AuthorizationDocument will be sent to for signing."
                  },
                  "CcEmails": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Email recipients who will be informed when an Authorization Document has been sent and signed"
                  },
                  "Status": {
                    "type": "string",
                    "$ref": "#/components/schemas/authorization_document_enum_status",
                    "description": "Status of an instance resource. It can hold one of the values: 1. opened 2. signing, 3. signed LOA, 4. canceled, 5. failed. See the section entitled [Status Values](https://www.twilio.com/docs/api/phone-numbers/hosted-number-authorization-documents#status-values) for more information on each of these statuses."
                  },
                  "ContactTitle": {
                    "type": "string",
                    "description": "The title of the person authorized to sign the Authorization Document for this phone number."
                  },
                  "ContactPhoneNumber": {
                    "type": "string",
                    "description": "The contact phone number of the person authorized to sign the Authorization Document."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/HostedNumbers/AuthorizationDocuments": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "list"
      },
      "get": {
        "description": "Retrieve a list of AuthorizationDocuments belonging to the account initiating the request.",
        "parameters": [
          {
            "name": "Email",
            "in": "query",
            "description": "Email that this AuthorizationDocument will be sent to for signing.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "Status of an instance resource. It can hold one of the values: 1. opened 2. signing, 3. signed LOA, 4. canceled, 5. failed. See the section entitled [Status Values](https://www.twilio.com/docs/api/phone-numbers/hosted-number-authorization-documents#status-values) for more information on each of these statuses.",
            "schema": {
              "type": "string",
              "$ref": "#/components/schemas/authorization_document_enum_status"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListHostedNumbersAuthorizationDocumentResponse",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/preview.hosted_numbers.authorization_document"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListHostedNumbersAuthorizationDocument",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "Create an AuthorizationDocument for authorizing the hosting of phone number capabilities on Twilio's platform.",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.hosted_numbers.authorization_document"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateHostedNumbersAuthorizationDocument",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateHostedNumbersAuthorizationDocumentRequest",
                "properties": {
                  "HostedNumberOrderSids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "A list of HostedNumberOrder sids that this AuthorizationDocument will authorize for hosting phone number capabilities on Twilio's platform."
                  },
                  "AddressSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^AD[0-9a-fA-F]{32}$",
                    "description": "A 34 character string that uniquely identifies the Address resource that is associated with this AuthorizationDocument."
                  },
                  "Email": {
                    "type": "string",
                    "description": "Email that this AuthorizationDocument will be sent to for signing."
                  },
                  "ContactTitle": {
                    "type": "string",
                    "description": "The title of the person authorized to sign the Authorization Document for this phone number."
                  },
                  "ContactPhoneNumber": {
                    "type": "string",
                    "description": "The contact phone number of the person authorized to sign the Authorization Document."
                  },
                  "CcEmails": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Email recipients who will be informed when an Authorization Document has been sent and signed."
                  }
                },
                "required": [
                  "HostedNumberOrderSids",
                  "AddressSid",
                  "Email",
                  "ContactTitle",
                  "ContactPhoneNumber"
                ]
              }
            }
          }
        }
      }
    },
    "/HostedNumbers/AuthorizationDocuments/{SigningDocumentSid}/DependentHostedNumberOrders": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "list",
        "parent": "/AuthorizationDocuments"
      },
      "get": {
        "description": "Retrieve a list of dependent HostedNumberOrders belonging to the AuthorizationDocument.",
        "parameters": [
          {
            "name": "SigningDocumentSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PX[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Status",
            "in": "query",
            "description": "Status of an instance resource. It can hold one of the values: 1. opened 2. signing, 3. signed LOA, 4. canceled, 5. failed. See the section entitled [Status Values](https://www.twilio.com/docs/api/phone-numbers/hosted-number-authorization-documents#status-values) for more information on each of these statuses.",
            "schema": {
              "type": "string",
              "$ref": "#/components/schemas/dependent_hosted_number_order_enum_status"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "description": "An E164 formatted phone number hosted by this HostedNumberOrder.",
            "schema": {
              "type": "string",
              "format": "phone-number"
            }
          },
          {
            "name": "IncomingPhoneNumberSid",
            "in": "query",
            "description": "A 34 character string that uniquely identifies the IncomingPhoneNumber resource created by this HostedNumberOrder.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable description of this resource, up to 64 characters.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "Provides a unique and addressable name to be assigned to this HostedNumberOrder, assigned by the developer, to be optionally used in addition to SID.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListHostedNumbersDependentHostedNumberOrderResponse",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/preview.hosted_numbers.authorization_document.dependent_hosted_number_order"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListHostedNumbersDependentHostedNumberOrder",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/HostedNumbers/HostedNumberOrders/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance"
      },
      "get": {
        "description": "Fetch a specific HostedNumberOrder.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this HostedNumberOrder.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^HR[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.hosted_numbers.hosted_number_order"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchHostedNumbersHostedNumberOrder",
        "x-maturity": [
          "Preview"
        ]
      },
      "delete": {
        "description": "Cancel the HostedNumberOrder (only available when the status is in `received`).",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this HostedNumberOrder.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^HR[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteHostedNumbersHostedNumberOrder",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "Updates a specific HostedNumberOrder.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^HR[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.hosted_numbers.hosted_number_order"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateHostedNumbersHostedNumberOrder",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateHostedNumbersHostedNumberOrderRequest",
                "properties": {
                  "FriendlyName": {
                    "type": "string",
                    "description": "A 64 character string that is a human readable text that describes this resource."
                  },
                  "UniqueName": {
                    "type": "string",
                    "description": "Provides a unique and addressable name to be assigned to this HostedNumberOrder, assigned by the developer, to be optionally used in addition to SID."
                  },
                  "Email": {
                    "type": "string",
                    "description": "Email of the owner of this phone number that is being hosted."
                  },
                  "CcEmails": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Optional. A list of emails that LOA document for this HostedNumberOrder will be carbon copied to."
                  },
                  "Status": {
                    "type": "string",
                    "$ref": "#/components/schemas/hosted_number_order_enum_status",
                    "description": "User can only post to `pending-verification` status to transition the HostedNumberOrder to initiate a verification call or verification of ownership with a copy of a phone bill."
                  },
                  "VerificationCode": {
                    "type": "string",
                    "description": "A verification code that is given to the user via a phone call to the phone number that is being hosted."
                  },
                  "VerificationType": {
                    "type": "string",
                    "$ref": "#/components/schemas/hosted_number_order_enum_verification_type",
                    "description": "Optional. The method used for verifying ownership of the number to be hosted. One of phone-call (default) or phone-bill."
                  },
                  "VerificationDocumentSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^RI[0-9a-fA-F]{32}$",
                    "description": "Optional. The unique sid identifier of the Identity Document that represents the document for verifying ownership of the number to be hosted. Required when VerificationType is phone-bill."
                  },
                  "Extension": {
                    "type": "string",
                    "description": "Digits to dial after connecting the verification call."
                  },
                  "CallDelay": {
                    "type": "integer",
                    "description": "The number of seconds, between 0 and 60, to delay before initiating the verification call. Defaults to 0."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/HostedNumbers/HostedNumberOrders": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "list"
      },
      "get": {
        "description": "Retrieve a list of HostedNumberOrders belonging to the account initiating the request.",
        "parameters": [
          {
            "name": "Status",
            "in": "query",
            "description": "The Status of this HostedNumberOrder. One of `received`, `pending-verification`, `verified`, `pending-loa`, `carrier-processing`, `testing`, `completed`, `failed`, or `action-required`.",
            "schema": {
              "type": "string",
              "$ref": "#/components/schemas/hosted_number_order_enum_status"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "description": "An E164 formatted phone number hosted by this HostedNumberOrder.",
            "schema": {
              "type": "string",
              "format": "phone-number"
            }
          },
          {
            "name": "IncomingPhoneNumberSid",
            "in": "query",
            "description": "A 34 character string that uniquely identifies the IncomingPhoneNumber resource created by this HostedNumberOrder.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "A human readable description of this resource, up to 64 characters.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UniqueName",
            "in": "query",
            "description": "Provides a unique and addressable name to be assigned to this HostedNumberOrder, assigned by the developer, to be optionally used in addition to SID.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListHostedNumbersHostedNumberOrderResponse",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/preview.hosted_numbers.hosted_number_order"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListHostedNumbersHostedNumberOrder",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "Host a phone number's capability on Twilio's platform.",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.hosted_numbers.hosted_number_order"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateHostedNumbersHostedNumberOrder",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateHostedNumbersHostedNumberOrderRequest",
                "properties": {
                  "PhoneNumber": {
                    "type": "string",
                    "format": "phone-number",
                    "description": "The number to host in [+E.164](https://en.wikipedia.org/wiki/E.164) format"
                  },
                  "SmsCapability": {
                    "type": "boolean",
                    "description": "Used to specify that the SMS capability will be hosted on Twilio's platform."
                  },
                  "AccountSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^AC[0-9a-fA-F]{32}$",
                    "description": "This defaults to the AccountSid of the authorization the user is using. This can be provided to specify a subaccount to add the HostedNumberOrder to."
                  },
                  "FriendlyName": {
                    "type": "string",
                    "description": "A 64 character string that is a human readable text that describes this resource."
                  },
                  "UniqueName": {
                    "type": "string",
                    "description": "Optional. Provides a unique and addressable name to be assigned to this HostedNumberOrder, assigned by the developer, to be optionally used in addition to SID."
                  },
                  "CcEmails": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Optional. A list of emails that the LOA document for this HostedNumberOrder will be carbon copied to."
                  },
                  "SmsUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "The URL that Twilio should request when somebody sends an SMS to the phone number. This will be copied onto the IncomingPhoneNumber resource."
                  },
                  "SmsMethod": {
                    "type": "string",
                    "format": "http-method",
                    "enum": [
                      "HEAD",
                      "GET",
                      "POST",
                      "PATCH",
                      "PUT",
                      "DELETE"
                    ],
                    "description": "The HTTP method that should be used to request the SmsUrl. Must be either `GET` or `POST`.  This will be copied onto the IncomingPhoneNumber resource."
                  },
                  "SmsFallbackUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URL that Twilio will request if an error occurs requesting or executing the TwiML defined by SmsUrl. This will be copied onto the IncomingPhoneNumber resource."
                  },
                  "SmsFallbackMethod": {
                    "type": "string",
                    "format": "http-method",
                    "enum": [
                      "HEAD",
                      "GET",
                      "POST",
                      "PATCH",
                      "PUT",
                      "DELETE"
                    ],
                    "description": "The HTTP method that should be used to request the SmsFallbackUrl. Must be either `GET` or `POST`. This will be copied onto the IncomingPhoneNumber resource."
                  },
                  "StatusCallbackUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "Optional. The Status Callback URL attached to the IncomingPhoneNumber resource."
                  },
                  "StatusCallbackMethod": {
                    "type": "string",
                    "format": "http-method",
                    "enum": [
                      "HEAD",
                      "GET",
                      "POST",
                      "PATCH",
                      "PUT",
                      "DELETE"
                    ],
                    "description": "Optional. The Status Callback Method attached to the IncomingPhoneNumber resource."
                  },
                  "SmsApplicationSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^AP[0-9a-fA-F]{32}$",
                    "description": "Optional. The 34 character sid of the application Twilio should use to handle SMS messages sent to this number. If a `SmsApplicationSid` is present, Twilio will ignore all of the SMS urls above and use those set on the application."
                  },
                  "AddressSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^AD[0-9a-fA-F]{32}$",
                    "description": "Optional. A 34 character string that uniquely identifies the Address resource that represents the address of the owner of this phone number."
                  },
                  "Email": {
                    "type": "string",
                    "description": "Optional. Email of the owner of this phone number that is being hosted."
                  },
                  "VerificationType": {
                    "type": "string",
                    "$ref": "#/components/schemas/hosted_number_order_enum_verification_type",
                    "description": "Optional. The method used for verifying ownership of the number to be hosted. One of phone-call (default) or phone-bill."
                  },
                  "VerificationDocumentSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^RI[0-9a-fA-F]{32}$",
                    "description": "Optional. The unique sid identifier of the Identity Document that represents the document for verifying ownership of the number to be hosted. Required when VerificationType is phone-bill."
                  }
                },
                "required": [
                  "PhoneNumber",
                  "SmsCapability"
                ]
              }
            }
          }
        }
      }
    },
    "/marketplace/AvailableAddOns/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance"
      },
      "get": {
        "description": "Fetch an instance of an Add-on currently available to be installed.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the AvailableAddOn resource to fetch.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XB[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.marketplace.available_add_on"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchMarketplaceAvailableAddOn",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/marketplace/AvailableAddOns": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "list"
      },
      "get": {
        "description": "Retrieve a list of Add-ons currently available to be installed.",
        "parameters": [
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListMarketplaceAvailableAddOnResponse",
                  "properties": {
                    "available_add_ons": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/preview.marketplace.available_add_on"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListMarketplaceAvailableAddOn",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/marketplace/AvailableAddOns/{AvailableAddOnSid}/Extensions/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance",
        "parent": "/AvailableAddOns",
        "className": "available_add_on_extension"
      },
      "get": {
        "description": "Fetch an instance of an Extension for the Available Add-on.",
        "parameters": [
          {
            "name": "AvailableAddOnSid",
            "in": "path",
            "description": "The SID of the AvailableAddOn resource with the extension to fetch.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XB[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the AvailableAddOn Extension resource to fetch.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XF[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.marketplace.available_add_on.available_add_on_extension"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchMarketplaceAvailableAddOnExtension",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/marketplace/AvailableAddOns/{AvailableAddOnSid}/Extensions": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "list",
        "parent": "/AvailableAddOns",
        "className": "available_add_on_extension"
      },
      "get": {
        "description": "Retrieve a list of Extensions for the Available Add-on.",
        "parameters": [
          {
            "name": "AvailableAddOnSid",
            "in": "path",
            "description": "The SID of the AvailableAddOn resource with the extensions to read.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XB[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListMarketplaceAvailableAddOnExtensionResponse",
                  "properties": {
                    "extensions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/preview.marketplace.available_add_on.available_add_on_extension"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListMarketplaceAvailableAddOnExtension",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/marketplace/InstalledAddOns": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "list"
      },
      "post": {
        "description": "Install an Add-on for the Account specified.",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.marketplace.installed_add_on"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateMarketplaceInstalledAddOn",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateMarketplaceInstalledAddOnRequest",
                "properties": {
                  "AvailableAddOnSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^XB[0-9a-fA-F]{32}$",
                    "description": "The SID of the AvaliableAddOn to install."
                  },
                  "AcceptTermsOfService": {
                    "type": "boolean",
                    "description": "Whether the Terms of Service were accepted."
                  },
                  "Configuration": {
                    "description": "The JSON object that represents the configuration of the new Add-on being installed."
                  },
                  "UniqueName": {
                    "type": "string",
                    "description": "An application-defined string that uniquely identifies the resource. This value must be unique within the Account."
                  }
                },
                "required": [
                  "AvailableAddOnSid",
                  "AcceptTermsOfService"
                ]
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieve a list of Add-ons currently installed on this Account.",
        "parameters": [
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListMarketplaceInstalledAddOnResponse",
                  "properties": {
                    "installed_add_ons": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/preview.marketplace.installed_add_on"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListMarketplaceInstalledAddOn",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/marketplace/InstalledAddOns/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance"
      },
      "delete": {
        "description": "Remove an Add-on installation from your account",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the InstalledAddOn resource to delete.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteMarketplaceInstalledAddOn",
        "x-maturity": [
          "Preview"
        ]
      },
      "get": {
        "description": "Fetch an instance of an Add-on currently installed on this Account.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the InstalledAddOn resource to fetch.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.marketplace.installed_add_on"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchMarketplaceInstalledAddOn",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "Update an Add-on installation for the Account specified.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the InstalledAddOn resource to update.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.marketplace.installed_add_on"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateMarketplaceInstalledAddOn",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateMarketplaceInstalledAddOnRequest",
                "properties": {
                  "Configuration": {
                    "description": "Valid JSON object that conform to the configuration schema exposed by the associated AvailableAddOn resource. This is only required by Add-ons that need to be configured"
                  },
                  "UniqueName": {
                    "type": "string",
                    "description": "An application-defined string that uniquely identifies the resource. This value must be unique within the Account."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/marketplace/InstalledAddOns/{InstalledAddOnSid}/Extensions/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance",
        "parent": "/InstalledAddOns",
        "className": "installed_add_on_extension"
      },
      "get": {
        "description": "Fetch an instance of an Extension for the Installed Add-on.",
        "parameters": [
          {
            "name": "InstalledAddOnSid",
            "in": "path",
            "description": "The SID of the InstalledAddOn resource with the extension to fetch.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the InstalledAddOn Extension resource to fetch.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XF[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.marketplace.installed_add_on.installed_add_on_extension"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchMarketplaceInstalledAddOnExtension",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "Update an Extension for an Add-on installation.",
        "parameters": [
          {
            "name": "InstalledAddOnSid",
            "in": "path",
            "description": "The SID of the InstalledAddOn resource with the extension to update.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the InstalledAddOn Extension resource to update.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XF[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.marketplace.installed_add_on.installed_add_on_extension"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateMarketplaceInstalledAddOnExtension",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateMarketplaceInstalledAddOnExtensionRequest",
                "properties": {
                  "Enabled": {
                    "type": "boolean",
                    "description": "Whether the Extension should be invoked."
                  }
                },
                "required": [
                  "Enabled"
                ]
              }
            }
          }
        }
      }
    },
    "/marketplace/InstalledAddOns/{InstalledAddOnSid}/Extensions": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "list",
        "parent": "/InstalledAddOns",
        "className": "installed_add_on_extension"
      },
      "get": {
        "description": "Retrieve a list of Extensions for the Installed Add-on.",
        "parameters": [
          {
            "name": "InstalledAddOnSid",
            "in": "path",
            "description": "The SID of the InstalledAddOn resource with the extensions to read.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListMarketplaceInstalledAddOnExtensionResponse",
                  "properties": {
                    "extensions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/preview.marketplace.installed_add_on.installed_add_on_extension"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListMarketplaceInstalledAddOnExtension",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/Sync/Services/{ServiceSid}/Documents/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance",
        "parent": "/Services"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.document"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchSyncDocument",
        "x-maturity": [
          "Preview"
        ]
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteSyncDocument",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The If-Match HTTP request header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.document"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateSyncDocument",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateSyncDocumentRequest",
                "properties": {
                  "Data": {
                    "description": ""
                  }
                },
                "required": [
                  "Data"
                ]
              }
            }
          }
        }
      }
    },
    "/Sync/Services/{ServiceSid}/Documents": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "list",
        "parent": "/Services"
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.document"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateSyncDocument",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateSyncDocumentRequest",
                "properties": {
                  "UniqueName": {
                    "type": "string",
                    "description": ""
                  },
                  "Data": {
                    "description": ""
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListSyncDocumentResponse",
                  "properties": {
                    "documents": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/preview.sync.service.document"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListSyncDocument",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/Sync/Services/{ServiceSid}/Documents/{DocumentSid}/Permissions/{Identity}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance",
        "parent": "/Services/{ServiceSid}/Documents",
        "className": "document_permission"
      },
      "get": {
        "description": "Fetch a specific Sync Document Permission.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "DocumentSid",
            "in": "path",
            "description": "Identifier of the Sync Document. Either a SID or a unique name.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Arbitrary string identifier representing a user associated with an FPA token, assigned by the developer.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.document.document_permission"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchSyncDocumentPermission",
        "x-maturity": [
          "Preview"
        ]
      },
      "delete": {
        "description": "Delete a specific Sync Document Permission.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "DocumentSid",
            "in": "path",
            "description": "Identifier of the Sync Document. Either a SID or a unique name.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Arbitrary string identifier representing a user associated with an FPA token, assigned by the developer.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteSyncDocumentPermission",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "Update an identity's access to a specific Sync Document.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The unique SID identifier of the Sync Service Instance.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "DocumentSid",
            "in": "path",
            "description": "Identifier of the Sync Document. Either a SID or a unique name.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Arbitrary string identifier representing a human user associated with an FPA token, assigned by the developer.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.document.document_permission"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateSyncDocumentPermission",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateSyncDocumentPermissionRequest",
                "properties": {
                  "Read": {
                    "type": "boolean",
                    "description": "Boolean flag specifying whether the identity can read the Sync Document."
                  },
                  "Write": {
                    "type": "boolean",
                    "description": "Boolean flag specifying whether the identity can update the Sync Document."
                  },
                  "Manage": {
                    "type": "boolean",
                    "description": "Boolean flag specifying whether the identity can delete the Sync Document."
                  }
                },
                "required": [
                  "Read",
                  "Write",
                  "Manage"
                ]
              }
            }
          }
        }
      }
    },
    "/Sync/Services/{ServiceSid}/Documents/{DocumentSid}/Permissions": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "list",
        "parent": "/Services/{ServiceSid}/Documents",
        "className": "document_permission"
      },
      "get": {
        "description": "Retrieve a list of all Permissions applying to a Sync Document.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "DocumentSid",
            "in": "path",
            "description": "Identifier of the Sync Document. Either a SID or a unique name.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListSyncDocumentPermissionResponse",
                  "properties": {
                    "permissions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/preview.sync.service.document.document_permission"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListSyncDocumentPermission",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/Sync/Services/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchSyncService",
        "x-maturity": [
          "Preview"
        ]
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteSyncService",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateSyncService",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateSyncServiceRequest",
                "properties": {
                  "WebhookUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": ""
                  },
                  "FriendlyName": {
                    "type": "string",
                    "description": ""
                  },
                  "ReachabilityWebhooksEnabled": {
                    "type": "boolean",
                    "description": ""
                  },
                  "AclEnabled": {
                    "type": "boolean",
                    "description": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Sync/Services": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "list"
      },
      "post": {
        "description": "",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateSyncService",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateSyncServiceRequest",
                "properties": {
                  "FriendlyName": {
                    "type": "string",
                    "description": ""
                  },
                  "WebhookUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": ""
                  },
                  "ReachabilityWebhooksEnabled": {
                    "type": "boolean",
                    "description": ""
                  },
                  "AclEnabled": {
                    "type": "boolean",
                    "description": ""
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListSyncServiceResponse",
                  "properties": {
                    "services": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/preview.sync.service"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListSyncService",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/Sync/Services/{ServiceSid}/Lists/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance",
        "parent": "/Services",
        "className": "sync_list"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.sync_list"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchSyncSyncList",
        "x-maturity": [
          "Preview"
        ]
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteSyncSyncList",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/Sync/Services/{ServiceSid}/Lists": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "list",
        "parent": "/Services",
        "className": "sync_list"
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.sync_list"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateSyncSyncList",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateSyncSyncListRequest",
                "properties": {
                  "UniqueName": {
                    "type": "string",
                    "description": ""
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListSyncSyncListResponse",
                  "properties": {
                    "lists": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/preview.sync.service.sync_list"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListSyncSyncList",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/Sync/Services/{ServiceSid}/Lists/{ListSid}/Items/{Index}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance",
        "parent": "/Services/{ServiceSid}/Lists",
        "className": "sync_list_item"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "ListSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Index",
            "in": "path",
            "description": "",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.sync_list.sync_list_item"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchSyncSyncListItem",
        "x-maturity": [
          "Preview"
        ]
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "ListSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Index",
            "in": "path",
            "description": "",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The If-Match HTTP request header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteSyncSyncListItem",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "ListSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Index",
            "in": "path",
            "description": "",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The If-Match HTTP request header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.sync_list.sync_list_item"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateSyncSyncListItem",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateSyncSyncListItemRequest",
                "properties": {
                  "Data": {
                    "description": ""
                  }
                },
                "required": [
                  "Data"
                ]
              }
            }
          }
        }
      }
    },
    "/Sync/Services/{ServiceSid}/Lists/{ListSid}/Items": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "list",
        "parent": "/Services/{ServiceSid}/Lists",
        "className": "sync_list_item"
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "ListSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.sync_list.sync_list_item"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateSyncSyncListItem",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateSyncSyncListItemRequest",
                "properties": {
                  "Data": {
                    "description": ""
                  }
                },
                "required": [
                  "Data"
                ]
              }
            }
          }
        }
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "ListSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Order",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "$ref": "#/components/schemas/sync_list_item_enum_query_result_order"
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Bounds",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "$ref": "#/components/schemas/sync_list_item_enum_query_from_bound_type"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListSyncSyncListItemResponse",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/preview.sync.service.sync_list.sync_list_item"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListSyncSyncListItem",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/Sync/Services/{ServiceSid}/Lists/{ListSid}/Permissions/{Identity}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance",
        "parent": "/Services/{ServiceSid}/Lists",
        "className": "sync_list_permission"
      },
      "get": {
        "description": "Fetch a specific Sync List Permission.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "ListSid",
            "in": "path",
            "description": "Identifier of the Sync List. Either a SID or a unique name.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Arbitrary string identifier representing a user associated with an FPA token, assigned by the developer.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.sync_list.sync_list_permission"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchSyncSyncListPermission",
        "x-maturity": [
          "Preview"
        ]
      },
      "delete": {
        "description": "Delete a specific Sync List Permission.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "ListSid",
            "in": "path",
            "description": "Identifier of the Sync List. Either a SID or a unique name.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Arbitrary string identifier representing a user associated with an FPA token, assigned by the developer.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteSyncSyncListPermission",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "Update an identity's access to a specific Sync List.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The unique SID identifier of the Sync Service Instance.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "ListSid",
            "in": "path",
            "description": "Identifier of the Sync List. Either a SID or a unique name.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Arbitrary string identifier representing a human user associated with an FPA token, assigned by the developer.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.sync_list.sync_list_permission"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateSyncSyncListPermission",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateSyncSyncListPermissionRequest",
                "properties": {
                  "Read": {
                    "type": "boolean",
                    "description": "Boolean flag specifying whether the identity can read the Sync List."
                  },
                  "Write": {
                    "type": "boolean",
                    "description": "Boolean flag specifying whether the identity can create, update and delete Items of the Sync List."
                  },
                  "Manage": {
                    "type": "boolean",
                    "description": "Boolean flag specifying whether the identity can delete the Sync List."
                  }
                },
                "required": [
                  "Read",
                  "Write",
                  "Manage"
                ]
              }
            }
          }
        }
      }
    },
    "/Sync/Services/{ServiceSid}/Lists/{ListSid}/Permissions": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "list",
        "parent": "/Services/{ServiceSid}/Lists",
        "className": "sync_list_permission"
      },
      "get": {
        "description": "Retrieve a list of all Permissions applying to a Sync List.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "ListSid",
            "in": "path",
            "description": "Identifier of the Sync List. Either a SID or a unique name.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListSyncSyncListPermissionResponse",
                  "properties": {
                    "permissions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/preview.sync.service.sync_list.sync_list_permission"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListSyncSyncListPermission",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/Sync/Services/{ServiceSid}/Maps/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance",
        "parent": "/Services",
        "className": "sync_map"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.sync_map"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchSyncSyncMap",
        "x-maturity": [
          "Preview"
        ]
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteSyncSyncMap",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/Sync/Services/{ServiceSid}/Maps": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "list",
        "parent": "/Services",
        "className": "sync_map"
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.sync_map"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateSyncSyncMap",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateSyncSyncMapRequest",
                "properties": {
                  "UniqueName": {
                    "type": "string",
                    "description": ""
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListSyncSyncMapResponse",
                  "properties": {
                    "maps": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/preview.sync.service.sync_map"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListSyncSyncMap",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/Sync/Services/{ServiceSid}/Maps/{MapSid}/Items/{Key}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance",
        "parent": "/Services/{ServiceSid}/Maps",
        "className": "sync_map_item"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "MapSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Key",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.sync_map.sync_map_item"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchSyncSyncMapItem",
        "x-maturity": [
          "Preview"
        ]
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "MapSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Key",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The If-Match HTTP request header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteSyncSyncMapItem",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "MapSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Key",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The If-Match HTTP request header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.sync_map.sync_map_item"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateSyncSyncMapItem",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateSyncSyncMapItemRequest",
                "properties": {
                  "Data": {
                    "description": ""
                  }
                },
                "required": [
                  "Data"
                ]
              }
            }
          }
        }
      }
    },
    "/Sync/Services/{ServiceSid}/Maps/{MapSid}/Items": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "list",
        "parent": "/Services/{ServiceSid}/Maps",
        "className": "sync_map_item"
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "MapSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.sync_map.sync_map_item"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateSyncSyncMapItem",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateSyncSyncMapItemRequest",
                "properties": {
                  "Key": {
                    "type": "string",
                    "description": ""
                  },
                  "Data": {
                    "description": ""
                  }
                },
                "required": [
                  "Key",
                  "Data"
                ]
              }
            }
          }
        }
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "MapSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Order",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "$ref": "#/components/schemas/sync_map_item_enum_query_result_order"
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Bounds",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "$ref": "#/components/schemas/sync_map_item_enum_query_from_bound_type"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListSyncSyncMapItemResponse",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/preview.sync.service.sync_map.sync_map_item"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListSyncSyncMapItem",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/Sync/Services/{ServiceSid}/Maps/{MapSid}/Permissions/{Identity}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance",
        "parent": "/Services/{ServiceSid}/Maps",
        "className": "sync_map_permission"
      },
      "get": {
        "description": "Fetch a specific Sync Map Permission.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "MapSid",
            "in": "path",
            "description": "Identifier of the Sync Map. Either a SID or a unique name.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Arbitrary string identifier representing a user associated with an FPA token, assigned by the developer.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.sync_map.sync_map_permission"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchSyncSyncMapPermission",
        "x-maturity": [
          "Preview"
        ]
      },
      "delete": {
        "description": "Delete a specific Sync Map Permission.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "MapSid",
            "in": "path",
            "description": "Identifier of the Sync Map. Either a SID or a unique name.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Arbitrary string identifier representing a user associated with an FPA token, assigned by the developer.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteSyncSyncMapPermission",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "Update an identity's access to a specific Sync Map.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The unique SID identifier of the Sync Service Instance.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "MapSid",
            "in": "path",
            "description": "Identifier of the Sync Map. Either a SID or a unique name.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Identity",
            "in": "path",
            "description": "Arbitrary string identifier representing a human user associated with an FPA token, assigned by the developer.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.sync_map.sync_map_permission"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateSyncSyncMapPermission",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateSyncSyncMapPermissionRequest",
                "properties": {
                  "Read": {
                    "type": "boolean",
                    "description": "Boolean flag specifying whether the identity can read the Sync Map."
                  },
                  "Write": {
                    "type": "boolean",
                    "description": "Boolean flag specifying whether the identity can create, update and delete Items of the Sync Map."
                  },
                  "Manage": {
                    "type": "boolean",
                    "description": "Boolean flag specifying whether the identity can delete the Sync Map."
                  }
                },
                "required": [
                  "Read",
                  "Write",
                  "Manage"
                ]
              }
            }
          }
        }
      }
    },
    "/Sync/Services/{ServiceSid}/Maps/{MapSid}/Permissions": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "list",
        "parent": "/Services/{ServiceSid}/Maps",
        "className": "sync_map_permission"
      },
      "get": {
        "description": "Retrieve a list of all Permissions applying to a Sync Map.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "MapSid",
            "in": "path",
            "description": "Identifier of the Sync Map. Either a SID or a unique name.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListSyncSyncMapPermissionResponse",
                  "properties": {
                    "permissions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/preview.sync.service.sync_map.sync_map_permission"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListSyncSyncMapPermission",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/understand/Assistants/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchUnderstandAssistant",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateUnderstandAssistant",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateUnderstandAssistantRequest",
                "properties": {
                  "FriendlyName": {
                    "type": "string",
                    "description": "A text description for the Assistant. It is non-unique and can up to 255 characters long."
                  },
                  "LogQueries": {
                    "type": "boolean",
                    "description": "A boolean that specifies whether queries should be logged for 30 days further training. If false, no queries will be stored, if true, queries will be stored for 30 days and deleted thereafter. Defaults to true if no value is provided."
                  },
                  "UniqueName": {
                    "type": "string",
                    "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long."
                  },
                  "CallbackUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "A user-provided URL to send event callbacks to."
                  },
                  "CallbackEvents": {
                    "type": "string",
                    "description": "Space-separated list of callback events that will trigger callbacks."
                  },
                  "FallbackActions": {
                    "description": "The JSON actions to be executed when the user's input is not recognized as matching any Task."
                  },
                  "InitiationActions": {
                    "description": "The JSON actions to be executed on inbound phone calls when the Assistant has to say something first."
                  },
                  "StyleSheet": {
                    "description": "The JSON object that holds the style sheet for the assistant"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteUnderstandAssistant",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/understand/Assistants": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "list"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListUnderstandAssistantResponse",
                  "properties": {
                    "assistants": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/preview.understand.assistant"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListUnderstandAssistant",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateUnderstandAssistant",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateUnderstandAssistantRequest",
                "properties": {
                  "FriendlyName": {
                    "type": "string",
                    "description": "A text description for the Assistant. It is non-unique and can up to 255 characters long."
                  },
                  "LogQueries": {
                    "type": "boolean",
                    "description": "A boolean that specifies whether queries should be logged for 30 days further training. If false, no queries will be stored, if true, queries will be stored for 30 days and deleted thereafter. Defaults to true if no value is provided."
                  },
                  "UniqueName": {
                    "type": "string",
                    "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long."
                  },
                  "CallbackUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "A user-provided URL to send event callbacks to."
                  },
                  "CallbackEvents": {
                    "type": "string",
                    "description": "Space-separated list of callback events that will trigger callbacks."
                  },
                  "FallbackActions": {
                    "description": "The JSON actions to be executed when the user's input is not recognized as matching any Task."
                  },
                  "InitiationActions": {
                    "description": "The JSON actions to be executed on inbound phone calls when the Assistant has to say something first."
                  },
                  "StyleSheet": {
                    "description": "The JSON object that holds the style sheet for the assistant"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/understand/Assistants/{AssistantSid}/FallbackActions": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance",
        "parent": "/Assistants",
        "className": "assistant_fallback_actions"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.assistant_fallback_actions"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchUnderstandAssistantFallbackActions",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.assistant_fallback_actions"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateUnderstandAssistantFallbackActions",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateUnderstandAssistantFallbackActionsRequest",
                "properties": {
                  "FallbackActions": {
                    "description": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/understand/Assistants/{AssistantSid}/InitiationActions": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance",
        "parent": "/Assistants",
        "className": "assistant_initiation_actions"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.assistant_initiation_actions"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchUnderstandAssistantInitiationActions",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.assistant_initiation_actions"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateUnderstandAssistantInitiationActions",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateUnderstandAssistantInitiationActionsRequest",
                "properties": {
                  "InitiationActions": {
                    "description": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/understand/Assistants/{AssistantSid}/Dialogues/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance",
        "parent": "/Assistants"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.dialogue"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchUnderstandDialogue",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/understand/Assistants/{AssistantSid}/Dialogues": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "list",
        "parent": "/Assistants"
      }
    },
    "/understand/Assistants/{AssistantSid}/Tasks/{TaskSid}/Fields/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance",
        "parent": "/Assistants/{AssistantSid}/Tasks"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": "The unique ID of the Task associated with this Field.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.task.field"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchUnderstandField",
        "x-maturity": [
          "Preview"
        ]
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": "The unique ID of the Task associated with this Field.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteUnderstandField",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/understand/Assistants/{AssistantSid}/Tasks/{TaskSid}/Fields": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "list",
        "parent": "/Assistants/{AssistantSid}/Tasks"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": "The unique ID of the Task associated with this Field.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListUnderstandFieldResponse",
                  "properties": {
                    "fields": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/preview.understand.assistant.task.field"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListUnderstandField",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the parent Assistant.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": "The unique ID of the Task associated with this Field.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.task.field"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateUnderstandField",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateUnderstandFieldRequest",
                "properties": {
                  "FieldType": {
                    "type": "string",
                    "description": "The unique name or sid of the FieldType. It can be any [Built-in Field Type](https://www.twilio.com/docs/assistant/api/built-in-field-types) or the unique_name or the Field Type sid of a custom Field Type."
                  },
                  "UniqueName": {
                    "type": "string",
                    "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long."
                  }
                },
                "required": [
                  "FieldType",
                  "UniqueName"
                ]
              }
            }
          }
        }
      }
    },
    "/understand/Assistants/{AssistantSid}/FieldTypes/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance",
        "parent": "/Assistants"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.field_type"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchUnderstandFieldType",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.field_type"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateUnderstandFieldType",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateUnderstandFieldTypeRequest",
                "properties": {
                  "FriendlyName": {
                    "type": "string",
                    "description": "A user-provided string that identifies this resource. It is non-unique and can up to 255 characters long."
                  },
                  "UniqueName": {
                    "type": "string",
                    "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long."
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteUnderstandFieldType",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/understand/Assistants/{AssistantSid}/FieldTypes": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "list",
        "parent": "/Assistants"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListUnderstandFieldTypeResponse",
                  "properties": {
                    "field_types": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/preview.understand.assistant.field_type"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListUnderstandFieldType",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.field_type"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateUnderstandFieldType",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateUnderstandFieldTypeRequest",
                "properties": {
                  "UniqueName": {
                    "type": "string",
                    "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long."
                  },
                  "FriendlyName": {
                    "type": "string",
                    "description": "A user-provided string that identifies this resource. It is non-unique and can up to 255 characters long."
                  }
                },
                "required": [
                  "UniqueName"
                ]
              }
            }
          }
        }
      }
    },
    "/understand/Assistants/{AssistantSid}/FieldTypes/{FieldTypeSid}/FieldValues/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance",
        "parent": "/Assistants/{AssistantSid}/FieldTypes"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "FieldTypeSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.field_type.field_value"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchUnderstandFieldValue",
        "x-maturity": [
          "Preview"
        ]
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "FieldTypeSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteUnderstandFieldValue",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/understand/Assistants/{AssistantSid}/FieldTypes/{FieldTypeSid}/FieldValues": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "list",
        "parent": "/Assistants/{AssistantSid}/FieldTypes"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "FieldTypeSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Language",
            "in": "query",
            "description": "An ISO language-country string of the value. For example: *en-US*",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListUnderstandFieldValueResponse",
                  "properties": {
                    "field_values": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/preview.understand.assistant.field_type.field_value"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListUnderstandFieldValue",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "FieldTypeSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.field_type.field_value"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateUnderstandFieldValue",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateUnderstandFieldValueRequest",
                "properties": {
                  "Language": {
                    "type": "string",
                    "description": "An ISO language-country string of the value."
                  },
                  "Value": {
                    "type": "string",
                    "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long."
                  },
                  "SynonymOf": {
                    "type": "string",
                    "description": "A value that indicates this field value is a synonym of. Empty if the value is not a synonym."
                  }
                },
                "required": [
                  "Language",
                  "Value"
                ]
              }
            }
          }
        }
      }
    },
    "/understand/Assistants/{AssistantSid}/ModelBuilds/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance",
        "parent": "/Assistants"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.model_build"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchUnderstandModelBuild",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.model_build"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateUnderstandModelBuild",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateUnderstandModelBuildRequest",
                "properties": {
                  "UniqueName": {
                    "type": "string",
                    "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long. For example: v0.1"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteUnderstandModelBuild",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/understand/Assistants/{AssistantSid}/ModelBuilds": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "list",
        "parent": "/Assistants"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListUnderstandModelBuildResponse",
                  "properties": {
                    "model_builds": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/preview.understand.assistant.model_build"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListUnderstandModelBuild",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.model_build"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateUnderstandModelBuild",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateUnderstandModelBuildRequest",
                "properties": {
                  "StatusCallback": {
                    "type": "string",
                    "format": "uri",
                    "description": ""
                  },
                  "UniqueName": {
                    "type": "string",
                    "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long. For example: v0.1"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/understand/Assistants/{AssistantSid}/Queries/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance",
        "parent": "/Assistants"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.query"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchUnderstandQuery",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the parent Assistant.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.query"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateUnderstandQuery",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateUnderstandQueryRequest",
                "properties": {
                  "SampleSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^UF[0-9a-fA-F]{32}$",
                    "description": "An optional reference to the Sample created from this query."
                  },
                  "Status": {
                    "type": "string",
                    "description": "A string that described the query status. The values can be: pending_review, reviewed, discarded"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteUnderstandQuery",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/understand/Assistants/{AssistantSid}/Queries": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "list",
        "parent": "/Assistants"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the parent Assistant.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Language",
            "in": "query",
            "description": "An ISO language-country string of the sample.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ModelBuild",
            "in": "query",
            "description": "The Model Build Sid or unique name of the Model Build to be queried.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "A string that described the query status. The values can be: pending_review, reviewed, discarded",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListUnderstandQueryResponse",
                  "properties": {
                    "queries": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/preview.understand.assistant.query"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListUnderstandQuery",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the parent Assistant.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.query"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateUnderstandQuery",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateUnderstandQueryRequest",
                "properties": {
                  "Language": {
                    "type": "string",
                    "description": "An ISO language-country string of the sample."
                  },
                  "Query": {
                    "type": "string",
                    "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. It can be up to 2048 characters long."
                  },
                  "Tasks": {
                    "type": "string",
                    "description": "Constraints the query to a set of tasks. Useful when you need to constrain the paths the user can take. Tasks should be comma separated *task-unique-name-1*, *task-unique-name-2*"
                  },
                  "ModelBuild": {
                    "type": "string",
                    "description": "The Model Build Sid or unique name of the Model Build to be queried."
                  },
                  "Field": {
                    "type": "string",
                    "description": "Constraints the query to a given Field with an task. Useful when you know the Field you are expecting. It accepts one field in the format *task-unique-name-1*:*field-unique-name*"
                  }
                },
                "required": [
                  "Language",
                  "Query"
                ]
              }
            }
          }
        }
      }
    },
    "/understand/Assistants/{AssistantSid}/Tasks/{TaskSid}/Samples/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance",
        "parent": "/Assistants/{AssistantSid}/Tasks"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": "The unique ID of the Task associated with this Sample.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UF[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.task.sample"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchUnderstandSample",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": "The unique ID of the Task associated with this Sample.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UF[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.task.sample"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateUnderstandSample",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateUnderstandSampleRequest",
                "properties": {
                  "Language": {
                    "type": "string",
                    "description": "An ISO language-country string of the sample."
                  },
                  "TaggedText": {
                    "type": "string",
                    "description": "The text example of how end-users may express this task. The sample may contain Field tag blocks."
                  },
                  "SourceChannel": {
                    "type": "string",
                    "description": "The communication channel the sample was captured. It can be: *voice*, *sms*, *chat*, *alexa*, *google-assistant*, or *slack*. If not included the value will be null"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": "The unique ID of the Task associated with this Sample.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^UF[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteUnderstandSample",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/understand/Assistants/{AssistantSid}/Tasks/{TaskSid}/Samples": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "list",
        "parent": "/Assistants/{AssistantSid}/Tasks"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": "The unique ID of the Task associated with this Sample.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Language",
            "in": "query",
            "description": "An ISO language-country string of the sample.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListUnderstandSampleResponse",
                  "properties": {
                    "samples": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/preview.understand.assistant.task.sample"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListUnderstandSample",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": "The unique ID of the Task associated with this Sample.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.task.sample"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateUnderstandSample",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateUnderstandSampleRequest",
                "properties": {
                  "Language": {
                    "type": "string",
                    "description": "An ISO language-country string of the sample."
                  },
                  "TaggedText": {
                    "type": "string",
                    "description": "The text example of how end-users may express this task. The sample may contain Field tag blocks."
                  },
                  "SourceChannel": {
                    "type": "string",
                    "description": "The communication channel the sample was captured. It can be: *voice*, *sms*, *chat*, *alexa*, *google-assistant*, or *slack*. If not included the value will be null"
                  }
                },
                "required": [
                  "Language",
                  "TaggedText"
                ]
              }
            }
          }
        }
      }
    },
    "/understand/Assistants/{AssistantSid}/StyleSheet": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance",
        "parent": "/Assistants"
      },
      "get": {
        "description": "Returns Style sheet JSON object for this Assistant",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.style_sheet"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchUnderstandStyleSheet",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "Updates the style sheet for an assistant identified by {AssistantSid} or {AssistantUniqueName}.",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.style_sheet"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateUnderstandStyleSheet",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateUnderstandStyleSheetRequest",
                "properties": {
                  "StyleSheet": {
                    "description": "The JSON Style sheet string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/understand/Assistants/{AssistantSid}/Tasks/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance",
        "parent": "/Assistants"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.task"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchUnderstandTask",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.task"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateUnderstandTask",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateUnderstandTaskRequest",
                "properties": {
                  "FriendlyName": {
                    "type": "string",
                    "description": "A user-provided string that identifies this resource. It is non-unique and can up to 255 characters long."
                  },
                  "UniqueName": {
                    "type": "string",
                    "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long."
                  },
                  "Actions": {
                    "description": "A user-provided JSON object encoded as a string to specify the actions for this task. It is optional and non-unique."
                  },
                  "ActionsUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "User-provided HTTP endpoint where from the assistant fetches actions"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteUnderstandTask",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/understand/Assistants/{AssistantSid}/Tasks": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "list",
        "parent": "/Assistants"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListUnderstandTaskResponse",
                  "properties": {
                    "tasks": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/preview.understand.assistant.task"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListUnderstandTask",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the Assistant.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.task"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateUnderstandTask",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateUnderstandTaskRequest",
                "properties": {
                  "UniqueName": {
                    "type": "string",
                    "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long."
                  },
                  "FriendlyName": {
                    "type": "string",
                    "description": "A user-provided string that identifies this resource. It is non-unique and can up to 255 characters long."
                  },
                  "Actions": {
                    "description": "A user-provided JSON object encoded as a string to specify the actions for this task. It is optional and non-unique."
                  },
                  "ActionsUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "User-provided HTTP endpoint where from the assistant fetches actions"
                  }
                },
                "required": [
                  "UniqueName"
                ]
              }
            }
          }
        }
      }
    },
    "/understand/Assistants/{AssistantSid}/Tasks/{TaskSid}/Actions": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance",
        "parent": "/Assistants/{AssistantSid}/Tasks",
        "className": "task_actions"
      },
      "get": {
        "description": "Returns JSON actions for this Task.",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the parent Assistant.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": "The unique ID of the Task.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.task.task_actions"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchUnderstandTaskActions",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "Updates the actions of an Task identified by {TaskSid} or {TaskUniqueName}.",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the parent Assistant.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": "The unique ID of the Task.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.task.task_actions"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateUnderstandTaskActions",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateUnderstandTaskActionsRequest",
                "properties": {
                  "Actions": {
                    "description": "The JSON actions that instruct the Assistant how to perform this task."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/understand/Assistants/{AssistantSid}/Tasks/{TaskSid}/Statistics": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance",
        "parent": "/Assistants/{AssistantSid}/Tasks",
        "className": "task_statistics"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "AssistantSid",
            "in": "path",
            "description": "The unique ID of the parent Assistant.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "TaskSid",
            "in": "path",
            "description": "The unique ID of the Task associated with this Field.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.task.task_statistics"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchUnderstandTaskStatistics",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/wireless/Commands/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DC[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.wireless.command"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchWirelessCommand",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/wireless/Commands": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "list"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "Device",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sim",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Direction",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListWirelessCommandResponse",
                  "properties": {
                    "commands": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/preview.wireless.command"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListWirelessCommand",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.wireless.command"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateWirelessCommand",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateWirelessCommandRequest",
                "properties": {
                  "Command": {
                    "type": "string",
                    "description": ""
                  },
                  "Device": {
                    "type": "string",
                    "description": ""
                  },
                  "Sim": {
                    "type": "string",
                    "description": ""
                  },
                  "CallbackMethod": {
                    "type": "string",
                    "description": ""
                  },
                  "CallbackUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": ""
                  },
                  "CommandMode": {
                    "type": "string",
                    "description": ""
                  },
                  "IncludeSid": {
                    "type": "string",
                    "description": ""
                  }
                },
                "required": [
                  "Command"
                ]
              }
            }
          }
        }
      }
    },
    "/wireless/RatePlans": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "list"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListWirelessRatePlanResponse",
                  "properties": {
                    "rate_plans": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/preview.wireless.rate_plan"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListWirelessRatePlan",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.wireless.rate_plan"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateWirelessRatePlan",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateWirelessRatePlanRequest",
                "properties": {
                  "UniqueName": {
                    "type": "string",
                    "description": ""
                  },
                  "FriendlyName": {
                    "type": "string",
                    "description": ""
                  },
                  "DataEnabled": {
                    "type": "boolean",
                    "description": ""
                  },
                  "DataLimit": {
                    "type": "integer",
                    "description": ""
                  },
                  "DataMetering": {
                    "type": "string",
                    "description": ""
                  },
                  "MessagingEnabled": {
                    "type": "boolean",
                    "description": ""
                  },
                  "VoiceEnabled": {
                    "type": "boolean",
                    "description": ""
                  },
                  "CommandsEnabled": {
                    "type": "boolean",
                    "description": ""
                  },
                  "NationalRoamingEnabled": {
                    "type": "boolean",
                    "description": ""
                  },
                  "InternationalRoaming": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/wireless/RatePlans/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.wireless.rate_plan"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchWirelessRatePlan",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.wireless.rate_plan"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateWirelessRatePlan",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateWirelessRatePlanRequest",
                "properties": {
                  "UniqueName": {
                    "type": "string",
                    "description": ""
                  },
                  "FriendlyName": {
                    "type": "string",
                    "description": ""
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteWirelessRatePlan",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/wireless/Sims/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.wireless.sim"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchWirelessSim",
        "x-maturity": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.wireless.sim"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateWirelessSim",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateWirelessSimRequest",
                "properties": {
                  "UniqueName": {
                    "type": "string",
                    "description": ""
                  },
                  "CallbackMethod": {
                    "type": "string",
                    "description": ""
                  },
                  "CallbackUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": ""
                  },
                  "FriendlyName": {
                    "type": "string",
                    "description": ""
                  },
                  "RatePlan": {
                    "type": "string",
                    "description": ""
                  },
                  "Status": {
                    "type": "string",
                    "description": ""
                  },
                  "CommandsCallbackMethod": {
                    "type": "string",
                    "format": "http-method",
                    "enum": [
                      "HEAD",
                      "GET",
                      "POST",
                      "PATCH",
                      "PUT",
                      "DELETE"
                    ],
                    "description": ""
                  },
                  "CommandsCallbackUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": ""
                  },
                  "SmsFallbackMethod": {
                    "type": "string",
                    "format": "http-method",
                    "enum": [
                      "HEAD",
                      "GET",
                      "POST",
                      "PATCH",
                      "PUT",
                      "DELETE"
                    ],
                    "description": ""
                  },
                  "SmsFallbackUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": ""
                  },
                  "SmsMethod": {
                    "type": "string",
                    "format": "http-method",
                    "enum": [
                      "HEAD",
                      "GET",
                      "POST",
                      "PATCH",
                      "PUT",
                      "DELETE"
                    ],
                    "description": ""
                  },
                  "SmsUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": ""
                  },
                  "VoiceFallbackMethod": {
                    "type": "string",
                    "format": "http-method",
                    "enum": [
                      "HEAD",
                      "GET",
                      "POST",
                      "PATCH",
                      "PUT",
                      "DELETE"
                    ],
                    "description": ""
                  },
                  "VoiceFallbackUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": ""
                  },
                  "VoiceMethod": {
                    "type": "string",
                    "format": "http-method",
                    "enum": [
                      "HEAD",
                      "GET",
                      "POST",
                      "PATCH",
                      "PUT",
                      "DELETE"
                    ],
                    "description": ""
                  },
                  "VoiceUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "/wireless/Sims": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "list"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "Status",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Iccid",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RatePlan",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SimRegistrationCode",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListWirelessSimResponse",
                  "properties": {
                    "sims": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/preview.wireless.sim"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListWirelessSim",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/wireless/Sims/{SimSid}/Usage": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance",
        "parent": "/Sims"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "SimSid",
            "in": "path",
            "description": "",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "End",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Start",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.wireless.sim.usage"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchWirelessUsage",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/TrustedComms/BrandedChannels/{Sid}": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [
          "account_sid",
          "business_sid",
          "brand_sid",
          "sid",
          "links",
          "url"
        ],
        "pathType": "instance"
      },
      "get": {
        "description": "Fetch a specific Branded Channel.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The unique SID identifier of the Branded Channel.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^BW[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.trusted_comms.branded_channel"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchTrustedCommsBrandedChannel",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/TrustedComms/BrandedChannels": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [
          "account_sid",
          "business_sid",
          "brand_sid",
          "sid",
          "links",
          "url"
        ],
        "pathType": "list"
      }
    },
    "/TrustedComms/BrandsInformation": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [
          "update_time",
          "file_link",
          "file_link_ttl_in_seconds",
          "url"
        ],
        "pathType": "instance"
      },
      "get": {
        "description": "Retrieve the newest available BrandInformation",
        "parameters": [
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "Standard `If-None-Match` HTTP header. For more information visit: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.trusted_comms.brands_information"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchTrustedCommsBrandsInformation",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/TrustedComms/BrandedChannels/{BrandedChannelSid}/Channels": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [
          "account_sid",
          "business_sid",
          "brand_sid",
          "branded_channel_sid",
          "phone_number_sid",
          "phone_number",
          "url"
        ],
        "pathType": "list",
        "parent": "/BrandedChannels"
      },
      "post": {
        "description": "Associate a channel to a branded channel",
        "parameters": [
          {
            "name": "BrandedChannelSid",
            "in": "path",
            "description": "The unique SID identifier of the Branded Channel. The given phone number is going to be assigned to this Branded Channel",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^BW[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.trusted_comms.branded_channel.channel"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateTrustedCommsChannel",
        "x-maturity": [
          "Preview"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateTrustedCommsChannelRequest",
                "properties": {
                  "PhoneNumberSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^PN[0-9a-fA-F]{32}$",
                    "description": "The unique SID identifier of the Phone Number of the Phone number to be assigned to the Branded Channel."
                  }
                },
                "required": [
                  "PhoneNumberSid"
                ]
              }
            }
          }
        }
      }
    },
    "/TrustedComms/CPS": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [
          "cps_url",
          "phone_number",
          "url"
        ],
        "pathType": "instance",
        "className": "cps"
      },
      "get": {
        "description": "Fetch a specific Call Placement Service (CPS) given a phone number via `X-XCNAM-Sensitive-Phone-Number` header.",
        "parameters": [
          {
            "name": "X-Xcnam-Sensitive-Phone-Number",
            "in": "header",
            "description": "Phone number used to retrieve its corresponding CPS.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.trusted_comms.cps"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchTrustedCommsCps",
        "x-maturity": [
          "Preview"
        ]
      }
    },
    "/TrustedComms/CurrentCall": {
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "description": "TODO: Resource-level docs",
      "x-twilio": {
        "defaultOutputProperties": [
          "bg_color",
          "caller",
          "created_at",
          "font_color",
          "from",
          "logo",
          "manager",
          "reason",
          "shield_img",
          "sid",
          "status",
          "to",
          "url",
          "use_case"
        ],
        "pathType": "instance"
      },
      "get": {
        "description": "Retrieve a current call given the originating and terminating number via `X-XCNAM-Sensitive-Phone-Number-From` and `X-XCNAM-Sensitive-Phone-Number-To` headers.",
        "parameters": [
          {
            "name": "X-Xcnam-Sensitive-Phone-Number-From",
            "in": "header",
            "description": "The originating Phone Number, given in [E.164 format](https://www.twilio.com/docs/glossary/what-e164). This phone number should be a Twilio number, otherwise it will return an error with HTTP Status Code 400.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Xcnam-Sensitive-Phone-Number-To",
            "in": "header",
            "description": "The terminating Phone Number, given in [E.164 format](https://www.twilio.com/docs/glossary/what-e164).",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.trusted_comms.current_call"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchTrustedCommsCurrentCall",
        "x-maturity": [
          "Preview"
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://preview.twilio.com"
    }
  ],
  "x-maturity": [
    {
      "name": "Preview",
      "description": "PLEASE NOTE that this is a Preview product that is subject to change. Use it with caution. If you currently do not have developer preview access, please contact help@twilio.com."
    }
  ]
}