{
  "components": {
    "schemas": {
      "conversations.v1.configuration": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Account responsible for this configuration."
          },
          "default_chat_service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the default Conversation Service that every new conversation is associated with."
          },
          "default_messaging_service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the default Messaging Service that every new conversation is associated with."
          },
          "default_inactive_timer": {
            "type": "string",
            "nullable": true,
            "description": "Default ISO8601 duration when conversation will be switched to `inactive` state."
          },
          "default_closed_timer": {
            "type": "string",
            "nullable": true,
            "description": "Default ISO8601 duration when conversation will be switched to `closed` state."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "An absolute URL for this global configuration."
          },
          "links": {
            "type": "object",
            "format": "uri-map",
            "nullable": true,
            "description": "Absolute URLs to access the webhook and default service configurations."
          }
        }
      },
      "conversations.v1.configuration_address": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^IG[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "A 34 character string that uniquely identifies this resource."
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Account the address belongs to."
          },
          "type": {
            "type": "string",
            "nullable": true,
            "description": "Type of Address."
          },
          "address": {
            "type": "string",
            "nullable": true,
            "description": "The unique address to be configured."
          },
          "friendly_name": {
            "type": "string",
            "nullable": true,
            "description": "The human-readable name of this configuration."
          },
          "auto_creation": {
            "nullable": true,
            "description": "Auto Creation configuration for the address."
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was created."
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was last updated."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "An absolute URL for this address configuration."
          }
        }
      },
      "configuration_address_enum_type": {
        "type": "string",
        "enum": [
          "sms",
          "whatsapp",
          "messenger",
          "gbm"
        ]
      },
      "configuration_address_enum_auto_creation_type": {
        "type": "string",
        "enum": [
          "webhook",
          "studio",
          "default"
        ]
      },
      "configuration_address_enum_method": {
        "type": "string",
        "enum": [
          "GET",
          "POST"
        ]
      },
      "conversations.v1.configuration.configuration_webhook": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Account responsible for this conversation."
          },
          "method": {
            "type": "string",
            "$ref": "#/components/schemas/configuration_webhook_enum_method",
            "nullable": true,
            "description": "The HTTP method to be used when sending a webhook request."
          },
          "filters": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "description": "The list of webhook event triggers that are enabled for this Service."
          },
          "pre_webhook_url": {
            "type": "string",
            "nullable": true,
            "description": "The absolute url the pre-event webhook request should be sent to."
          },
          "post_webhook_url": {
            "type": "string",
            "nullable": true,
            "description": "The absolute url the post-event webhook request should be sent to."
          },
          "target": {
            "type": "string",
            "$ref": "#/components/schemas/configuration_webhook_enum_target",
            "nullable": true,
            "description": "The routing target of the webhook."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "An absolute URL for this webhook."
          }
        }
      },
      "configuration_webhook_enum_target": {
        "type": "string",
        "enum": [
          "webhook",
          "flex"
        ]
      },
      "configuration_webhook_enum_method": {
        "type": "string",
        "enum": [
          "GET",
          "POST"
        ]
      },
      "conversations.v1.conversation": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Account responsible for this conversation."
          },
          "chat_service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Conversation Service this conversation belongs to."
          },
          "messaging_service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Messaging Service this conversation belongs to."
          },
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "A 34 character string that uniquely identifies this resource."
          },
          "friendly_name": {
            "type": "string",
            "nullable": true,
            "description": "The human-readable name of this conversation."
          },
          "unique_name": {
            "type": "string",
            "nullable": true,
            "description": "An application-defined string that uniquely identifies the resource"
          },
          "attributes": {
            "type": "string",
            "nullable": true,
            "description": "An optional string metadata field you can use to store any data you wish."
          },
          "state": {
            "type": "string",
            "$ref": "#/components/schemas/conversation_enum_state",
            "nullable": true,
            "description": "Current state of this conversation."
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was created."
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was last updated."
          },
          "timers": {
            "nullable": true,
            "description": "Timer date values for this conversation."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "An absolute URL for this conversation."
          },
          "links": {
            "type": "object",
            "format": "uri-map",
            "nullable": true,
            "description": "Absolute URLs to access the participants, messages and webhooks of this conversation."
          },
          "bindings": {
            "nullable": true
          }
        }
      },
      "conversation_enum_webhook_enabled_type": {
        "type": "string",
        "enum": [
          "true",
          "false"
        ]
      },
      "conversation_enum_state": {
        "type": "string",
        "enum": [
          "inactive",
          "active",
          "closed"
        ]
      },
      "conversations.v1.conversation.conversation_message": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Account responsible for this message."
          },
          "conversation_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Conversation for this message."
          },
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^IM[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "A 34 character string that uniquely identifies this resource."
          },
          "index": {
            "type": "integer",
            "nullable": true,
            "description": "The index of the message within the Conversation."
          },
          "author": {
            "type": "string",
            "nullable": true,
            "description": "The channel specific identifier of the message's author."
          },
          "body": {
            "type": "string",
            "nullable": true,
            "description": "The content of the message."
          },
          "media": {
            "type": "array",
            "items": {},
            "nullable": true,
            "description": "An array of objects that describe the Message's media if attached, otherwise, null."
          },
          "attributes": {
            "type": "string",
            "nullable": true,
            "description": "A string metadata field you can use to store any data you wish."
          },
          "participant_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^MB[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of messages's author participant."
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was created."
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was last updated."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "An absolute API URL for this message."
          },
          "delivery": {
            "nullable": true,
            "description": "An object that contains the summary of delivery statuses for the message to non-chat participants."
          },
          "links": {
            "type": "object",
            "format": "uri-map",
            "nullable": true,
            "description": "Absolute URL to access the receipts of this message."
          }
        }
      },
      "conversation_message_enum_order_type": {
        "type": "string",
        "enum": [
          "asc",
          "desc"
        ]
      },
      "conversation_message_enum_webhook_enabled_type": {
        "type": "string",
        "enum": [
          "true",
          "false"
        ]
      },
      "conversations.v1.conversation.conversation_message.conversation_message_receipt": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Account responsible for this participant."
          },
          "conversation_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Conversation for this message."
          },
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^DY[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "A 34 character string that uniquely identifies this resource."
          },
          "message_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^IM[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the message the delivery receipt belongs to"
          },
          "channel_message_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "A messaging channel-specific identifier for the message delivered to participant"
          },
          "participant_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^MB[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the participant the delivery receipt belongs to."
          },
          "status": {
            "type": "string",
            "$ref": "#/components/schemas/conversation_message_receipt_enum_delivery_status",
            "nullable": true,
            "description": "The message delivery status"
          },
          "error_code": {
            "type": "integer",
            "nullable": true,
            "description": "The message [delivery error code](https://www.twilio.com/docs/sms/api/message-resource#delivery-related-errors) for a `failed` status"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was created."
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was last updated."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "An absolute URL for this delivery receipt."
          }
        }
      },
      "conversation_message_receipt_enum_delivery_status": {
        "type": "string",
        "enum": [
          "read",
          "failed",
          "delivered",
          "undelivered",
          "sent"
        ]
      },
      "conversations.v1.conversation.conversation_participant": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Account responsible for this participant."
          },
          "conversation_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Conversation for this participant."
          },
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^MB[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "A 34 character string that uniquely identifies this resource."
          },
          "identity": {
            "type": "string",
            "nullable": true,
            "description": "A unique string identifier for the conversation participant as Conversation User."
          },
          "attributes": {
            "type": "string",
            "nullable": true,
            "description": "An optional string metadata field you can use to store any data you wish."
          },
          "messaging_binding": {
            "nullable": true,
            "description": "Information about how this participant exchanges messages with the conversation."
          },
          "role_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of a conversation-level Role to assign to the participant"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was created."
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was last updated."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "An absolute URL for this participant."
          },
          "last_read_message_index": {
            "type": "integer",
            "nullable": true,
            "description": "Index of last \u201cread\u201d message in the Conversation for the Participant."
          },
          "last_read_timestamp": {
            "type": "string",
            "nullable": true,
            "description": "Timestamp of last \u201cread\u201d message in the Conversation for the Participant."
          }
        }
      },
      "conversation_participant_enum_webhook_enabled_type": {
        "type": "string",
        "enum": [
          "true",
          "false"
        ]
      },
      "conversations.v1.conversation.conversation_scoped_webhook": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^WH[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "A 34 character string that uniquely identifies this resource."
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Account responsible for this conversation."
          },
          "conversation_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Conversation for this webhook."
          },
          "target": {
            "type": "string",
            "nullable": true,
            "description": "The target of this webhook."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "An absolute URL for this webhook."
          },
          "configuration": {
            "nullable": true,
            "description": "The configuration of this webhook."
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was created."
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was last updated."
          }
        }
      },
      "conversation_scoped_webhook_enum_target": {
        "type": "string",
        "enum": [
          "webhook",
          "trigger",
          "studio"
        ]
      },
      "conversation_scoped_webhook_enum_method": {
        "type": "string",
        "enum": [
          "GET",
          "POST"
        ]
      },
      "conversations.v1.credential": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^CR[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "A 34 character string that uniquely identifies this resource."
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Account responsible for this credential."
          },
          "friendly_name": {
            "type": "string",
            "nullable": true,
            "description": "The human-readable name of this credential."
          },
          "type": {
            "type": "string",
            "$ref": "#/components/schemas/credential_enum_push_type",
            "nullable": true,
            "description": "The type of push-notification service the credential is for."
          },
          "sandbox": {
            "type": "string",
            "nullable": true,
            "description": "[APN only] Whether to send the credential to sandbox APNs."
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was created."
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was last updated."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "An absolute URL for this credential."
          }
        }
      },
      "credential_enum_push_type": {
        "type": "string",
        "enum": [
          "apn",
          "gcm",
          "fcm"
        ]
      },
      "conversations.v1.participant_conversation": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Account responsible for this conversation."
          },
          "chat_service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Conversation Service this conversation belongs to."
          },
          "participant_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^MB[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Participant."
          },
          "participant_user_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^US[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID for the conversation participant as Conversation User."
          },
          "participant_identity": {
            "type": "string",
            "nullable": true,
            "description": "A unique string identifier for the conversation participant as Conversation User."
          },
          "participant_messaging_binding": {
            "nullable": true,
            "description": "Information about how this participant exchanges messages with the conversation."
          },
          "conversation_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Conversation this Participant belongs to."
          },
          "conversation_unique_name": {
            "type": "string",
            "nullable": true,
            "description": "An application-defined string that uniquely identifies the Conversation resource"
          },
          "conversation_friendly_name": {
            "type": "string",
            "nullable": true,
            "description": "The human-readable name of this conversation."
          },
          "conversation_attributes": {
            "type": "string",
            "nullable": true,
            "description": "An optional string metadata field you can use to store any data you wish."
          },
          "conversation_date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this conversation was created."
          },
          "conversation_date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this conversation was last updated."
          },
          "conversation_created_by": {
            "type": "string",
            "nullable": true,
            "description": "Creator of this conversation."
          },
          "conversation_state": {
            "type": "string",
            "$ref": "#/components/schemas/participant_conversation_enum_state",
            "nullable": true,
            "description": "The current state of this User Conversation"
          },
          "conversation_timers": {
            "nullable": true,
            "description": "Timer date values for this conversation."
          },
          "links": {
            "type": "object",
            "format": "uri-map",
            "nullable": true,
            "description": "Absolute URLs to access the participant and conversation of this Participant Conversation."
          }
        }
      },
      "participant_conversation_enum_state": {
        "type": "string",
        "enum": [
          "inactive",
          "active",
          "closed"
        ]
      },
      "conversations.v1.role": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique string that identifies the resource"
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Account that created the resource"
          },
          "chat_service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Conversation Service that the resource is associated with"
          },
          "friendly_name": {
            "type": "string",
            "nullable": true,
            "description": "The string that you assigned to describe the resource"
          },
          "type": {
            "type": "string",
            "$ref": "#/components/schemas/role_enum_role_type",
            "nullable": true,
            "description": "The type of role"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "description": "An array of the permissions the role has been granted"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the resource was created"
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the resource was last updated"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "An absolute URL for this user role."
          }
        }
      },
      "role_enum_role_type": {
        "type": "string",
        "enum": [
          "conversation",
          "service"
        ]
      },
      "conversations.v1.service": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Account responsible for this service."
          },
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "A 34 character string that uniquely identifies this resource."
          },
          "friendly_name": {
            "type": "string",
            "nullable": true,
            "description": "The human-readable name of this service."
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was created."
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was last updated."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "An absolute URL for this service."
          },
          "links": {
            "type": "object",
            "format": "uri-map",
            "nullable": true,
            "description": "Absolute URLs to access the conversations, users, roles, bindings and configuration of this service."
          }
        }
      },
      "conversations.v1.service.service_binding": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^BS[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "A 34 character string that uniquely identifies this resource."
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Account responsible for this binding."
          },
          "chat_service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Conversation Service that the resource is associated with."
          },
          "credential_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^CR[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Credential for the binding."
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was created."
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was last updated."
          },
          "endpoint": {
            "type": "string",
            "nullable": true,
            "description": "The unique endpoint identifier for the Binding."
          },
          "identity": {
            "type": "string",
            "nullable": true,
            "description": "The identity of Conversation User associated with this binding."
          },
          "binding_type": {
            "type": "string",
            "$ref": "#/components/schemas/service_binding_enum_binding_type",
            "nullable": true,
            "description": "The push technology to use for the binding."
          },
          "message_types": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "description": "The Conversation message types the binding is subscribed to."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "An absolute URL for this binding."
          }
        }
      },
      "service_binding_enum_binding_type": {
        "type": "string",
        "enum": [
          "apn",
          "gcm",
          "fcm"
        ]
      },
      "conversations.v1.service.service_configuration": {
        "type": "object",
        "properties": {
          "chat_service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique string that identifies the resource"
          },
          "default_conversation_creator_role_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The role assigned to a conversation creator user when they join a new conversation"
          },
          "default_conversation_role_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The role assigned to users when they are added to a conversation"
          },
          "default_chat_service_role_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The service role assigned to users when they are added to the service"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "An absolute URL for this service configuration."
          },
          "links": {
            "type": "object",
            "format": "uri-map",
            "nullable": true,
            "description": "Absolute URL to access the push notifications configuration of this service."
          },
          "reachability_enabled": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether the Reachability Indicator feature is enabled for this Conversations Service"
          }
        }
      },
      "conversations.v1.service.service_conversation": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Account responsible for this conversation."
          },
          "chat_service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Conversation Service this conversation belongs to."
          },
          "messaging_service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Messaging Service this conversation belongs to."
          },
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "A 34 character string that uniquely identifies this resource."
          },
          "friendly_name": {
            "type": "string",
            "nullable": true,
            "description": "The human-readable name of this conversation."
          },
          "unique_name": {
            "type": "string",
            "nullable": true,
            "description": "An application-defined string that uniquely identifies the resource"
          },
          "attributes": {
            "type": "string",
            "nullable": true,
            "description": "An optional string metadata field you can use to store any data you wish."
          },
          "state": {
            "type": "string",
            "$ref": "#/components/schemas/service_conversation_enum_state",
            "nullable": true,
            "description": "Current state of this conversation."
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was created."
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was last updated."
          },
          "timers": {
            "nullable": true,
            "description": "Timer date values for this conversation."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "An absolute URL for this conversation."
          },
          "links": {
            "type": "object",
            "format": "uri-map",
            "nullable": true,
            "description": "Absolute URLs to access the participants, messages and webhooks of this conversation."
          },
          "bindings": {
            "nullable": true
          }
        }
      },
      "service_conversation_enum_webhook_enabled_type": {
        "type": "string",
        "enum": [
          "true",
          "false"
        ]
      },
      "service_conversation_enum_state": {
        "type": "string",
        "enum": [
          "inactive",
          "active",
          "closed"
        ]
      },
      "conversations.v1.service.service_conversation.service_conversation_message": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Account responsible for this message."
          },
          "chat_service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Conversation Service that the resource is associated with."
          },
          "conversation_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Conversation for this message."
          },
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^IM[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "A 34 character string that uniquely identifies this resource."
          },
          "index": {
            "type": "integer",
            "nullable": true,
            "description": "The index of the message within the Conversation."
          },
          "author": {
            "type": "string",
            "nullable": true,
            "description": "The channel specific identifier of the message's author."
          },
          "body": {
            "type": "string",
            "nullable": true,
            "description": "The content of the message."
          },
          "media": {
            "type": "array",
            "items": {},
            "nullable": true,
            "description": "An array of objects that describe the Message's media if attached, otherwise, null."
          },
          "attributes": {
            "type": "string",
            "nullable": true,
            "description": "A string metadata field you can use to store any data you wish."
          },
          "participant_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^MB[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of messages's author participant."
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was created."
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was last updated."
          },
          "delivery": {
            "nullable": true,
            "description": "An object that contains the summary of delivery statuses for the message to non-chat participants."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "An absolute URL for this message."
          },
          "links": {
            "type": "object",
            "format": "uri-map",
            "nullable": true,
            "description": "Absolute URL to access the receipts of this message."
          }
        }
      },
      "service_conversation_message_enum_order_type": {
        "type": "string",
        "enum": [
          "asc",
          "desc"
        ]
      },
      "service_conversation_message_enum_webhook_enabled_type": {
        "type": "string",
        "enum": [
          "true",
          "false"
        ]
      },
      "conversations.v1.service.service_conversation.service_conversation_message.service_conversation_message_receipt": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Account responsible for this participant."
          },
          "chat_service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Conversation Service that the resource is associated with."
          },
          "conversation_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Conversation for this message."
          },
          "message_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^IM[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the message the delivery receipt belongs to"
          },
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^DY[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "A 34 character string that uniquely identifies this resource."
          },
          "channel_message_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^[a-zA-Z]{2}[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "A messaging channel-specific identifier for the message delivered to participant"
          },
          "participant_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^MB[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the participant the delivery receipt belongs to."
          },
          "status": {
            "type": "string",
            "$ref": "#/components/schemas/service_conversation_message_receipt_enum_delivery_status",
            "nullable": true,
            "description": "The message delivery status"
          },
          "error_code": {
            "type": "integer",
            "nullable": true,
            "description": "The message [delivery error code](https://www.twilio.com/docs/sms/api/message-resource#delivery-related-errors) for a `failed` status"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was created."
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was last updated."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "An absolute URL for this delivery receipt."
          }
        }
      },
      "service_conversation_message_receipt_enum_delivery_status": {
        "type": "string",
        "enum": [
          "read",
          "failed",
          "delivered",
          "undelivered",
          "sent"
        ]
      },
      "conversations.v1.service.service_conversation.service_conversation_participant": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Account responsible for this participant."
          },
          "chat_service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Conversation Service that the resource is associated with."
          },
          "conversation_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Conversation for this participant."
          },
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^MB[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "A 34 character string that uniquely identifies this resource."
          },
          "identity": {
            "type": "string",
            "nullable": true,
            "description": "A unique string identifier for the conversation participant as Conversation User."
          },
          "attributes": {
            "type": "string",
            "nullable": true,
            "description": "An optional string metadata field you can use to store any data you wish."
          },
          "messaging_binding": {
            "nullable": true,
            "description": "Information about how this participant exchanges messages with the conversation."
          },
          "role_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of a conversation-level Role to assign to the participant"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was created."
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was last updated."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "An absolute URL for this participant."
          },
          "last_read_message_index": {
            "type": "integer",
            "nullable": true,
            "description": "Index of last \u201cread\u201d message in the Conversation for the Participant."
          },
          "last_read_timestamp": {
            "type": "string",
            "nullable": true,
            "description": "Timestamp of last \u201cread\u201d message in the Conversation for the Participant."
          }
        }
      },
      "service_conversation_participant_enum_webhook_enabled_type": {
        "type": "string",
        "enum": [
          "true",
          "false"
        ]
      },
      "conversations.v1.service.service_conversation.service_conversation_scoped_webhook": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^WH[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "A 34 character string that uniquely identifies this resource."
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Account responsible for this conversation."
          },
          "chat_service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Conversation Service that the resource is associated with."
          },
          "conversation_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Conversation for this webhook."
          },
          "target": {
            "type": "string",
            "nullable": true,
            "description": "The target of this webhook."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "An absolute URL for this webhook."
          },
          "configuration": {
            "nullable": true,
            "description": "The configuration of this webhook."
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was created."
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this resource was last updated."
          }
        }
      },
      "service_conversation_scoped_webhook_enum_target": {
        "type": "string",
        "enum": [
          "webhook",
          "trigger",
          "studio"
        ]
      },
      "service_conversation_scoped_webhook_enum_method": {
        "type": "string",
        "enum": [
          "GET",
          "POST"
        ]
      },
      "conversations.v1.service.service_configuration.service_notification": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Account responsible for this configuration."
          },
          "chat_service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Conversation Service that the Configuration applies to."
          },
          "new_message": {
            "nullable": true,
            "description": "The Push Notification configuration for New Messages."
          },
          "added_to_conversation": {
            "nullable": true,
            "description": "The Push Notification configuration for being added to a Conversation."
          },
          "removed_from_conversation": {
            "nullable": true,
            "description": "The Push Notification configuration for being removed from a Conversation."
          },
          "log_enabled": {
            "type": "boolean",
            "nullable": true,
            "description": "Weather the notification logging is enabled."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "An absolute URL for this configuration."
          }
        }
      },
      "conversations.v1.service.service_participant_conversation": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Account responsible for this conversation."
          },
          "chat_service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Conversation Service this conversation belongs to."
          },
          "participant_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^MB[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Participant."
          },
          "participant_user_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^US[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID for the conversation participant as Conversation User."
          },
          "participant_identity": {
            "type": "string",
            "nullable": true,
            "description": "A unique string identifier for the conversation participant as Conversation User."
          },
          "participant_messaging_binding": {
            "nullable": true,
            "description": "Information about how this participant exchanges messages with the conversation."
          },
          "conversation_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Conversation this Participant belongs to."
          },
          "conversation_unique_name": {
            "type": "string",
            "nullable": true,
            "description": "An application-defined string that uniquely identifies the Conversation resource."
          },
          "conversation_friendly_name": {
            "type": "string",
            "nullable": true,
            "description": "The human-readable name of this conversation."
          },
          "conversation_attributes": {
            "type": "string",
            "nullable": true,
            "description": "An optional string metadata field you can use to store any data you wish."
          },
          "conversation_date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this conversation was created."
          },
          "conversation_date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this conversation was last updated."
          },
          "conversation_created_by": {
            "type": "string",
            "nullable": true,
            "description": "Creator of this conversation."
          },
          "conversation_state": {
            "type": "string",
            "$ref": "#/components/schemas/service_participant_conversation_enum_state",
            "nullable": true,
            "description": "The current state of this User Conversation"
          },
          "conversation_timers": {
            "nullable": true,
            "description": "Timer date values for this conversation."
          },
          "links": {
            "type": "object",
            "format": "uri-map",
            "nullable": true,
            "description": "Absolute URLs to access the participant and conversation of this Participant Conversation."
          }
        }
      },
      "service_participant_conversation_enum_state": {
        "type": "string",
        "enum": [
          "inactive",
          "active",
          "closed"
        ]
      },
      "conversations.v1.service.service_role": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique string that identifies the resource"
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Account that created the resource"
          },
          "chat_service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Conversation Service that the resource is associated with"
          },
          "friendly_name": {
            "type": "string",
            "nullable": true,
            "description": "The string that you assigned to describe the resource"
          },
          "type": {
            "type": "string",
            "$ref": "#/components/schemas/service_role_enum_role_type",
            "nullable": true,
            "description": "The type of role"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "description": "An array of the permissions the role has been granted"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the resource was created"
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the resource was last updated"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "An absolute URL for this user role."
          }
        }
      },
      "service_role_enum_role_type": {
        "type": "string",
        "enum": [
          "conversation",
          "service"
        ]
      },
      "conversations.v1.service.service_user": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^US[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique string that identifies the resource"
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Account that created the resource"
          },
          "chat_service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Conversation Service that the resource is associated with"
          },
          "role_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of a service-level Role assigned to the user"
          },
          "identity": {
            "type": "string",
            "nullable": true,
            "description": "The string that identifies the resource's User"
          },
          "friendly_name": {
            "type": "string",
            "nullable": true,
            "description": "The string that you assigned to describe the resource"
          },
          "attributes": {
            "type": "string",
            "nullable": true,
            "description": "The JSON Object string that stores application-specific data"
          },
          "is_online": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether the User is actively connected to this Conversations Service and online"
          },
          "is_notifiable": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether the User has a potentially valid Push Notification registration for this Conversations Service"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the resource was created"
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the resource was last updated"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "An absolute URL for this user."
          },
          "links": {
            "type": "object",
            "format": "uri-map",
            "nullable": true
          }
        }
      },
      "service_user_enum_webhook_enabled_type": {
        "type": "string",
        "enum": [
          "true",
          "false"
        ]
      },
      "conversations.v1.service.service_user.service_user_conversation": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Account responsible for this conversation."
          },
          "chat_service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Conversation Service this conversation belongs to."
          },
          "conversation_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Conversation for this User Conversation."
          },
          "unread_messages_count": {
            "type": "integer",
            "nullable": true,
            "description": "The number of unread Messages in the Conversation."
          },
          "last_read_message_index": {
            "type": "integer",
            "nullable": true,
            "description": "The index of the last read Message ."
          },
          "participant_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^MB[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "Participant Sid."
          },
          "user_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^US[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID for the User."
          },
          "friendly_name": {
            "type": "string",
            "nullable": true,
            "description": "The human-readable name of this conversation."
          },
          "conversation_state": {
            "type": "string",
            "$ref": "#/components/schemas/service_user_conversation_enum_state",
            "nullable": true,
            "description": "The current state of this User Conversation"
          },
          "timers": {
            "nullable": true,
            "description": "Timer date values for this conversation."
          },
          "attributes": {
            "type": "string",
            "nullable": true,
            "description": "An optional string metadata field you can use to store any data you wish."
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this conversation was created."
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this conversation was last updated."
          },
          "created_by": {
            "type": "string",
            "nullable": true,
            "description": "Creator of this conversation."
          },
          "notification_level": {
            "type": "string",
            "$ref": "#/components/schemas/service_user_conversation_enum_notification_level",
            "nullable": true,
            "description": "The Notification Level of this User Conversation."
          },
          "unique_name": {
            "type": "string",
            "nullable": true,
            "description": "An application-defined string that uniquely identifies the Conversation resource."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "links": {
            "type": "object",
            "format": "uri-map",
            "nullable": true,
            "description": "Absolute URLs to access the participant and conversation of this user conversation."
          }
        }
      },
      "service_user_conversation_enum_notification_level": {
        "type": "string",
        "enum": [
          "default",
          "muted"
        ]
      },
      "service_user_conversation_enum_state": {
        "type": "string",
        "enum": [
          "inactive",
          "active",
          "closed"
        ]
      },
      "conversations.v1.service.service_configuration.service_webhook_configuration": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Account responsible for this service."
          },
          "chat_service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to."
          },
          "pre_webhook_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The absolute url the pre-event webhook request should be sent to."
          },
          "post_webhook_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The absolute url the post-event webhook request should be sent to."
          },
          "filters": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "description": "The list of events that your configured webhook targets will receive. Events not configured here will not fire."
          },
          "method": {
            "type": "string",
            "$ref": "#/components/schemas/service_webhook_configuration_enum_method",
            "nullable": true,
            "description": "The HTTP method to be used when sending a webhook request"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "An absolute URL for this webhook."
          }
        }
      },
      "service_webhook_configuration_enum_method": {
        "type": "string",
        "enum": [
          "GET",
          "POST"
        ]
      },
      "conversations.v1.user": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^US[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique string that identifies the resource"
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Account that created the resource"
          },
          "chat_service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Conversation Service that the resource is associated with"
          },
          "role_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of a service-level Role assigned to the user"
          },
          "identity": {
            "type": "string",
            "nullable": true,
            "description": "The string that identifies the resource's User"
          },
          "friendly_name": {
            "type": "string",
            "nullable": true,
            "description": "The string that you assigned to describe the resource"
          },
          "attributes": {
            "type": "string",
            "nullable": true,
            "description": "The JSON Object string that stores application-specific data"
          },
          "is_online": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether the User is actively connected to this Conversations Service and online"
          },
          "is_notifiable": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether the User has a potentially valid Push Notification registration for this Conversations Service"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the resource was created"
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the resource was last updated"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "An absolute URL for this user."
          },
          "links": {
            "type": "object",
            "format": "uri-map",
            "nullable": true
          }
        }
      },
      "user_enum_webhook_enabled_type": {
        "type": "string",
        "enum": [
          "true",
          "false"
        ]
      },
      "conversations.v1.user.user_conversation": {
        "type": "object",
        "properties": {
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Account responsible for this conversation."
          },
          "chat_service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Conversation Service this conversation belongs to."
          },
          "conversation_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID of the Conversation for this User Conversation."
          },
          "unread_messages_count": {
            "type": "integer",
            "nullable": true,
            "description": "The number of unread Messages in the Conversation."
          },
          "last_read_message_index": {
            "type": "integer",
            "nullable": true,
            "description": "The index of the last read Message ."
          },
          "participant_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^MB[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "Participant Sid."
          },
          "user_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^US[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique ID for the User."
          },
          "friendly_name": {
            "type": "string",
            "nullable": true,
            "description": "The human-readable name of this conversation."
          },
          "conversation_state": {
            "type": "string",
            "$ref": "#/components/schemas/user_conversation_enum_state",
            "nullable": true,
            "description": "The current state of this User Conversation"
          },
          "timers": {
            "nullable": true,
            "description": "Timer date values for this conversation."
          },
          "attributes": {
            "type": "string",
            "nullable": true,
            "description": "An optional string metadata field you can use to store any data you wish."
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this conversation was created."
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The date that this conversation was last updated."
          },
          "created_by": {
            "type": "string",
            "nullable": true,
            "description": "Creator of this conversation."
          },
          "notification_level": {
            "type": "string",
            "$ref": "#/components/schemas/user_conversation_enum_notification_level",
            "nullable": true,
            "description": "The Notification Level of this User Conversation."
          },
          "unique_name": {
            "type": "string",
            "nullable": true,
            "description": "An application-defined string that uniquely identifies the Conversation resource."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "links": {
            "type": "object",
            "format": "uri-map",
            "nullable": true,
            "description": "Absolute URLs to access the participant and conversation of this user conversation."
          }
        }
      },
      "user_conversation_enum_notification_level": {
        "type": "string",
        "enum": [
          "default",
          "muted"
        ]
      },
      "user_conversation_enum_state": {
        "type": "string",
        "enum": [
          "inactive",
          "active",
          "closed"
        ]
      }
    },
    "securitySchemes": {
      "accountSid_authToken": {
        "type": "http",
        "scheme": "basic"
      }
    }
  },
  "info": {
    "title": "Twilio - Conversations",
    "description": "This is the public Twilio REST API.",
    "termsOfService": "https://www.twilio.com/legal/tos",
    "contact": {
      "name": "Twilio Support",
      "url": "https://support.twilio.com",
      "email": "support@twilio.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.32.0"
  },
  "openapi": "3.0.1",
  "paths": {
    "/v1/Configuration": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "The Configuration resource manages a set of account-level settings applicable to the Conversations API.",
      "x-twilio": {
        "defaultOutputProperties": [
          "account_sid",
          "default_chat_service_sid",
          "default_messaging_service_sid"
        ],
        "pathType": "instance"
      },
      "get": {
        "description": "Fetch the global configuration of conversations on your account",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.configuration"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchConfiguration",
        "x-maturity": [
          "GA"
        ]
      },
      "post": {
        "description": "Update the global configuration of conversations on your account",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.configuration"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateConfiguration",
        "x-maturity": [
          "GA"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateConfigurationRequest",
                "properties": {
                  "DefaultChatServiceSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^IS[0-9a-fA-F]{32}$",
                    "description": "The SID of the default [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) to use when creating a conversation."
                  },
                  "DefaultMessagingServiceSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^MG[0-9a-fA-F]{32}$",
                    "description": "The SID of the default [Messaging Service](https://www.twilio.com/docs/sms/services/api) to use when creating a conversation."
                  },
                  "DefaultInactiveTimer": {
                    "type": "string",
                    "description": "Default ISO8601 duration when conversation will be switched to `inactive` state. Minimum value for this timer is 1 minute."
                  },
                  "DefaultClosedTimer": {
                    "type": "string",
                    "description": "Default ISO8601 duration when conversation will be switched to `closed` state. Minimum value for this timer is 10 minutes."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/Configuration/Addresses": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "Address Configuration resource manages the configurations related to a unique address within Conversations",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "type",
          "address",
          "friendly_name"
        ],
        "pathType": "list",
        "className": "address_configuration"
      },
      "get": {
        "description": "Retrieve a list of address configurations for an account",
        "parameters": [
          {
            "name": "Type",
            "in": "query",
            "description": "Filter the address configurations by its type. This value can be one of: `whatsapp`, `sms`.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListConfigurationAddressResponse",
                  "properties": {
                    "address_configurations": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/conversations.v1.configuration_address"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListConfigurationAddress",
        "x-maturity": [
          "GA"
        ]
      },
      "post": {
        "description": "Create a new address configuration",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.configuration_address"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateConfigurationAddress",
        "x-maturity": [
          "GA"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateConfigurationAddressRequest",
                "properties": {
                  "Type": {
                    "type": "string",
                    "$ref": "#/components/schemas/configuration_address_enum_type",
                    "description": "Type of Address. Value can be `whatsapp` or `sms`."
                  },
                  "Address": {
                    "type": "string",
                    "description": "The unique address to be configured. The address can be a whatsapp address or phone number"
                  },
                  "FriendlyName": {
                    "type": "string",
                    "description": "The human-readable name of this configuration, limited to 256 characters. Optional."
                  },
                  "AutoCreation.Enabled": {
                    "type": "boolean",
                    "description": "Enable/Disable auto-creating conversations for messages to this address"
                  },
                  "AutoCreation.Type": {
                    "type": "string",
                    "$ref": "#/components/schemas/configuration_address_enum_auto_creation_type",
                    "description": "Type of Auto Creation. Value can be one of `webhook`, `studio` or `default`."
                  },
                  "AutoCreation.ConversationServiceSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^IS[0-9a-fA-F]{32}$",
                    "description": "Conversation Service for the auto-created conversation. If not set, the conversation is created in the default service."
                  },
                  "AutoCreation.WebhookUrl": {
                    "type": "string",
                    "description": "For type `webhook`, the url for the webhook request."
                  },
                  "AutoCreation.WebhookMethod": {
                    "type": "string",
                    "$ref": "#/components/schemas/configuration_address_enum_method",
                    "description": "For type `webhook`, the HTTP method to be used when sending a webhook request."
                  },
                  "AutoCreation.WebhookFilters": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The list of events, firing webhook event for this Conversation. Values can be any of the following: `onMessageAdded`, `onMessageUpdated`, `onMessageRemoved`, `onConversationUpdated`, `onConversationStateUpdated`, `onConversationRemoved`, `onParticipantAdded`, `onParticipantUpdated`, `onParticipantRemoved`, `onDeliveryUpdated`"
                  },
                  "AutoCreation.StudioFlowSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^FW[0-9a-fA-F]{32}$",
                    "description": "For type `studio`, the studio flow SID where the webhook should be sent to."
                  },
                  "AutoCreation.StudioRetryCount": {
                    "type": "integer",
                    "description": "For type `studio`, number of times to retry the webhook request"
                  }
                },
                "required": [
                  "Type",
                  "Address"
                ]
              }
            }
          }
        }
      }
    },
    "/v1/Configuration/Addresses/{Sid}": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "Address Configuration resource manages the configurations related to a unique address within Conversations",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "type",
          "address",
          "friendly_name"
        ],
        "pathType": "instance",
        "className": "address_configuration"
      },
      "get": {
        "description": "Fetch an address configuration ",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the Address Configuration resource. This value can be either the `sid` or the `address` of the configuration",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.configuration_address"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchConfigurationAddress",
        "x-maturity": [
          "GA"
        ]
      },
      "post": {
        "description": "Update an existing address configuration",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the Address Configuration resource. This value can be either the `sid` or the `address` of the configuration",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.configuration_address"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateConfigurationAddress",
        "x-maturity": [
          "GA"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateConfigurationAddressRequest",
                "properties": {
                  "FriendlyName": {
                    "type": "string",
                    "description": "The human-readable name of this configuration, limited to 256 characters. Optional."
                  },
                  "AutoCreation.Enabled": {
                    "type": "boolean",
                    "description": "Enable/Disable auto-creating conversations for messages to this address"
                  },
                  "AutoCreation.Type": {
                    "type": "string",
                    "$ref": "#/components/schemas/configuration_address_enum_auto_creation_type",
                    "description": "Type of Auto Creation. Value can be one of `webhook`, `studio` or `default`."
                  },
                  "AutoCreation.ConversationServiceSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^IS[0-9a-fA-F]{32}$",
                    "description": "Conversation Service for the auto-created conversation. If not set, the conversation is created in the default service."
                  },
                  "AutoCreation.WebhookUrl": {
                    "type": "string",
                    "description": "For type `webhook`, the url for the webhook request."
                  },
                  "AutoCreation.WebhookMethod": {
                    "type": "string",
                    "$ref": "#/components/schemas/configuration_address_enum_method",
                    "description": "For type `webhook`, the HTTP method to be used when sending a webhook request."
                  },
                  "AutoCreation.WebhookFilters": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The list of events, firing webhook event for this Conversation. Values can be any of the following: `onMessageAdded`, `onMessageUpdated`, `onMessageRemoved`, `onConversationUpdated`, `onConversationStateUpdated`, `onConversationRemoved`, `onParticipantAdded`, `onParticipantUpdated`, `onParticipantRemoved`, `onDeliveryUpdated`"
                  },
                  "AutoCreation.StudioFlowSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^FW[0-9a-fA-F]{32}$",
                    "description": "For type `studio`, the studio flow SID where the webhook should be sent to."
                  },
                  "AutoCreation.StudioRetryCount": {
                    "type": "integer",
                    "description": "For type `studio`, number of times to retry the webhook request"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Remove an existing address configuration",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the Address Configuration resource. This value can be either the `sid` or the `address` of the configuration",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteConfigurationAddress",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Configuration/Webhooks": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A Webhook resource manages a service-level set of callback URLs and their configuration for receiving all conversation events.",
      "x-twilio": {
        "defaultOutputProperties": [
          "target",
          "method",
          "pre_webhook_url",
          "post_webhook_url"
        ],
        "pathType": "instance",
        "parent": "/Configuration"
      },
      "get": {
        "description": "",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.configuration.configuration_webhook"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchConfigurationWebhook",
        "x-maturity": [
          "GA"
        ]
      },
      "post": {
        "description": "",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.configuration.configuration_webhook"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateConfigurationWebhook",
        "x-maturity": [
          "GA"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateConfigurationWebhookRequest",
                "properties": {
                  "Method": {
                    "type": "string",
                    "description": "The HTTP method to be used when sending a webhook request."
                  },
                  "Filters": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The list of webhook event triggers that are enabled for this Service: `onMessageAdded`, `onMessageUpdated`, `onMessageRemoved`, `onConversationUpdated`, `onConversationRemoved`, `onParticipantAdded`, `onParticipantUpdated`, `onParticipantRemoved`"
                  },
                  "PreWebhookUrl": {
                    "type": "string",
                    "description": "The absolute url the pre-event webhook request should be sent to."
                  },
                  "PostWebhookUrl": {
                    "type": "string",
                    "description": "The absolute url the post-event webhook request should be sent to."
                  },
                  "Target": {
                    "type": "string",
                    "$ref": "#/components/schemas/configuration_webhook_enum_target",
                    "description": "The routing target of the webhook."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/Conversations": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A Conversation resource represents an omnichannel group conversation with an ordered list of messages and a participant roster.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "chat_service_sid",
          "friendly_name",
          "date_created"
        ],
        "pathType": "list"
      },
      "post": {
        "description": "Create a new conversation in your account's default service",
        "parameters": [
          {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "description": "The X-Twilio-Webhook-Enabled HTTP request header",
            "schema": {
              "type": "string",
              "$ref": "#/components/schemas/conversation_enum_webhook_enabled_type"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateConversation",
        "x-maturity": [
          "GA"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateConversationRequest",
                "properties": {
                  "FriendlyName": {
                    "type": "string",
                    "description": "The human-readable name of this conversation, limited to 256 characters. Optional."
                  },
                  "UniqueName": {
                    "type": "string",
                    "description": "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL."
                  },
                  "DateCreated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date that this resource was created."
                  },
                  "DateUpdated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date that this resource was last updated."
                  },
                  "MessagingServiceSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^MG[0-9a-fA-F]{32}$",
                    "description": "The unique ID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) this conversation belongs to."
                  },
                  "Attributes": {
                    "type": "string",
                    "description": "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned."
                  },
                  "State": {
                    "type": "string",
                    "$ref": "#/components/schemas/conversation_enum_state",
                    "description": "Current state of this conversation. Can be either `active`, `inactive` or `closed` and defaults to `active`"
                  },
                  "Timers.Inactive": {
                    "type": "string",
                    "description": "ISO8601 duration when conversation will be switched to `inactive` state. Minimum value for this timer is 1 minute."
                  },
                  "Timers.Closed": {
                    "type": "string",
                    "description": "ISO8601 duration when conversation will be switched to `closed` state. Minimum value for this timer is 10 minutes."
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieve a list of conversations in your account's default service",
        "parameters": [
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListConversationResponse",
                  "properties": {
                    "conversations": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/conversations.v1.conversation"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListConversation",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Conversations/{Sid}": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A Conversation resource represents an omnichannel group conversation with an ordered list of messages and a participant roster.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "chat_service_sid",
          "friendly_name",
          "date_created"
        ],
        "pathType": "instance"
      },
      "post": {
        "description": "Update an existing conversation in your account's default service",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource. Can also be the `unique_name` of the Conversation.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "description": "The X-Twilio-Webhook-Enabled HTTP request header",
            "schema": {
              "type": "string",
              "$ref": "#/components/schemas/conversation_enum_webhook_enabled_type"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateConversation",
        "x-maturity": [
          "GA"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateConversationRequest",
                "properties": {
                  "FriendlyName": {
                    "type": "string",
                    "description": "The human-readable name of this conversation, limited to 256 characters. Optional."
                  },
                  "DateCreated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date that this resource was created."
                  },
                  "DateUpdated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date that this resource was last updated."
                  },
                  "Attributes": {
                    "type": "string",
                    "description": "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned."
                  },
                  "MessagingServiceSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^MG[0-9a-fA-F]{32}$",
                    "description": "The unique ID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) this conversation belongs to."
                  },
                  "State": {
                    "type": "string",
                    "$ref": "#/components/schemas/conversation_enum_state",
                    "description": "Current state of this conversation. Can be either `active`, `inactive` or `closed` and defaults to `active`"
                  },
                  "Timers.Inactive": {
                    "type": "string",
                    "description": "ISO8601 duration when conversation will be switched to `inactive` state. Minimum value for this timer is 1 minute."
                  },
                  "Timers.Closed": {
                    "type": "string",
                    "description": "ISO8601 duration when conversation will be switched to `closed` state. Minimum value for this timer is 10 minutes."
                  },
                  "UniqueName": {
                    "type": "string",
                    "description": "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL."
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Remove a conversation from your account's default service",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource. Can also be the `unique_name` of the Conversation.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "description": "The X-Twilio-Webhook-Enabled HTTP request header",
            "schema": {
              "type": "string",
              "$ref": "#/components/schemas/conversation_enum_webhook_enabled_type"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteConversation",
        "x-maturity": [
          "GA"
        ]
      },
      "get": {
        "description": "Fetch a conversation from your account's default service",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource. Can also be the `unique_name` of the Conversation.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchConversation",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Conversations/{ConversationSid}/Messages": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A Message resource represents a message in a conversation.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "index",
          "author",
          "date_created"
        ],
        "pathType": "list",
        "parent": "/Conversations"
      },
      "post": {
        "description": "Add a new message to the conversation",
        "parameters": [
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "description": "The X-Twilio-Webhook-Enabled HTTP request header",
            "schema": {
              "type": "string",
              "$ref": "#/components/schemas/conversation_message_enum_webhook_enabled_type"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation.conversation_message"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateConversationMessage",
        "x-maturity": [
          "GA"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateConversationMessageRequest",
                "properties": {
                  "Author": {
                    "type": "string",
                    "description": "The channel specific identifier of the message's author. Defaults to `system`."
                  },
                  "Body": {
                    "type": "string",
                    "description": "The content of the message, can be up to 1,600 characters long."
                  },
                  "DateCreated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date that this resource was created."
                  },
                  "DateUpdated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date that this resource was last updated. `null` if the message has not been edited."
                  },
                  "Attributes": {
                    "type": "string",
                    "description": "A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned."
                  },
                  "MediaSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^ME[0-9a-fA-F]{32}$",
                    "description": "The Media SID to be attached to the new Message."
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieve a list of all messages in the conversation",
        "parameters": [
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for messages.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Order",
            "in": "query",
            "description": "The sort order of the returned messages. Can be: `asc` (ascending) or `desc` (descending), with `asc` as the default.",
            "schema": {
              "type": "string",
              "$ref": "#/components/schemas/conversation_message_enum_order_type"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListConversationMessageResponse",
                  "properties": {
                    "messages": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/conversations.v1.conversation.conversation_message"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListConversationMessage",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Conversations/{ConversationSid}/Messages/{Sid}": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A Message resource represents a message in a conversation.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "index",
          "author",
          "date_created"
        ],
        "pathType": "instance",
        "parent": "/Conversations"
      },
      "post": {
        "description": "Update an existing message in the conversation",
        "parameters": [
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "description": "The X-Twilio-Webhook-Enabled HTTP request header",
            "schema": {
              "type": "string",
              "$ref": "#/components/schemas/conversation_message_enum_webhook_enabled_type"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation.conversation_message"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateConversationMessage",
        "x-maturity": [
          "GA"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateConversationMessageRequest",
                "properties": {
                  "Author": {
                    "type": "string",
                    "description": "The channel specific identifier of the message's author. Defaults to `system`."
                  },
                  "Body": {
                    "type": "string",
                    "description": "The content of the message, can be up to 1,600 characters long."
                  },
                  "DateCreated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date that this resource was created."
                  },
                  "DateUpdated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date that this resource was last updated. `null` if the message has not been edited."
                  },
                  "Attributes": {
                    "type": "string",
                    "description": "A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned."
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Remove a message from the conversation",
        "parameters": [
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "description": "The X-Twilio-Webhook-Enabled HTTP request header",
            "schema": {
              "type": "string",
              "$ref": "#/components/schemas/conversation_message_enum_webhook_enabled_type"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteConversationMessage",
        "x-maturity": [
          "GA"
        ]
      },
      "get": {
        "description": "Fetch a message from the conversation",
        "parameters": [
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation.conversation_message"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchConversationMessage",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Conversations/{ConversationSid}/Messages/{MessageSid}/Receipts/{Sid}": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A Message Receipt resource represents a delivery/read receipt of a message in a conversation.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "message_sid",
          "status",
          "date_created"
        ],
        "pathType": "instance",
        "parent": "/Conversations/{ConversationSid}/Messages",
        "className": "delivery_receipt"
      },
      "get": {
        "description": "Fetch the delivery and read receipts of the conversation message",
        "parameters": [
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "MessageSid",
            "in": "path",
            "description": "The SID of the message within a [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) the delivery receipt belongs to.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DY[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation.conversation_message.conversation_message_receipt"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchConversationMessageReceipt",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Conversations/{ConversationSid}/Messages/{MessageSid}/Receipts": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A Message Receipt resource represents a delivery/read receipt of a message in a conversation.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "message_sid",
          "status",
          "date_created"
        ],
        "pathType": "list",
        "parent": "/Conversations/{ConversationSid}/Messages",
        "className": "delivery_receipt"
      },
      "get": {
        "description": "Retrieve a list of all delivery and read receipts of the conversation message",
        "parameters": [
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "MessageSid",
            "in": "path",
            "description": "The SID of the message within a [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) the delivery receipt belongs to.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListConversationMessageReceiptResponse",
                  "properties": {
                    "delivery_receipts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/conversations.v1.conversation.conversation_message.conversation_message_receipt"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListConversationMessageReceipt",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Conversations/{ConversationSid}/Participants": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A Participant resource represents a member of the conversation.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "messaging_binding"
        ],
        "pathType": "list",
        "parent": "/Conversations"
      },
      "post": {
        "description": "Add a new participant to the conversation",
        "parameters": [
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "description": "The X-Twilio-Webhook-Enabled HTTP request header",
            "schema": {
              "type": "string",
              "$ref": "#/components/schemas/conversation_participant_enum_webhook_enabled_type"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation.conversation_participant"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateConversationParticipant",
        "x-maturity": [
          "GA"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateConversationParticipantRequest",
                "properties": {
                  "Identity": {
                    "type": "string",
                    "description": "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversations SDK to communicate. Limited to 256 characters."
                  },
                  "MessagingBinding.Address": {
                    "type": "string",
                    "description": "The address of the participant's device, e.g. a phone or WhatsApp number. Together with the Proxy address, this determines a participant uniquely. This field (with proxy_address) is only null when the participant is interacting from an SDK endpoint (see the 'identity' field)."
                  },
                  "MessagingBinding.ProxyAddress": {
                    "type": "string",
                    "description": "The address of the Twilio phone number (or WhatsApp number) that the participant is in contact with. This field, together with participant address, is only null when the participant is interacting from an SDK endpoint (see the 'identity' field)."
                  },
                  "DateCreated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date that this resource was created."
                  },
                  "DateUpdated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date that this resource was last updated."
                  },
                  "Attributes": {
                    "type": "string",
                    "description": "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned."
                  },
                  "MessagingBinding.ProjectedAddress": {
                    "type": "string",
                    "description": "The address of the Twilio phone number that is used in Group MMS. Communication mask for the Conversation participant with Identity."
                  },
                  "RoleSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^RL[0-9a-fA-F]{32}$",
                    "description": "The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant."
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieve a list of all participants of the conversation",
        "parameters": [
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for participants.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListConversationParticipantResponse",
                  "properties": {
                    "participants": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/conversations.v1.conversation.conversation_participant"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListConversationParticipant",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Conversations/{ConversationSid}/Participants/{Sid}": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A Participant resource represents a member of the conversation.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "messaging_binding"
        ],
        "pathType": "instance",
        "parent": "/Conversations"
      },
      "post": {
        "description": "Update an existing participant in the conversation",
        "parameters": [
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "description": "The X-Twilio-Webhook-Enabled HTTP request header",
            "schema": {
              "type": "string",
              "$ref": "#/components/schemas/conversation_participant_enum_webhook_enabled_type"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation.conversation_participant"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateConversationParticipant",
        "x-maturity": [
          "GA"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateConversationParticipantRequest",
                "properties": {
                  "DateCreated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date that this resource was created."
                  },
                  "DateUpdated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date that this resource was last updated."
                  },
                  "Attributes": {
                    "type": "string",
                    "description": "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned."
                  },
                  "RoleSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^RL[0-9a-fA-F]{32}$",
                    "description": "The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant."
                  },
                  "MessagingBinding.ProxyAddress": {
                    "type": "string",
                    "description": "The address of the Twilio phone number that the participant is in contact with. 'null' value will remove it."
                  },
                  "MessagingBinding.ProjectedAddress": {
                    "type": "string",
                    "description": "The address of the Twilio phone number that is used in Group MMS. 'null' value will remove it."
                  },
                  "Identity": {
                    "type": "string",
                    "description": "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversations SDK to communicate. Limited to 256 characters."
                  },
                  "LastReadMessageIndex": {
                    "type": "integer",
                    "nullable": true,
                    "description": "Index of last \u201cread\u201d message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant."
                  },
                  "LastReadTimestamp": {
                    "type": "string",
                    "description": "Timestamp of last \u201cread\u201d message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant."
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Remove a participant from the conversation",
        "parameters": [
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "description": "The X-Twilio-Webhook-Enabled HTTP request header",
            "schema": {
              "type": "string",
              "$ref": "#/components/schemas/conversation_participant_enum_webhook_enabled_type"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteConversationParticipant",
        "x-maturity": [
          "GA"
        ]
      },
      "get": {
        "description": "Fetch a participant of the conversation",
        "parameters": [
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation.conversation_participant"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchConversationParticipant",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Conversations/{ConversationSid}/Webhooks": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A Scoped Webhook resource manages a set of callback URLs and their configuration for receiving events specific to one conversation.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "target"
        ],
        "pathType": "list",
        "parent": "/Conversations"
      },
      "get": {
        "description": "Retrieve a list of all webhooks scoped to the conversation",
        "parameters": [
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListConversationScopedWebhookResponse",
                  "properties": {
                    "webhooks": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/conversations.v1.conversation.conversation_scoped_webhook"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListConversationScopedWebhook",
        "x-maturity": [
          "GA"
        ]
      },
      "post": {
        "description": "Create a new webhook scoped to the conversation",
        "parameters": [
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation.conversation_scoped_webhook"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateConversationScopedWebhook",
        "x-maturity": [
          "GA"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateConversationScopedWebhookRequest",
                "properties": {
                  "Target": {
                    "type": "string",
                    "$ref": "#/components/schemas/conversation_scoped_webhook_enum_target",
                    "description": "The target of this webhook: `webhook`, `studio`, `trigger`"
                  },
                  "Configuration.Url": {
                    "type": "string",
                    "description": "The absolute url the webhook request should be sent to."
                  },
                  "Configuration.Method": {
                    "type": "string",
                    "$ref": "#/components/schemas/conversation_scoped_webhook_enum_method",
                    "description": "The HTTP method to be used when sending a webhook request."
                  },
                  "Configuration.Filters": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The list of events, firing webhook event for this Conversation."
                  },
                  "Configuration.Triggers": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The list of keywords, firing webhook event for this Conversation."
                  },
                  "Configuration.FlowSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^FW[0-9a-fA-F]{32}$",
                    "description": "The studio flow SID, where the webhook should be sent to."
                  },
                  "Configuration.ReplayAfter": {
                    "type": "integer",
                    "description": "The message index for which and it's successors the webhook will be replayed. Not set by default"
                  }
                },
                "required": [
                  "Target"
                ]
              }
            }
          }
        }
      }
    },
    "/v1/Conversations/{ConversationSid}/Webhooks/{Sid}": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A Scoped Webhook resource manages a set of callback URLs and their configuration for receiving events specific to one conversation.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "target"
        ],
        "pathType": "instance",
        "parent": "/Conversations"
      },
      "get": {
        "description": "Fetch the configuration of a conversation-scoped webhook",
        "parameters": [
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WH[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation.conversation_scoped_webhook"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchConversationScopedWebhook",
        "x-maturity": [
          "GA"
        ]
      },
      "post": {
        "description": "Update an existing conversation-scoped webhook",
        "parameters": [
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WH[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation.conversation_scoped_webhook"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateConversationScopedWebhook",
        "x-maturity": [
          "GA"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateConversationScopedWebhookRequest",
                "properties": {
                  "Configuration.Url": {
                    "type": "string",
                    "description": "The absolute url the webhook request should be sent to."
                  },
                  "Configuration.Method": {
                    "type": "string",
                    "$ref": "#/components/schemas/conversation_scoped_webhook_enum_method",
                    "description": "The HTTP method to be used when sending a webhook request."
                  },
                  "Configuration.Filters": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The list of events, firing webhook event for this Conversation."
                  },
                  "Configuration.Triggers": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The list of keywords, firing webhook event for this Conversation."
                  },
                  "Configuration.FlowSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^FW[0-9a-fA-F]{32}$",
                    "description": "The studio flow SID, where the webhook should be sent to."
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Remove an existing webhook scoped to the conversation",
        "parameters": [
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WH[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteConversationScopedWebhook",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Credentials": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A Credential resource represents a push notification credential.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "friendly_name",
          "type"
        ],
        "pathType": "list"
      },
      "post": {
        "description": "Add a new push notification credential to your account",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.credential"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateCredential",
        "x-maturity": [
          "GA"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateCredentialRequest",
                "properties": {
                  "Type": {
                    "type": "string",
                    "$ref": "#/components/schemas/credential_enum_push_type",
                    "description": "The type of push-notification service the credential is for. Can be: `fcm`, `gcm`, or `apn`."
                  },
                  "FriendlyName": {
                    "type": "string",
                    "description": "A descriptive string that you create to describe the new resource. It can be up to 64 characters long."
                  },
                  "Certificate": {
                    "type": "string",
                    "description": "[APN only] The URL encoded representation of the certificate. For example, \n`-----BEGIN CERTIFICATE-----\nMIIFnTCCBIWgAwIBAgIIAjy9H849+E8wDQYJKoZIhvcNAQEF.....A==\n-----END CERTIFICATE-----`."
                  },
                  "PrivateKey": {
                    "type": "string",
                    "description": "[APN only] The URL encoded representation of the private key. For example,\n`-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAuyf/lNrH9ck8DmNyo3fG...\n-----END RSA PRIVATE KEY-----`."
                  },
                  "Sandbox": {
                    "type": "boolean",
                    "description": "[APN only] Whether to send the credential to sandbox APNs. Can be `true` to send to sandbox APNs or `false` to send to production."
                  },
                  "ApiKey": {
                    "type": "string",
                    "description": "[GCM only] The API key for the project that was obtained from the Google Developer console for your GCM Service application credential."
                  },
                  "Secret": {
                    "type": "string",
                    "description": "[FCM only] The **Server key** of your project from the Firebase console, found under Settings / Cloud messaging."
                  }
                },
                "required": [
                  "Type"
                ]
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieve a list of all push notification credentials on your account",
        "parameters": [
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListCredentialResponse",
                  "properties": {
                    "credentials": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/conversations.v1.credential"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListCredential",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Credentials/{Sid}": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A Credential resource represents a push notification credential.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "friendly_name",
          "type"
        ],
        "pathType": "instance"
      },
      "post": {
        "description": "Update an existing push notification credential on your account",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.credential"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateCredential",
        "x-maturity": [
          "GA"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateCredentialRequest",
                "properties": {
                  "Type": {
                    "type": "string",
                    "$ref": "#/components/schemas/credential_enum_push_type",
                    "description": "The type of push-notification service the credential is for. Can be: `fcm`, `gcm`, or `apn`."
                  },
                  "FriendlyName": {
                    "type": "string",
                    "description": "A descriptive string that you create to describe the new resource. It can be up to 64 characters long."
                  },
                  "Certificate": {
                    "type": "string",
                    "description": "[APN only] The URL encoded representation of the certificate. For example, \n`-----BEGIN CERTIFICATE-----\nMIIFnTCCBIWgAwIBAgIIAjy9H849+E8wDQYJKoZIhvcNAQEF.....A==\n-----END CERTIFICATE-----`."
                  },
                  "PrivateKey": {
                    "type": "string",
                    "description": "[APN only] The URL encoded representation of the private key. For example,\n`-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAuyf/lNrH9ck8DmNyo3fG...\n-----END RSA PRIVATE KEY-----`."
                  },
                  "Sandbox": {
                    "type": "boolean",
                    "description": "[APN only] Whether to send the credential to sandbox APNs. Can be `true` to send to sandbox APNs or `false` to send to production."
                  },
                  "ApiKey": {
                    "type": "string",
                    "description": "[GCM only] The API key for the project that was obtained from the Google Developer console for your GCM Service application credential."
                  },
                  "Secret": {
                    "type": "string",
                    "description": "[FCM only] The **Server key** of your project from the Firebase console, found under Settings / Cloud messaging."
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Remove a push notification credential from your account",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteCredential",
        "x-maturity": [
          "GA"
        ]
      },
      "get": {
        "description": "Fetch a push notification credential from your account",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.credential"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchCredential",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/ParticipantConversations": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "Participant Conversations resource represents a list of Conversations that this Participant belongs to belonging to a default conversation service.",
      "x-twilio": {
        "defaultOutputProperties": [
          "chat_service_sid",
          "participant_sid",
          "conversation_sid"
        ],
        "pathType": "list"
      },
      "get": {
        "description": "Retrieve a list of all Conversations that this Participant belongs to by identity or by address. Only one parameter should be specified.",
        "parameters": [
          {
            "name": "Identity",
            "in": "query",
            "description": "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversations SDK to communicate. Limited to 256 characters.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Address",
            "in": "query",
            "description": "A unique string identifier for the conversation participant who's not a Conversation User. This parameter could be found in messaging_binding.address field of Participant resource. It should be url-encoded.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListParticipantConversationResponse",
                  "properties": {
                    "conversations": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/conversations.v1.participant_conversation"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListParticipantConversation",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Roles": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A Role resource represents a set of permissions granted to a user within a service or a conversation.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "friendly_name",
          "type"
        ],
        "pathType": "list"
      },
      "post": {
        "description": "Create a new user role in your account's default service",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.role"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateRole",
        "x-maturity": [
          "GA"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateRoleRequest",
                "properties": {
                  "FriendlyName": {
                    "type": "string",
                    "description": "A descriptive string that you create to describe the new resource. It can be up to 64 characters long."
                  },
                  "Type": {
                    "type": "string",
                    "$ref": "#/components/schemas/role_enum_role_type",
                    "description": "The type of role. Can be: `conversation` for [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) roles or `service` for [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) roles."
                  },
                  "Permission": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "A permission that you grant to the new role. Only one permission can be granted per parameter. To assign more than one permission, repeat this parameter for each permission value. The values for this parameter depend on the role's `type`."
                  }
                },
                "required": [
                  "FriendlyName",
                  "Type",
                  "Permission"
                ]
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieve a list of all user roles in your account's default service",
        "parameters": [
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListRoleResponse",
                  "properties": {
                    "roles": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/conversations.v1.role"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListRole",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Roles/{Sid}": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A Role resource represents a set of permissions granted to a user within a service or a conversation.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "friendly_name",
          "type"
        ],
        "pathType": "instance"
      },
      "post": {
        "description": "Update an existing user role in your account's default service",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the Role resource to update.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.role"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateRole",
        "x-maturity": [
          "GA"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateRoleRequest",
                "properties": {
                  "Permission": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "A permission that you grant to the role. Only one permission can be granted per parameter. To assign more than one permission, repeat this parameter for each permission value. Note that the update action replaces all previously assigned permissions with those defined in the update action. To remove a permission, do not include it in the subsequent update action. The values for this parameter depend on the role's `type`."
                  }
                },
                "required": [
                  "Permission"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "description": "Remove a user role from your account's default service",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the Role resource to delete.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteRole",
        "x-maturity": [
          "GA"
        ]
      },
      "get": {
        "description": "Fetch a user role from your account's default service",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the Role resource to fetch.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.role"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchRole",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Services": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A Service resource is a top-level conversation resource container that serves as a data silo.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "friendly_name"
        ],
        "pathType": "list"
      },
      "post": {
        "description": "Create a new conversation service on your account",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.service"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateService",
        "x-maturity": [
          "GA"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateServiceRequest",
                "properties": {
                  "FriendlyName": {
                    "type": "string",
                    "description": "The human-readable name of this service, limited to 256 characters. Optional."
                  }
                },
                "required": [
                  "FriendlyName"
                ]
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieve a list of all conversation services on your account",
        "parameters": [
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListServiceResponse",
                  "properties": {
                    "services": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/conversations.v1.service"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListService",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Services/{Sid}": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A Service resource is a top-level conversation resource container that serves as a data silo.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "friendly_name"
        ],
        "pathType": "instance"
      },
      "delete": {
        "description": "Remove a conversation service with all its nested resources from your account",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteService",
        "x-maturity": [
          "GA"
        ]
      },
      "get": {
        "description": "Fetch a conversation service from your account",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.service"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchService",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Services/{ChatServiceSid}/Bindings/{Sid}": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A Binding resource represents a push notification binding and its configuration, for delivering conversation events to mobile or web endpoints.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "endpoint",
          "identity"
        ],
        "pathType": "instance",
        "parent": "/Services"
      },
      "delete": {
        "description": "Remove a push notification binding from the conversation service",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) to delete the Binding resource from.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the Binding resource to delete.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^BS[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteServiceBinding",
        "x-maturity": [
          "GA"
        ]
      },
      "get": {
        "description": "Fetch a push notification binding from the conversation service",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Binding resource is associated with.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^BS[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.service.service_binding"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchServiceBinding",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Services/{ChatServiceSid}/Bindings": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A Binding resource represents a push notification binding and its configuration, for delivering conversation events to mobile or web endpoints.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "endpoint",
          "identity"
        ],
        "pathType": "list",
        "parent": "/Services"
      },
      "get": {
        "description": "Retrieve a list of all push notification bindings in the conversation service",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Binding resource is associated with.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "BindingType",
            "in": "query",
            "description": "The push technology used by the Binding resources to read.  Can be: `apn`, `gcm`, or `fcm`.  See [push notification configuration](https://www.twilio.com/docs/chat/push-notification-configuration) for more info.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "$ref": "#/components/schemas/service_binding_enum_binding_type"
              }
            }
          },
          {
            "name": "Identity",
            "in": "query",
            "description": "The identity of a [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource) this binding belongs to. See [access tokens](https://www.twilio.com/docs/conversations/create-tokens) for more details.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListServiceBindingResponse",
                  "properties": {
                    "bindings": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/conversations.v1.service.service_binding"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListServiceBinding",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Services/{ChatServiceSid}/Configuration": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A Service Configuration resource manages service-level settings applicable to the Conversation API.",
      "x-twilio": {
        "defaultOutputProperties": [
          "chat_service_sid"
        ],
        "pathType": "instance",
        "parent": "/Services"
      },
      "get": {
        "description": "Fetch the configuration of a conversation service",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the Service configuration resource to fetch.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.service.service_configuration"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchServiceConfiguration",
        "x-maturity": [
          "GA"
        ]
      },
      "post": {
        "description": "Update configuration settings of a conversation service",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the Service configuration resource to update.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.service.service_configuration"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateServiceConfiguration",
        "x-maturity": [
          "GA"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateServiceConfigurationRequest",
                "properties": {
                  "DefaultConversationCreatorRoleSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^RL[0-9a-fA-F]{32}$",
                    "description": "The conversation-level role assigned to a conversation creator when they join a new conversation. See the [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles."
                  },
                  "DefaultConversationRoleSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^RL[0-9a-fA-F]{32}$",
                    "description": "The conversation-level role assigned to users when they are added to a conversation. See the [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles."
                  },
                  "DefaultChatServiceRoleSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^RL[0-9a-fA-F]{32}$",
                    "description": "The service-level role assigned to users when they are added to the service. See the [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles."
                  },
                  "ReachabilityEnabled": {
                    "type": "boolean",
                    "description": "Whether the [Reachability Indicator](https://www.twilio.com/docs/chat/reachability-indicator) is enabled for this Conversations Service. The default is `false`."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/Services/{ChatServiceSid}/Conversations": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A Service Conversation resource represents an omnichannel group conversation with an ordered list of messages and a participant roster.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "chat_service_sid",
          "friendly_name",
          "date_created"
        ],
        "pathType": "list",
        "parent": "/Services"
      },
      "post": {
        "description": "Create a new conversation in your service",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Conversation resource is associated with.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "description": "The X-Twilio-Webhook-Enabled HTTP request header",
            "schema": {
              "type": "string",
              "$ref": "#/components/schemas/service_conversation_enum_webhook_enabled_type"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.service.service_conversation"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateServiceConversation",
        "x-maturity": [
          "GA"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateServiceConversationRequest",
                "properties": {
                  "FriendlyName": {
                    "type": "string",
                    "description": "The human-readable name of this conversation, limited to 256 characters. Optional."
                  },
                  "UniqueName": {
                    "type": "string",
                    "description": "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL."
                  },
                  "Attributes": {
                    "type": "string",
                    "description": "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned."
                  },
                  "MessagingServiceSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^MG[0-9a-fA-F]{32}$",
                    "description": "The unique ID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) this conversation belongs to."
                  },
                  "DateCreated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date that this resource was created."
                  },
                  "DateUpdated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date that this resource was last updated."
                  },
                  "State": {
                    "type": "string",
                    "$ref": "#/components/schemas/service_conversation_enum_state",
                    "description": "Current state of this conversation. Can be either `active`, `inactive` or `closed` and defaults to `active`"
                  },
                  "Timers.Inactive": {
                    "type": "string",
                    "description": "ISO8601 duration when conversation will be switched to `inactive` state. Minimum value for this timer is 1 minute."
                  },
                  "Timers.Closed": {
                    "type": "string",
                    "description": "ISO8601 duration when conversation will be switched to `closed` state. Minimum value for this timer is 10 minutes."
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieve a list of conversations in your service",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Conversation resource is associated with.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListServiceConversationResponse",
                  "properties": {
                    "conversations": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/conversations.v1.service.service_conversation"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListServiceConversation",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Services/{ChatServiceSid}/Conversations/{Sid}": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A Service Conversation resource represents an omnichannel group conversation with an ordered list of messages and a participant roster.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "chat_service_sid",
          "friendly_name",
          "date_created"
        ],
        "pathType": "instance",
        "parent": "/Services"
      },
      "post": {
        "description": "Update an existing conversation in your service",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Conversation resource is associated with.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource. Can also be the `unique_name` of the Conversation.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "description": "The X-Twilio-Webhook-Enabled HTTP request header",
            "schema": {
              "type": "string",
              "$ref": "#/components/schemas/service_conversation_enum_webhook_enabled_type"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.service.service_conversation"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateServiceConversation",
        "x-maturity": [
          "GA"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateServiceConversationRequest",
                "properties": {
                  "FriendlyName": {
                    "type": "string",
                    "description": "The human-readable name of this conversation, limited to 256 characters. Optional."
                  },
                  "DateCreated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date that this resource was created."
                  },
                  "DateUpdated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date that this resource was last updated."
                  },
                  "Attributes": {
                    "type": "string",
                    "description": "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned."
                  },
                  "MessagingServiceSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^MG[0-9a-fA-F]{32}$",
                    "description": "The unique ID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) this conversation belongs to."
                  },
                  "State": {
                    "type": "string",
                    "$ref": "#/components/schemas/service_conversation_enum_state",
                    "description": "Current state of this conversation. Can be either `active`, `inactive` or `closed` and defaults to `active`"
                  },
                  "Timers.Inactive": {
                    "type": "string",
                    "description": "ISO8601 duration when conversation will be switched to `inactive` state. Minimum value for this timer is 1 minute."
                  },
                  "Timers.Closed": {
                    "type": "string",
                    "description": "ISO8601 duration when conversation will be switched to `closed` state. Minimum value for this timer is 10 minutes."
                  },
                  "UniqueName": {
                    "type": "string",
                    "description": "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL."
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Remove a conversation from your service",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Conversation resource is associated with.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource. Can also be the `unique_name` of the Conversation.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "description": "The X-Twilio-Webhook-Enabled HTTP request header",
            "schema": {
              "type": "string",
              "$ref": "#/components/schemas/service_conversation_enum_webhook_enabled_type"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteServiceConversation",
        "x-maturity": [
          "GA"
        ]
      },
      "get": {
        "description": "Fetch a conversation from your service",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Conversation resource is associated with.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource. Can also be the `unique_name` of the Conversation.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.service.service_conversation"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchServiceConversation",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Messages": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A Service Message resource represents a message in a conversation within a specific service.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "index",
          "author",
          "date_created"
        ],
        "pathType": "list",
        "parent": "/Services/{ChatServiceSid}/Conversations"
      },
      "post": {
        "description": "Add a new message to the conversation in a specific service",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "description": "The X-Twilio-Webhook-Enabled HTTP request header",
            "schema": {
              "type": "string",
              "$ref": "#/components/schemas/service_conversation_message_enum_webhook_enabled_type"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.service.service_conversation.service_conversation_message"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateServiceConversationMessage",
        "x-maturity": [
          "GA"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateServiceConversationMessageRequest",
                "properties": {
                  "Author": {
                    "type": "string",
                    "description": "The channel specific identifier of the message's author. Defaults to `system`."
                  },
                  "Body": {
                    "type": "string",
                    "description": "The content of the message, can be up to 1,600 characters long."
                  },
                  "DateCreated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date that this resource was created."
                  },
                  "DateUpdated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date that this resource was last updated. `null` if the message has not been edited."
                  },
                  "Attributes": {
                    "type": "string",
                    "description": "A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned."
                  },
                  "MediaSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^ME[0-9a-fA-F]{32}$",
                    "description": "The Media SID to be attached to the new Message."
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieve a list of all messages in the conversation",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for messages.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Order",
            "in": "query",
            "description": "The sort order of the returned messages. Can be: `asc` (ascending) or `desc` (descending), with `asc` as the default.",
            "schema": {
              "type": "string",
              "$ref": "#/components/schemas/service_conversation_message_enum_order_type"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListServiceConversationMessageResponse",
                  "properties": {
                    "messages": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/conversations.v1.service.service_conversation.service_conversation_message"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListServiceConversationMessage",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Messages/{Sid}": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A Service Message resource represents a message in a conversation within a specific service.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "index",
          "author",
          "date_created"
        ],
        "pathType": "instance",
        "parent": "/Services/{ChatServiceSid}/Conversations"
      },
      "post": {
        "description": "Update an existing message in the conversation",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "description": "The X-Twilio-Webhook-Enabled HTTP request header",
            "schema": {
              "type": "string",
              "$ref": "#/components/schemas/service_conversation_message_enum_webhook_enabled_type"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.service.service_conversation.service_conversation_message"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateServiceConversationMessage",
        "x-maturity": [
          "GA"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateServiceConversationMessageRequest",
                "properties": {
                  "Author": {
                    "type": "string",
                    "description": "The channel specific identifier of the message's author. Defaults to `system`."
                  },
                  "Body": {
                    "type": "string",
                    "description": "The content of the message, can be up to 1,600 characters long."
                  },
                  "DateCreated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date that this resource was created."
                  },
                  "DateUpdated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date that this resource was last updated. `null` if the message has not been edited."
                  },
                  "Attributes": {
                    "type": "string",
                    "description": "A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned."
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Remove a message from the conversation",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "description": "The X-Twilio-Webhook-Enabled HTTP request header",
            "schema": {
              "type": "string",
              "$ref": "#/components/schemas/service_conversation_message_enum_webhook_enabled_type"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteServiceConversationMessage",
        "x-maturity": [
          "GA"
        ]
      },
      "get": {
        "description": "Fetch a message from the conversation",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.service.service_conversation.service_conversation_message"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchServiceConversationMessage",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Messages/{MessageSid}/Receipts/{Sid}": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A Service Message Receipt resource represents a delivery/read receipt of a message in a conversation.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "message_sid",
          "status",
          "date_created"
        ],
        "pathType": "instance",
        "parent": "/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Messages",
        "className": "delivery_receipt"
      },
      "get": {
        "description": "Fetch the delivery and read receipts of the conversation message",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Message resource is associated with.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "MessageSid",
            "in": "path",
            "description": "The SID of the message within a [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) the delivery receipt belongs to.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^DY[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.service.service_conversation.service_conversation_message.service_conversation_message_receipt"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchServiceConversationMessageReceipt",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Messages/{MessageSid}/Receipts": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A Service Message Receipt resource represents a delivery/read receipt of a message in a conversation.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "message_sid",
          "status",
          "date_created"
        ],
        "pathType": "list",
        "parent": "/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Messages",
        "className": "delivery_receipt"
      },
      "get": {
        "description": "Retrieve a list of all delivery and read receipts of the conversation message",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Message resource is associated with.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "MessageSid",
            "in": "path",
            "description": "The SID of the message within a [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) the delivery receipt belongs to.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListServiceConversationMessageReceiptResponse",
                  "properties": {
                    "delivery_receipts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/conversations.v1.service.service_conversation.service_conversation_message.service_conversation_message_receipt"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListServiceConversationMessageReceipt",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Participants": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A Service Participant resource represents a member of the conversation within a specific service.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "messaging_binding"
        ],
        "pathType": "list",
        "parent": "/Services/{ChatServiceSid}/Conversations"
      },
      "post": {
        "description": "Add a new participant to the conversation in a specific service",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "description": "The X-Twilio-Webhook-Enabled HTTP request header",
            "schema": {
              "type": "string",
              "$ref": "#/components/schemas/service_conversation_participant_enum_webhook_enabled_type"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.service.service_conversation.service_conversation_participant"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateServiceConversationParticipant",
        "x-maturity": [
          "GA"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateServiceConversationParticipantRequest",
                "properties": {
                  "Identity": {
                    "type": "string",
                    "description": "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversation SDK to communicate. Limited to 256 characters."
                  },
                  "MessagingBinding.Address": {
                    "type": "string",
                    "description": "The address of the participant's device, e.g. a phone or WhatsApp number. Together with the Proxy address, this determines a participant uniquely. This field (with proxy_address) is only null when the participant is interacting from an SDK endpoint (see the 'identity' field)."
                  },
                  "MessagingBinding.ProxyAddress": {
                    "type": "string",
                    "description": "The address of the Twilio phone number (or WhatsApp number) that the participant is in contact with. This field, together with participant address, is only null when the participant is interacting from an SDK endpoint (see the 'identity' field)."
                  },
                  "DateCreated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date that this resource was created."
                  },
                  "DateUpdated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date that this resource was last updated."
                  },
                  "Attributes": {
                    "type": "string",
                    "description": "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned."
                  },
                  "MessagingBinding.ProjectedAddress": {
                    "type": "string",
                    "description": "The address of the Twilio phone number that is used in Group MMS. Communication mask for the Conversation participant with Identity."
                  },
                  "RoleSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^RL[0-9a-fA-F]{32}$",
                    "description": "The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant."
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieve a list of all participants of the conversation",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for participants.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListServiceConversationParticipantResponse",
                  "properties": {
                    "participants": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/conversations.v1.service.service_conversation.service_conversation_participant"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListServiceConversationParticipant",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Participants/{Sid}": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A Service Participant resource represents a member of the conversation within a specific service.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "messaging_binding"
        ],
        "pathType": "instance",
        "parent": "/Services/{ChatServiceSid}/Conversations"
      },
      "post": {
        "description": "Update an existing participant in the conversation",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "description": "The X-Twilio-Webhook-Enabled HTTP request header",
            "schema": {
              "type": "string",
              "$ref": "#/components/schemas/service_conversation_participant_enum_webhook_enabled_type"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.service.service_conversation.service_conversation_participant"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateServiceConversationParticipant",
        "x-maturity": [
          "GA"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateServiceConversationParticipantRequest",
                "properties": {
                  "DateCreated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date that this resource was created."
                  },
                  "DateUpdated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date that this resource was last updated."
                  },
                  "Identity": {
                    "type": "string",
                    "description": "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversation SDK to communicate. Limited to 256 characters."
                  },
                  "Attributes": {
                    "type": "string",
                    "description": "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned."
                  },
                  "RoleSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^RL[0-9a-fA-F]{32}$",
                    "description": "The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant."
                  },
                  "MessagingBinding.ProxyAddress": {
                    "type": "string",
                    "description": "The address of the Twilio phone number that the participant is in contact with. 'null' value will remove it."
                  },
                  "MessagingBinding.ProjectedAddress": {
                    "type": "string",
                    "description": "The address of the Twilio phone number that is used in Group MMS. 'null' value will remove it."
                  },
                  "LastReadMessageIndex": {
                    "type": "integer",
                    "nullable": true,
                    "description": "Index of last \u201cread\u201d message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant."
                  },
                  "LastReadTimestamp": {
                    "type": "string",
                    "description": "Timestamp of last \u201cread\u201d message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant."
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Remove a participant from the conversation",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "description": "The X-Twilio-Webhook-Enabled HTTP request header",
            "schema": {
              "type": "string",
              "$ref": "#/components/schemas/service_conversation_participant_enum_webhook_enabled_type"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteServiceConversationParticipant",
        "x-maturity": [
          "GA"
        ]
      },
      "get": {
        "description": "Fetch a participant of the conversation",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.service.service_conversation.service_conversation_participant"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchServiceConversationParticipant",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Webhooks": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A Conversation-scoped Webhook resource manages a set of callback URLs and their configuration for receiving events specific to one conversation.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "target"
        ],
        "pathType": "list",
        "parent": "/Services/{ChatServiceSid}/Conversations"
      },
      "post": {
        "description": "Create a new webhook scoped to the conversation in a specific service",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.service.service_conversation.service_conversation_scoped_webhook"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateServiceConversationScopedWebhook",
        "x-maturity": [
          "GA"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateServiceConversationScopedWebhookRequest",
                "properties": {
                  "Target": {
                    "type": "string",
                    "$ref": "#/components/schemas/service_conversation_scoped_webhook_enum_target",
                    "description": "The target of this webhook: `webhook`, `studio`, `trigger`"
                  },
                  "Configuration.Url": {
                    "type": "string",
                    "description": "The absolute url the webhook request should be sent to."
                  },
                  "Configuration.Method": {
                    "type": "string",
                    "$ref": "#/components/schemas/service_conversation_scoped_webhook_enum_method",
                    "description": "The HTTP method to be used when sending a webhook request."
                  },
                  "Configuration.Filters": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The list of events, firing webhook event for this Conversation."
                  },
                  "Configuration.Triggers": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The list of keywords, firing webhook event for this Conversation."
                  },
                  "Configuration.FlowSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^FW[0-9a-fA-F]{32}$",
                    "description": "The studio flow SID, where the webhook should be sent to."
                  },
                  "Configuration.ReplayAfter": {
                    "type": "integer",
                    "description": "The message index for which and it's successors the webhook will be replayed. Not set by default"
                  }
                },
                "required": [
                  "Target"
                ]
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieve a list of all webhooks scoped to the conversation",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListServiceConversationScopedWebhookResponse",
                  "properties": {
                    "webhooks": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/conversations.v1.service.service_conversation.service_conversation_scoped_webhook"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListServiceConversationScopedWebhook",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Webhooks/{Sid}": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A Conversation-scoped Webhook resource manages a set of callback URLs and their configuration for receiving events specific to one conversation.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "target"
        ],
        "pathType": "instance",
        "parent": "/Services/{ChatServiceSid}/Conversations"
      },
      "post": {
        "description": "Update an existing conversation-scoped webhook",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WH[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.service.service_conversation.service_conversation_scoped_webhook"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateServiceConversationScopedWebhook",
        "x-maturity": [
          "GA"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateServiceConversationScopedWebhookRequest",
                "properties": {
                  "Configuration.Url": {
                    "type": "string",
                    "description": "The absolute url the webhook request should be sent to."
                  },
                  "Configuration.Method": {
                    "type": "string",
                    "$ref": "#/components/schemas/service_conversation_scoped_webhook_enum_method",
                    "description": "The HTTP method to be used when sending a webhook request."
                  },
                  "Configuration.Filters": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The list of events, firing webhook event for this Conversation."
                  },
                  "Configuration.Triggers": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The list of keywords, firing webhook event for this Conversation."
                  },
                  "Configuration.FlowSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^FW[0-9a-fA-F]{32}$",
                    "description": "The studio flow SID, where the webhook should be sent to."
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Remove an existing webhook scoped to the conversation",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WH[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteServiceConversationScopedWebhook",
        "x-maturity": [
          "GA"
        ]
      },
      "get": {
        "description": "Fetch the configuration of a conversation-scoped webhook",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "A 34 character string that uniquely identifies this resource.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^WH[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.service.service_conversation.service_conversation_scoped_webhook"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchServiceConversationScopedWebhook",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Services/{ChatServiceSid}/Configuration/Notifications": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A Service Notification resource manages a set of settings to determine push notification behavior at service level.",
      "x-twilio": {
        "defaultOutputProperties": [
          "chat_service_sid"
        ],
        "pathType": "instance",
        "parent": "/Services/{ChatServiceSid}/Configuration"
      },
      "post": {
        "description": "Update push notification service settings",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Configuration applies to.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.service.service_configuration.service_notification"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateServiceNotification",
        "x-maturity": [
          "GA"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateServiceNotificationRequest",
                "properties": {
                  "LogEnabled": {
                    "type": "boolean",
                    "description": "Weather the notification logging is enabled."
                  },
                  "NewMessage.Enabled": {
                    "type": "boolean",
                    "description": "Whether to send a notification when a new message is added to a conversation. The default is `false`."
                  },
                  "NewMessage.Template": {
                    "type": "string",
                    "description": "The template to use to create the notification text displayed when a new message is added to a conversation and `new_message.enabled` is `true`."
                  },
                  "NewMessage.Sound": {
                    "type": "string",
                    "description": "The name of the sound to play when a new message is added to a conversation and `new_message.enabled` is `true`."
                  },
                  "NewMessage.BadgeCountEnabled": {
                    "type": "boolean",
                    "description": "Whether the new message badge is enabled. The default is `false`."
                  },
                  "AddedToConversation.Enabled": {
                    "type": "boolean",
                    "description": "Whether to send a notification when a participant is added to a conversation. The default is `false`."
                  },
                  "AddedToConversation.Template": {
                    "type": "string",
                    "description": "The template to use to create the notification text displayed when a participant is added to a conversation and `added_to_conversation.enabled` is `true`."
                  },
                  "AddedToConversation.Sound": {
                    "type": "string",
                    "description": "The name of the sound to play when a participant is added to a conversation and `added_to_conversation.enabled` is `true`."
                  },
                  "RemovedFromConversation.Enabled": {
                    "type": "boolean",
                    "description": "Whether to send a notification to a user when they are removed from a conversation. The default is `false`."
                  },
                  "RemovedFromConversation.Template": {
                    "type": "string",
                    "description": "The template to use to create the notification text displayed to a user when they are removed from a conversation and `removed_from_conversation.enabled` is `true`."
                  },
                  "RemovedFromConversation.Sound": {
                    "type": "string",
                    "description": "The name of the sound to play to a user when they are removed from a conversation and `removed_from_conversation.enabled` is `true`."
                  },
                  "NewMessage.WithMedia.Enabled": {
                    "type": "boolean",
                    "description": "Whether to send a notification when a new message with media/file attachments is added to a conversation. The default is `false`."
                  },
                  "NewMessage.WithMedia.Template": {
                    "type": "string",
                    "description": "The template to use to create the notification text displayed when a new message with media/file attachments is added to a conversation and `new_message.attachments.enabled` is `true`."
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Fetch push notification service settings",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Configuration applies to.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.service.service_configuration.service_notification"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchServiceNotification",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Services/{ChatServiceSid}/ParticipantConversations": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "Service Participant Conversations resource represents a list of Conversations that this Participant belongs to belonging to a specific conversation service.",
      "x-twilio": {
        "defaultOutputProperties": [
          "chat_service_sid",
          "participant_sid",
          "conversation_sid"
        ],
        "pathType": "list",
        "parent": "/Services"
      },
      "get": {
        "description": "Retrieve a list of all Conversations that this Participant belongs to by identity or by address. Only one parameter should be specified.",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant Conversations resource is associated with.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Identity",
            "in": "query",
            "description": "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversations SDK to communicate. Limited to 256 characters.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Address",
            "in": "query",
            "description": "A unique string identifier for the conversation participant who's not a Conversation User. This parameter could be found in messaging_binding.address field of Participant resource. It should be url-encoded.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListServiceParticipantConversationResponse",
                  "properties": {
                    "conversations": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/conversations.v1.service.service_participant_conversation"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListServiceParticipantConversation",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Services/{ChatServiceSid}/Roles": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A Service Role resource represents a set of permissions granted to a user within a service or a conversation.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "friendly_name",
          "type"
        ],
        "pathType": "list",
        "parent": "/Services"
      },
      "post": {
        "description": "Create a new user role in your service",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) to create the Role resource under.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.service.service_role"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateServiceRole",
        "x-maturity": [
          "GA"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateServiceRoleRequest",
                "properties": {
                  "FriendlyName": {
                    "type": "string",
                    "description": "A descriptive string that you create to describe the new resource. It can be up to 64 characters long."
                  },
                  "Type": {
                    "type": "string",
                    "$ref": "#/components/schemas/service_role_enum_role_type",
                    "description": "The type of role. Can be: `conversation` for [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) roles or `service` for [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) roles."
                  },
                  "Permission": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "A permission that you grant to the new role. Only one permission can be granted per parameter. To assign more than one permission, repeat this parameter for each permission value. The values for this parameter depend on the role's `type`."
                  }
                },
                "required": [
                  "FriendlyName",
                  "Type",
                  "Permission"
                ]
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieve a list of all user roles in your service",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) to read the Role resources from.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListServiceRoleResponse",
                  "properties": {
                    "roles": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/conversations.v1.service.service_role"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListServiceRole",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Services/{ChatServiceSid}/Roles/{Sid}": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A Service Role resource represents a set of permissions granted to a user within a service or a conversation.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "friendly_name",
          "type"
        ],
        "pathType": "instance",
        "parent": "/Services"
      },
      "post": {
        "description": "Update an existing user role in your service",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) to update the Role resource in.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the Role resource to update.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.service.service_role"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateServiceRole",
        "x-maturity": [
          "GA"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateServiceRoleRequest",
                "properties": {
                  "Permission": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "A permission that you grant to the role. Only one permission can be granted per parameter. To assign more than one permission, repeat this parameter for each permission value. Note that the update action replaces all previously assigned permissions with those defined in the update action. To remove a permission, do not include it in the subsequent update action. The values for this parameter depend on the role's `type`."
                  }
                },
                "required": [
                  "Permission"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "description": "Remove a user role from your service",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) to delete the Role resource from.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the Role resource to delete.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteServiceRole",
        "x-maturity": [
          "GA"
        ]
      },
      "get": {
        "description": "Fetch a user role from your service",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) to fetch the Role resource from.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the Role resource to fetch.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.service.service_role"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchServiceRole",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Services/{ChatServiceSid}/Users": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A Service User resource represents a conversation user belonging to a specific conversation service.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "identity"
        ],
        "pathType": "list",
        "parent": "/Services"
      },
      "post": {
        "description": "Add a new conversation user to your service",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the User resource is associated with.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "description": "The X-Twilio-Webhook-Enabled HTTP request header",
            "schema": {
              "type": "string",
              "$ref": "#/components/schemas/service_user_enum_webhook_enabled_type"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.service.service_user"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateServiceUser",
        "x-maturity": [
          "GA"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateServiceUserRequest",
                "properties": {
                  "Identity": {
                    "type": "string",
                    "description": "The application-defined string that uniquely identifies the resource's User within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). This value is often a username or an email address, and is case-sensitive."
                  },
                  "FriendlyName": {
                    "type": "string",
                    "description": "The string that you assigned to describe the resource."
                  },
                  "Attributes": {
                    "type": "string",
                    "description": "The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned."
                  },
                  "RoleSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^RL[0-9a-fA-F]{32}$",
                    "description": "The SID of a service-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the user."
                  }
                },
                "required": [
                  "Identity"
                ]
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieve a list of all conversation users in your service",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) to read the User resources from.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListServiceUserResponse",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/conversations.v1.service.service_user"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListServiceUser",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Services/{ChatServiceSid}/Users/{Sid}": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A Service User resource represents a conversation user belonging to a specific conversation service.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "identity"
        ],
        "pathType": "instance",
        "parent": "/Services"
      },
      "post": {
        "description": "Update an existing conversation user in your service",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the User resource is associated with.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the User resource to update. This value can be either the `sid` or the `identity` of the User resource to update.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "description": "The X-Twilio-Webhook-Enabled HTTP request header",
            "schema": {
              "type": "string",
              "$ref": "#/components/schemas/service_user_enum_webhook_enabled_type"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.service.service_user"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateServiceUser",
        "x-maturity": [
          "GA"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateServiceUserRequest",
                "properties": {
                  "FriendlyName": {
                    "type": "string",
                    "description": "The string that you assigned to describe the resource."
                  },
                  "Attributes": {
                    "type": "string",
                    "description": "The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned."
                  },
                  "RoleSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^RL[0-9a-fA-F]{32}$",
                    "description": "The SID of a service-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the user."
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Remove a conversation user from your service",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) to delete the User resource from.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the User resource to delete. This value can be either the `sid` or the `identity` of the User resource to delete.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "description": "The X-Twilio-Webhook-Enabled HTTP request header",
            "schema": {
              "type": "string",
              "$ref": "#/components/schemas/service_user_enum_webhook_enabled_type"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteServiceUser",
        "x-maturity": [
          "GA"
        ]
      },
      "get": {
        "description": "Fetch a conversation user from your service",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) to fetch the User resource from.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the User resource to fetch. This value can be either the `sid` or the `identity` of the User resource to fetch.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.service.service_user"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchServiceUser",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Services/{ChatServiceSid}/Users/{UserSid}/Conversations/{ConversationSid}": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A Service User Conversation resource represents a conversation of the user belonging to a specific conversation service.",
      "x-twilio": {
        "defaultOutputProperties": [
          "conversation_sid",
          "user_sid",
          "chat_service_sid",
          "friendly_name",
          "date_created"
        ],
        "pathType": "instance",
        "parent": "/Services/{ChatServiceSid}/Users",
        "className": "user_conversation"
      },
      "post": {
        "description": "Update a specific User Conversation.",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Conversation resource is associated with.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "UserSid",
            "in": "path",
            "description": "The unique SID identifier of the [User resource](https://www.twilio.com/docs/conversations/api/user-resource). This value can be either the `sid` or the `identity` of the User resource.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique SID identifier of the Conversation. This value can be either the `sid` or the `unique_name` of the [Conversation resource](https://www.twilio.com/docs/conversations/api/conversation-resource).",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.service.service_user.service_user_conversation"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateServiceUserConversation",
        "x-maturity": [
          "GA"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateServiceUserConversationRequest",
                "properties": {
                  "NotificationLevel": {
                    "type": "string",
                    "$ref": "#/components/schemas/service_user_conversation_enum_notification_level",
                    "description": "The Notification Level of this User Conversation. One of `default` or `muted`."
                  },
                  "LastReadTimestamp": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date of the last message read in conversation by the user, given in ISO 8601 format."
                  },
                  "LastReadMessageIndex": {
                    "type": "integer",
                    "nullable": true,
                    "description": "The index of the last Message in the Conversation that the Participant has read."
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a specific User Conversation.",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Conversation resource is associated with.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "UserSid",
            "in": "path",
            "description": "The unique SID identifier of the [User resource](https://www.twilio.com/docs/conversations/api/user-resource). This value can be either the `sid` or the `identity` of the User resource.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique SID identifier of the Conversation. This value can be either the `sid` or the `unique_name` of the [Conversation resource](https://www.twilio.com/docs/conversations/api/conversation-resource).",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteServiceUserConversation",
        "x-maturity": [
          "GA"
        ]
      },
      "get": {
        "description": "Fetch a specific User Conversation.",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Conversation resource is associated with.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "UserSid",
            "in": "path",
            "description": "The unique SID identifier of the [User resource](https://www.twilio.com/docs/conversations/api/user-resource). This value can be either the `sid` or the `identity` of the User resource.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique SID identifier of the Conversation. This value can be either the `sid` or the `unique_name` of the [Conversation resource](https://www.twilio.com/docs/conversations/api/conversation-resource).",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.service.service_user.service_user_conversation"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchServiceUserConversation",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Services/{ChatServiceSid}/Users/{UserSid}/Conversations": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A Service User Conversation resource represents a conversation of the user belonging to a specific conversation service.",
      "x-twilio": {
        "defaultOutputProperties": [
          "conversation_sid",
          "user_sid",
          "chat_service_sid",
          "friendly_name",
          "date_created"
        ],
        "pathType": "list",
        "parent": "/Services/{ChatServiceSid}/Users",
        "className": "user_conversation"
      },
      "get": {
        "description": "Retrieve a list of all User Conversations for the User.",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Conversation resource is associated with.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "UserSid",
            "in": "path",
            "description": "The unique SID identifier of the [User resource](https://www.twilio.com/docs/conversations/api/user-resource). This value can be either the `sid` or the `identity` of the User resource.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListServiceUserConversationResponse",
                  "properties": {
                    "conversations": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/conversations.v1.service.service_user.service_user_conversation"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListServiceUserConversation",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Services/{ChatServiceSid}/Configuration/Webhooks": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A service webhook configuration resource manages a service-level set of callback URLs and their configuration for receiving all the corresponding service events.",
      "x-twilio": {
        "defaultOutputProperties": [
          "chat_service_sid"
        ],
        "pathType": "instance",
        "parent": "/Services/{ChatServiceSid}/Configuration"
      },
      "post": {
        "description": "Update a specific Webhook.",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.service.service_configuration.service_webhook_configuration"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateServiceWebhookConfiguration",
        "x-maturity": [
          "GA"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateServiceWebhookConfigurationRequest",
                "properties": {
                  "PreWebhookUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "The absolute url the pre-event webhook request should be sent to."
                  },
                  "PostWebhookUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "The absolute url the post-event webhook request should be sent to."
                  },
                  "Filters": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The list of events that your configured webhook targets will receive. Events not configured here will not fire. Possible values are `onParticipantAdd`, `onParticipantAdded`, `onDeliveryUpdated`, `onConversationUpdated`, `onConversationRemove`, `onParticipantRemove`, `onConversationUpdate`, `onMessageAdd`, `onMessageRemoved`, `onParticipantUpdated`, `onConversationAdded`, `onMessageAdded`, `onConversationAdd`, `onConversationRemoved`, `onParticipantUpdate`, `onMessageRemove`, `onMessageUpdated`, `onParticipantRemoved`, `onMessageUpdate` or `onConversationStateUpdated`."
                  },
                  "Method": {
                    "type": "string",
                    "description": "The HTTP method to be used when sending a webhook request. One of `GET` or `POST`."
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Fetch a specific service webhook configuration.",
        "parameters": [
          {
            "name": "ChatServiceSid",
            "in": "path",
            "description": "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.service.service_configuration.service_webhook_configuration"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchServiceWebhookConfiguration",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Users": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A User resource represents a conversation user belonging to a default conversation service.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "identity"
        ],
        "pathType": "list"
      },
      "post": {
        "description": "Add a new conversation user to your account's default service",
        "parameters": [
          {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "description": "The X-Twilio-Webhook-Enabled HTTP request header",
            "schema": {
              "type": "string",
              "$ref": "#/components/schemas/user_enum_webhook_enabled_type"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.user"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateUser",
        "x-maturity": [
          "GA"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateUserRequest",
                "properties": {
                  "Identity": {
                    "type": "string",
                    "description": "The application-defined string that uniquely identifies the resource's User within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). This value is often a username or an email address, and is case-sensitive."
                  },
                  "FriendlyName": {
                    "type": "string",
                    "description": "The string that you assigned to describe the resource."
                  },
                  "Attributes": {
                    "type": "string",
                    "description": "The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned."
                  },
                  "RoleSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^RL[0-9a-fA-F]{32}$",
                    "description": "The SID of a service-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the user."
                  }
                },
                "required": [
                  "Identity"
                ]
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieve a list of all conversation users in your account's default service",
        "parameters": [
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListUserResponse",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/conversations.v1.user"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListUser",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Users/{Sid}": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A User resource represents a conversation user belonging to a default conversation service.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "identity"
        ],
        "pathType": "instance"
      },
      "post": {
        "description": "Update an existing conversation user in your account's default service",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the User resource to update. This value can be either the `sid` or the `identity` of the User resource to update.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "description": "The X-Twilio-Webhook-Enabled HTTP request header",
            "schema": {
              "type": "string",
              "$ref": "#/components/schemas/user_enum_webhook_enabled_type"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.user"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateUser",
        "x-maturity": [
          "GA"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateUserRequest",
                "properties": {
                  "FriendlyName": {
                    "type": "string",
                    "description": "The string that you assigned to describe the resource."
                  },
                  "Attributes": {
                    "type": "string",
                    "description": "The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned."
                  },
                  "RoleSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^RL[0-9a-fA-F]{32}$",
                    "description": "The SID of a service-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the user."
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Remove a conversation user from your account's default service",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the User resource to delete. This value can be either the `sid` or the `identity` of the User resource to delete.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "X-Twilio-Webhook-Enabled",
            "in": "header",
            "description": "The X-Twilio-Webhook-Enabled HTTP request header",
            "schema": {
              "type": "string",
              "$ref": "#/components/schemas/user_enum_webhook_enabled_type"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteUser",
        "x-maturity": [
          "GA"
        ]
      },
      "get": {
        "description": "Fetch a conversation user from your account's default service",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the User resource to fetch. This value can be either the `sid` or the `identity` of the User resource to fetch.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.user"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchUser",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Users/{UserSid}/Conversations/{ConversationSid}": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A User Conversation resource represents a conversation of the user belonging to a default conversation service.",
      "x-twilio": {
        "defaultOutputProperties": [
          "conversation_sid",
          "user_sid",
          "chat_service_sid",
          "friendly_name",
          "date_created"
        ],
        "pathType": "instance",
        "parent": "/Users",
        "className": "user_conversation"
      },
      "post": {
        "description": "Update a specific User Conversation.",
        "parameters": [
          {
            "name": "UserSid",
            "in": "path",
            "description": "The unique SID identifier of the [User resource](https://www.twilio.com/docs/conversations/api/user-resource). This value can be either the `sid` or the `identity` of the User resource.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique SID identifier of the Conversation. This value can be either the `sid` or the `unique_name` of the [Conversation resource](https://www.twilio.com/docs/conversations/api/conversation-resource).",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.user.user_conversation"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateUserConversation",
        "x-maturity": [
          "GA"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateUserConversationRequest",
                "properties": {
                  "NotificationLevel": {
                    "type": "string",
                    "$ref": "#/components/schemas/user_conversation_enum_notification_level",
                    "description": "The Notification Level of this User Conversation. One of `default` or `muted`."
                  },
                  "LastReadTimestamp": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date of the last message read in conversation by the user, given in ISO 8601 format."
                  },
                  "LastReadMessageIndex": {
                    "type": "integer",
                    "nullable": true,
                    "description": "The index of the last Message in the Conversation that the Participant has read."
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a specific User Conversation.",
        "parameters": [
          {
            "name": "UserSid",
            "in": "path",
            "description": "The unique SID identifier of the [User resource](https://www.twilio.com/docs/conversations/api/user-resource). This value can be either the `sid` or the `identity` of the User resource.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique SID identifier of the Conversation. This value can be either the `sid` or the `unique_name` of the [Conversation resource](https://www.twilio.com/docs/conversations/api/conversation-resource).",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteUserConversation",
        "x-maturity": [
          "GA"
        ]
      },
      "get": {
        "description": "Fetch a specific User Conversation.",
        "parameters": [
          {
            "name": "UserSid",
            "in": "path",
            "description": "The unique SID identifier of the [User resource](https://www.twilio.com/docs/conversations/api/user-resource). This value can be either the `sid` or the `identity` of the User resource.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "ConversationSid",
            "in": "path",
            "description": "The unique SID identifier of the Conversation. This value can be either the `sid` or the `unique_name` of the [Conversation resource](https://www.twilio.com/docs/conversations/api/conversation-resource).",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.user.user_conversation"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchUserConversation",
        "x-maturity": [
          "GA"
        ]
      }
    },
    "/v1/Users/{UserSid}/Conversations": {
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "description": "A User Conversation resource represents a conversation of the user belonging to a default conversation service.",
      "x-twilio": {
        "defaultOutputProperties": [
          "conversation_sid",
          "user_sid",
          "chat_service_sid",
          "friendly_name",
          "date_created"
        ],
        "pathType": "list",
        "parent": "/Users",
        "className": "user_conversation"
      },
      "get": {
        "description": "Retrieve a list of all User Conversations for the User.",
        "parameters": [
          {
            "name": "UserSid",
            "in": "path",
            "description": "The unique SID identifier of the [User resource](https://www.twilio.com/docs/conversations/api/user-resource). This value can be either the `sid` or the `identity` of the User resource.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListUserConversationResponse",
                  "properties": {
                    "conversations": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/conversations.v1.user.user_conversation"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListUserConversation",
        "x-maturity": [
          "GA"
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://conversations.twilio.com"
    }
  ],
  "x-maturity": [
    {
      "name": "GA",
      "description": "This product is Generally Available."
    }
  ]
}