{
  "components": {
    "schemas": {
      "serverless.v1.service.asset": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ZH[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique string that identifies the Asset resource"
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Account that created the Asset resource"
          },
          "service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ZS[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Service that the Asset resource is associated with"
          },
          "friendly_name": {
            "type": "string",
            "nullable": true,
            "description": "The string that you assigned to describe the Asset resource"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the Asset resource was created"
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the Asset resource was last updated"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The absolute URL of the Asset resource"
          },
          "links": {
            "type": "object",
            "format": "uri-map",
            "nullable": true,
            "description": "The URLs of the Asset resource's nested resources"
          }
        }
      },
      "serverless.v1.service.asset.asset_version": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ZN[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique string that identifies the Asset Version resource"
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Account that created the Asset Version resource"
          },
          "service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ZS[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Service that the Asset Version resource is associated with"
          },
          "asset_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ZH[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Asset resource that is the parent of the Asset Version"
          },
          "path": {
            "type": "string",
            "nullable": true,
            "description": "The URL-friendly string by which the Asset Version can be referenced"
          },
          "visibility": {
            "type": "string",
            "$ref": "#/components/schemas/asset_version_enum_visibility",
            "nullable": true,
            "description": "The access control that determines how the Asset Version can be accessed"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the Asset Version resource was created"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The absolute URL of the Asset Version resource"
          }
        }
      },
      "asset_version_enum_visibility": {
        "type": "string",
        "enum": [
          "public",
          "private",
          "protected"
        ]
      },
      "serverless.v1.service.build": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ZB[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique string that identifies the Build resource"
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Account that created the Build resource"
          },
          "service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ZS[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Service that the Build resource is associated with"
          },
          "status": {
            "type": "string",
            "$ref": "#/components/schemas/build_enum_status",
            "nullable": true,
            "description": "The status of the Build"
          },
          "asset_versions": {
            "type": "array",
            "items": {},
            "nullable": true,
            "description": "The list of Asset Version resource SIDs that are included in the Build"
          },
          "function_versions": {
            "type": "array",
            "items": {},
            "nullable": true,
            "description": "The list of Function Version resource SIDs that are included in the Build"
          },
          "dependencies": {
            "type": "array",
            "items": {},
            "nullable": true,
            "description": "A list of objects that describe the Dependencies included in the Build"
          },
          "runtime": {
            "type": "string",
            "$ref": "#/components/schemas/build_enum_runtime",
            "nullable": true,
            "description": "The Runtime version that will be used to run the Build."
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the Build resource was created"
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the Build resource was last updated"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The absolute URL of the Build resource"
          },
          "links": {
            "type": "object",
            "format": "uri-map",
            "nullable": true
          }
        }
      },
      "build_enum_status": {
        "type": "string",
        "enum": [
          "building",
          "completed",
          "failed"
        ]
      },
      "build_enum_runtime": {
        "type": "string",
        "enum": [
          "node8",
          "node10",
          "node12",
          "node14"
        ]
      },
      "serverless.v1.service.build.build_status": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ZB[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique string that identifies the Build resource"
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Account that created the Build resource"
          },
          "service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ZS[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Service that the Build resource is associated with"
          },
          "status": {
            "type": "string",
            "$ref": "#/components/schemas/build_status_enum_status",
            "nullable": true,
            "description": "The status of the Build"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The absolute URL of the Build Status resource"
          }
        }
      },
      "build_status_enum_status": {
        "type": "string",
        "enum": [
          "building",
          "completed",
          "failed"
        ]
      },
      "serverless.v1.service.environment.deployment": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ZD[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique string that identifies the Deployment resource"
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Account that created the Deployment resource"
          },
          "service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ZS[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Service that the Deployment resource is associated with"
          },
          "environment_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ZE[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Environment for the Deployment"
          },
          "build_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ZB[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Build for the deployment"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the Deployment resource was created"
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the Deployment resource was last updated"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The absolute URL of the Deployment resource"
          }
        }
      },
      "serverless.v1.service.environment": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ZE[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique string that identifies the Environment resource"
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Account that created the Environment resource"
          },
          "service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ZS[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Service that the Environment resource is associated with"
          },
          "build_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ZB[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the build deployed in the environment"
          },
          "unique_name": {
            "type": "string",
            "nullable": true,
            "description": "A user-defined string that uniquely identifies the Environment resource"
          },
          "domain_suffix": {
            "type": "string",
            "nullable": true,
            "description": "A URL-friendly name that represents the environment"
          },
          "domain_name": {
            "type": "string",
            "nullable": true,
            "description": "The domain name for all Functions and Assets deployed in the Environment"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the Environment resource was created"
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the Environment resource was last updated"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The absolute URL of the Environment resource"
          },
          "links": {
            "type": "object",
            "format": "uri-map",
            "nullable": true,
            "description": "The URLs of the Environment resource's nested resources"
          }
        }
      },
      "serverless.v1.service.function": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ZH[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique string that identifies the Function resource"
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Account that created the Function resource"
          },
          "service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ZS[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Service that the Function resource is associated with"
          },
          "friendly_name": {
            "type": "string",
            "nullable": true,
            "description": "The string that you assigned to describe the Function resource"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the Function resource was created"
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the Function resource was last updated"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The absolute URL of the Function resource"
          },
          "links": {
            "type": "object",
            "format": "uri-map",
            "nullable": true,
            "description": "The URLs of nested resources of the Function resource"
          }
        }
      },
      "serverless.v1.service.function.function_version": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ZN[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique string that identifies the Function Version resource"
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Account that created the Function Version resource"
          },
          "service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ZS[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Service that the Function Version resource is associated with"
          },
          "function_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ZH[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Function resource that is the parent of the Function Version resource"
          },
          "path": {
            "type": "string",
            "nullable": true,
            "description": "The URL-friendly string by which the Function Version resource can be referenced"
          },
          "visibility": {
            "type": "string",
            "$ref": "#/components/schemas/function_version_enum_visibility",
            "nullable": true,
            "description": "The access control that determines how the Function Version resource can be accessed"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the Function Version resource was created"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The absolute URL of the Function Version resource"
          },
          "links": {
            "type": "object",
            "format": "uri-map",
            "nullable": true
          }
        }
      },
      "function_version_enum_visibility": {
        "type": "string",
        "enum": [
          "public",
          "private",
          "protected"
        ]
      },
      "serverless.v1.service.function.function_version.function_version_content": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ZN[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique string that identifies the Function Version resource"
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Account that created the Function Version resource"
          },
          "service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ZS[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Service that the Function Version resource is associated with"
          },
          "function_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ZH[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Function that is the parent of the Function Version"
          },
          "content": {
            "type": "string",
            "nullable": true,
            "description": "The content of the Function Version resource"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        }
      },
      "serverless.v1.service.environment.log": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^NO[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique string that identifies the Log resource"
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Account that created the Log resource"
          },
          "service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ZS[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Service that the Log resource is associated with"
          },
          "environment_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ZE[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the environment in which the log occurred"
          },
          "build_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ZB[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the build that corresponds to the log"
          },
          "deployment_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ZD[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the deployment that corresponds to the log"
          },
          "function_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ZH[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the function whose invocation produced the log"
          },
          "request_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^RQ[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the request associated with the log"
          },
          "level": {
            "type": "string",
            "$ref": "#/components/schemas/log_enum_level",
            "nullable": true,
            "description": "The log level"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "description": "The log message"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the Log resource was created"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The absolute URL of the Log resource"
          }
        }
      },
      "log_enum_level": {
        "type": "string",
        "enum": [
          "info",
          "warn",
          "error"
        ]
      },
      "serverless.v1.service": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ZS[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique string that identifies the Service resource"
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Account that created the Service resource"
          },
          "friendly_name": {
            "type": "string",
            "nullable": true,
            "description": "The string that you assigned to describe the Service resource"
          },
          "unique_name": {
            "type": "string",
            "nullable": true,
            "description": "A user-defined string that uniquely identifies the Service resource"
          },
          "include_credentials": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether to inject Account credentials into a function invocation context"
          },
          "ui_editable": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether the Service resource's properties and subresources can be edited via the UI"
          },
          "domain_base": {
            "type": "string",
            "nullable": true,
            "description": "The base domain name for this Service, which is a combination of the unique name and a randomly generated string"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the Service resource was created"
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the Service resource was last updated"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The absolute URL of the Service resource"
          },
          "links": {
            "type": "object",
            "format": "uri-map",
            "nullable": true,
            "description": "The URLs of the Service's nested resources"
          }
        }
      },
      "serverless.v1.service.environment.variable": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ZV[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The unique string that identifies the Variable resource"
          },
          "account_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Account that created the Variable resource"
          },
          "service_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ZS[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Service that the Variable resource is associated with"
          },
          "environment_sid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^ZE[0-9a-fA-F]{32}$",
            "nullable": true,
            "description": "The SID of the Environment in which the Variable exists"
          },
          "key": {
            "type": "string",
            "nullable": true,
            "description": "A string by which the Variable resource can be referenced"
          },
          "value": {
            "type": "string",
            "nullable": true,
            "description": "A string that contains the actual value of the Variable"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the Variable resource was created"
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The ISO 8601 date and time in GMT when the Variable resource was last updated"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "The absolute URL of the Variable resource"
          }
        }
      }
    },
    "securitySchemes": {
      "accountSid_authToken": {
        "type": "http",
        "scheme": "basic"
      }
    }
  },
  "info": {
    "title": "Twilio - Serverless",
    "description": "This is the public Twilio REST API.",
    "termsOfService": "https://www.twilio.com/legal/tos",
    "contact": {
      "name": "Twilio Support",
      "url": "https://support.twilio.com",
      "email": "support@twilio.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.33.0"
  },
  "openapi": "3.0.1",
  "paths": {
    "/v1/Services/{ServiceSid}/Assets": {
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "description": "A wrapper that represents a static file and groups the different Versions of the static file.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "friendly_name",
          "date_created"
        ],
        "pathType": "list",
        "parent": "/Services"
      },
      "get": {
        "description": "Retrieve a list of all Assets.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to read the Asset resources from.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListAssetResponse",
                  "properties": {
                    "assets": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/serverless.v1.service.asset"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListAsset",
        "x-maturity": [
          "Beta"
        ]
      },
      "post": {
        "description": "Create a new Asset resource.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to create the Asset resource under.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.asset"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateAsset",
        "x-maturity": [
          "Beta"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateAssetRequest",
                "properties": {
                  "FriendlyName": {
                    "type": "string",
                    "description": "A descriptive string that you create to describe the Asset resource. It can be a maximum of 255 characters."
                  }
                },
                "required": [
                  "FriendlyName"
                ]
              }
            }
          }
        }
      }
    },
    "/v1/Services/{ServiceSid}/Assets/{Sid}": {
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "description": "A wrapper that represents a static file and groups the different Versions of the static file.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "friendly_name",
          "date_created"
        ],
        "pathType": "instance",
        "parent": "/Services"
      },
      "get": {
        "description": "Retrieve a specific Asset resource.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to fetch the Asset resource from.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID that identifies the Asset resource to fetch.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ZH[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.asset"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchAsset",
        "x-maturity": [
          "Beta"
        ]
      },
      "delete": {
        "description": "Delete an Asset resource.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to delete the Asset resource from.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID that identifies the Asset resource to delete.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ZH[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteAsset",
        "x-maturity": [
          "Beta"
        ]
      },
      "post": {
        "description": "Update a specific Asset resource.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to update the Asset resource from.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID that identifies the Asset resource to update.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ZH[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.asset"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateAsset",
        "x-maturity": [
          "Beta"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateAssetRequest",
                "properties": {
                  "FriendlyName": {
                    "type": "string",
                    "description": "A descriptive string that you create to describe the Asset resource. It can be a maximum of 255 characters."
                  }
                },
                "required": [
                  "FriendlyName"
                ]
              }
            }
          }
        }
      }
    },
    "/v1/Services/{ServiceSid}/Assets/{AssetSid}/Versions": {
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "description": "The content of an Asset.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "path",
          "visibility",
          "date_created"
        ],
        "pathType": "list",
        "parent": "/Services/{ServiceSid}/Assets",
        "className": "asset_version"
      },
      "get": {
        "description": "Retrieve a list of all Asset Versions.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to read the Asset Version resource from.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "AssetSid",
            "in": "path",
            "description": "The SID of the Asset resource that is the parent of the Asset Version resources to read.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ZH[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListAssetVersionResponse",
                  "properties": {
                    "asset_versions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/serverless.v1.service.asset.asset_version"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListAssetVersion",
        "x-maturity": [
          "Beta"
        ]
      }
    },
    "/v1/Services/{ServiceSid}/Assets/{AssetSid}/Versions/{Sid}": {
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "description": "The content of an Asset.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "path",
          "visibility",
          "date_created"
        ],
        "pathType": "instance",
        "parent": "/Services/{ServiceSid}/Assets",
        "className": "asset_version"
      },
      "get": {
        "description": "Retrieve a specific Asset Version.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to fetch the Asset Version resource from.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "AssetSid",
            "in": "path",
            "description": "The SID of the Asset resource that is the parent of the Asset Version resource to fetch.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ZH[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the Asset Version resource to fetch.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ZN[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.asset.asset_version"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchAssetVersion",
        "x-maturity": [
          "Beta"
        ]
      }
    },
    "/v1/Services/{ServiceSid}/Builds": {
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "description": "A collection of Function Versions, Asset Versions, Dependencies, and a Runtime that form a deployable unit.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "status",
          "date_created"
        ],
        "pathType": "list",
        "parent": "/Services"
      },
      "get": {
        "description": "Retrieve a list of all Builds.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to read the Build resources from.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListBuildResponse",
                  "properties": {
                    "builds": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/serverless.v1.service.build"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListBuild",
        "x-maturity": [
          "Beta"
        ]
      },
      "post": {
        "description": "Create a new Build resource. At least one function version or asset version is required.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to create the Build resource under.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.build"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateBuild",
        "x-maturity": [
          "Beta"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateBuildRequest",
                "properties": {
                  "AssetVersions": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "minLength": 34,
                      "maxLength": 34,
                      "pattern": "^ZN[0-9a-fA-F]{32}$"
                    },
                    "description": "The list of Asset Version resource SIDs to include in the Build."
                  },
                  "FunctionVersions": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "minLength": 34,
                      "maxLength": 34,
                      "pattern": "^ZN[0-9a-fA-F]{32}$"
                    },
                    "description": "The list of the Function Version resource SIDs to include in the Build."
                  },
                  "Dependencies": {
                    "type": "string",
                    "description": "A list of objects that describe the Dependencies included in the Build. Each object contains the `name` and `version` of the dependency."
                  },
                  "Runtime": {
                    "type": "string",
                    "description": "The Runtime version that will be used to run the Build resource when it is deployed."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/Services/{ServiceSid}/Builds/{Sid}": {
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "description": "A collection of Function Versions, Asset Versions, Dependencies, and a Runtime that form a deployable unit.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "status",
          "date_created"
        ],
        "pathType": "instance",
        "parent": "/Services"
      },
      "get": {
        "description": "Retrieve a specific Build resource.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to fetch the Build resource from.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the Build resource to fetch.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ZB[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.build"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchBuild",
        "x-maturity": [
          "Beta"
        ]
      },
      "delete": {
        "description": "Delete a Build resource.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to delete the Build resource from.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the Build resource to delete.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ZB[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteBuild",
        "x-maturity": [
          "Beta"
        ]
      }
    },
    "/v1/Services/{ServiceSid}/Builds/{Sid}/Status": {
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "description": "The status of a Build resource.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "status"
        ],
        "pathType": "instance",
        "parent": "/Services/{ServiceSid}/Builds",
        "className": "build_status"
      },
      "get": {
        "description": "Retrieve a specific Build resource.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to fetch the Build resource from.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the Build resource to fetch.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ZB[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.build.build_status"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchBuildStatus",
        "x-maturity": [
          "Beta"
        ]
      }
    },
    "/v1/Services/{ServiceSid}/Environments/{EnvironmentSid}/Deployments": {
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "description": "An association of a Build with an Environment so that the Build is published in the Environment.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "build_sid",
          "date_created"
        ],
        "pathType": "list",
        "parent": "/Services/{ServiceSid}/Environments"
      },
      "get": {
        "description": "Retrieve a list of all Deployments.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to read the Deployment resources from.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "EnvironmentSid",
            "in": "path",
            "description": "The SID of the Environment used by the Deployment resources to read.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ZE[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListDeploymentResponse",
                  "properties": {
                    "deployments": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/serverless.v1.service.environment.deployment"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListDeployment",
        "x-maturity": [
          "Beta"
        ]
      },
      "post": {
        "description": "Create a new Deployment.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to create the Deployment resource under.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "EnvironmentSid",
            "in": "path",
            "description": "The SID of the Environment for the Deployment.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ZE[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.environment.deployment"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateDeployment",
        "x-maturity": [
          "Beta"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateDeploymentRequest",
                "properties": {
                  "BuildSid": {
                    "type": "string",
                    "minLength": 34,
                    "maxLength": 34,
                    "pattern": "^ZB[0-9a-fA-F]{32}$",
                    "description": "The SID of the Build for the Deployment."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/Services/{ServiceSid}/Environments/{EnvironmentSid}/Deployments/{Sid}": {
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "description": "An association of a Build with an Environment so that the Build is published in the Environment.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "build_sid",
          "date_created"
        ],
        "pathType": "instance",
        "parent": "/Services/{ServiceSid}/Environments"
      },
      "get": {
        "description": "Retrieve a specific Deployment.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to fetch the Deployment resource from.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "EnvironmentSid",
            "in": "path",
            "description": "The SID of the Environment used by the Deployment to fetch.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ZE[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID that identifies the Deployment resource to fetch.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ZD[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.environment.deployment"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchDeployment",
        "x-maturity": [
          "Beta"
        ]
      }
    },
    "/v1/Services/{ServiceSid}/Environments": {
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "description": "Represents a deployed build of a given set of Functions and/or Assets at a specific URL.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "unique_name",
          "domain_name",
          "build_sid"
        ],
        "pathType": "list",
        "parent": "/Services"
      },
      "get": {
        "description": "Retrieve a list of all environments.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to read the Environment resources from.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListEnvironmentResponse",
                  "properties": {
                    "environments": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/serverless.v1.service.environment"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListEnvironment",
        "x-maturity": [
          "Beta"
        ]
      },
      "post": {
        "description": "Create a new environment.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to create the Environment resource under.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.environment"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateEnvironment",
        "x-maturity": [
          "Beta"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateEnvironmentRequest",
                "properties": {
                  "UniqueName": {
                    "type": "string",
                    "description": "A user-defined string that uniquely identifies the Environment resource. It can be a maximum of 100 characters."
                  },
                  "DomainSuffix": {
                    "type": "string",
                    "description": "A URL-friendly name that represents the environment and forms part of the domain name. It can be a maximum of 16 characters."
                  }
                },
                "required": [
                  "UniqueName"
                ]
              }
            }
          }
        }
      }
    },
    "/v1/Services/{ServiceSid}/Environments/{Sid}": {
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "description": "Represents a deployed build of a given set of Functions and/or Assets at a specific URL.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "unique_name",
          "domain_name",
          "build_sid"
        ],
        "pathType": "instance",
        "parent": "/Services"
      },
      "get": {
        "description": "Retrieve a specific environment.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to fetch the Environment resource from.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the Environment resource to fetch.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ZE[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.environment"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchEnvironment",
        "x-maturity": [
          "Beta"
        ]
      },
      "delete": {
        "description": "Delete a specific environment.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to delete the Environment resource from.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the Environment resource to delete.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ZE[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteEnvironment",
        "x-maturity": [
          "Beta"
        ]
      }
    },
    "/v1/Services/{ServiceSid}/Functions": {
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "description": "A wrapper that represents a Serverless JavaScript function and groups the different  and groups the different Versions of this code.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "friendly_name",
          "date_created"
        ],
        "pathType": "list",
        "parent": "/Services"
      },
      "get": {
        "description": "Retrieve a list of all Functions.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to read the Function resources from.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListFunctionResponse",
                  "properties": {
                    "functions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/serverless.v1.service.function"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListFunction",
        "x-maturity": [
          "Beta"
        ]
      },
      "post": {
        "description": "Create a new Function resource.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to create the Function resource under.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.function"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateFunction",
        "x-maturity": [
          "Beta"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateFunctionRequest",
                "properties": {
                  "FriendlyName": {
                    "type": "string",
                    "description": "A descriptive string that you create to describe the Function resource. It can be a maximum of 255 characters."
                  }
                },
                "required": [
                  "FriendlyName"
                ]
              }
            }
          }
        }
      }
    },
    "/v1/Services/{ServiceSid}/Functions/{Sid}": {
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "description": "A wrapper that represents a Serverless JavaScript function and groups the different  and groups the different Versions of this code.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "friendly_name",
          "date_created"
        ],
        "pathType": "instance",
        "parent": "/Services"
      },
      "get": {
        "description": "Retrieve a specific Function resource.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to fetch the Function resource from.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the Function resource to fetch.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ZH[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.function"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchFunction",
        "x-maturity": [
          "Beta"
        ]
      },
      "delete": {
        "description": "Delete a Function resource.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to delete the Function resource from.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the Function resource to delete.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ZH[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteFunction",
        "x-maturity": [
          "Beta"
        ]
      },
      "post": {
        "description": "Update a specific Function resource.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to update the Function resource from.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the Function resource to update.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ZH[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.function"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateFunction",
        "x-maturity": [
          "Beta"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateFunctionRequest",
                "properties": {
                  "FriendlyName": {
                    "type": "string",
                    "description": "A descriptive string that you create to describe the Function resource. It can be a maximum of 255 characters."
                  }
                },
                "required": [
                  "FriendlyName"
                ]
              }
            }
          }
        }
      }
    },
    "/v1/Services/{ServiceSid}/Functions/{FunctionSid}/Versions": {
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "description": "The content of a Function.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "path",
          "visibility",
          "date_created"
        ],
        "pathType": "list",
        "parent": "/Services/{ServiceSid}/Functions",
        "className": "function_version"
      },
      "get": {
        "description": "Retrieve a list of all Function Version resources.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to read the Function Version resources from.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "FunctionSid",
            "in": "path",
            "description": "The SID of the function that is the parent of the Function Version resources to read.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ZH[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListFunctionVersionResponse",
                  "properties": {
                    "function_versions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/serverless.v1.service.function.function_version"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListFunctionVersion",
        "x-maturity": [
          "Beta"
        ]
      }
    },
    "/v1/Services/{ServiceSid}/Functions/{FunctionSid}/Versions/{Sid}": {
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "description": "The content of a Function.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "path",
          "visibility",
          "date_created"
        ],
        "pathType": "instance",
        "parent": "/Services/{ServiceSid}/Functions",
        "className": "function_version"
      },
      "get": {
        "description": "Retrieve a specific Function Version resource.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to fetch the Function Version resource from.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "FunctionSid",
            "in": "path",
            "description": "The SID of the function that is the parent of the Function Version resource to fetch.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ZH[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the Function Version resource to fetch.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ZN[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.function.function_version"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchFunctionVersion",
        "x-maturity": [
          "Beta"
        ]
      }
    },
    "/v1/Services/{ServiceSid}/Functions/{FunctionSid}/Versions/{Sid}/Content": {
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "description": "The code of a Function Version.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "content"
        ],
        "pathType": "instance",
        "parent": "/Services/{ServiceSid}/Functions/{FunctionSid}/Versions",
        "className": "function_version_content"
      },
      "get": {
        "description": "Retrieve a the content of a specific Function Version resource.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to fetch the Function Version content from.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "FunctionSid",
            "in": "path",
            "description": "The SID of the Function that is the parent of the Function Version content to fetch.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ZH[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the Function Version content to fetch.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ZN[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.function.function_version.function_version_content"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchFunctionVersionContent",
        "x-maturity": [
          "Beta"
        ]
      }
    },
    "/v1/Services/{ServiceSid}/Environments/{EnvironmentSid}/Logs": {
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "description": "A record of an event that occurred related to a function invocation.",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "list",
        "parent": "/Services/{ServiceSid}/Environments"
      },
      "get": {
        "description": "Retrieve a list of all logs.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to read the Log resource from.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "EnvironmentSid",
            "in": "path",
            "description": "The SID of the environment with the Log resources to read.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ZE[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "FunctionSid",
            "in": "query",
            "description": "The SID of the function whose invocation produced the Log resources to read.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ZH[0-9a-fA-F]{32}$"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "The date/time (in GMT, ISO 8601) after which the Log resources must have been created. Defaults to 1 day prior to current date/time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "The date/time (in GMT, ISO 8601) before which the Log resources must have been created. Defaults to current date/time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListLogResponse",
                  "properties": {
                    "logs": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/serverless.v1.service.environment.log"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListLog",
        "x-maturity": [
          "Beta"
        ]
      }
    },
    "/v1/Services/{ServiceSid}/Environments/{EnvironmentSid}/Logs/{Sid}": {
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "description": "A record of an event that occurred related to a function invocation.",
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "instance",
        "parent": "/Services/{ServiceSid}/Environments"
      },
      "get": {
        "description": "Retrieve a specific log.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to fetch the Log resource from.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "EnvironmentSid",
            "in": "path",
            "description": "The SID of the environment with the Log resource to fetch.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ZE[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the Log resource to fetch.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^NO[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.environment.log"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchLog",
        "x-maturity": [
          "Beta"
        ]
      }
    },
    "/v1/Services": {
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "description": "The top-level resource for a Serverless application, which serves as a container for the application environments.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "unique_name",
          "friendly_name"
        ],
        "pathType": "list"
      },
      "get": {
        "description": "Retrieve a list of all Services.",
        "parameters": [
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListServiceResponse",
                  "properties": {
                    "services": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/serverless.v1.service"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListService",
        "x-maturity": [
          "Beta"
        ]
      },
      "post": {
        "description": "Create a new Service resource.",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateService",
        "x-maturity": [
          "Beta"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateServiceRequest",
                "properties": {
                  "UniqueName": {
                    "type": "string",
                    "description": "A user-defined string that uniquely identifies the Service resource. It can be used as an alternative to the `sid` in the URL path to address the Service resource. This value must be 50 characters or less in length and be unique."
                  },
                  "FriendlyName": {
                    "type": "string",
                    "description": "A descriptive string that you create to describe the Service resource. It can be a maximum of 255 characters."
                  },
                  "IncludeCredentials": {
                    "type": "boolean",
                    "description": "Whether to inject Account credentials into a function invocation context. The default value is `true`."
                  },
                  "UiEditable": {
                    "type": "boolean",
                    "description": "Whether the Service's properties and subresources can be edited via the UI. The default value is `false`."
                  }
                },
                "required": [
                  "UniqueName",
                  "FriendlyName"
                ]
              }
            }
          }
        }
      }
    },
    "/v1/Services/{Sid}": {
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "description": "The top-level resource for a Serverless application, which serves as a container for the application environments.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "unique_name",
          "friendly_name"
        ],
        "pathType": "instance"
      },
      "get": {
        "description": "Retrieve a specific Service resource.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The `sid` or `unique_name` of the Service resource to fetch.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchService",
        "x-maturity": [
          "Beta"
        ]
      },
      "delete": {
        "description": "Delete a Service resource.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The `sid` or `unique_name` of the Service resource to delete.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteService",
        "x-maturity": [
          "Beta"
        ]
      },
      "post": {
        "description": "Update a specific Service resource.",
        "parameters": [
          {
            "name": "Sid",
            "in": "path",
            "description": "The `sid` or `unique_name` of the Service resource to update.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateService",
        "x-maturity": [
          "Beta"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateServiceRequest",
                "properties": {
                  "IncludeCredentials": {
                    "type": "boolean",
                    "description": "Whether to inject Account credentials into a function invocation context."
                  },
                  "FriendlyName": {
                    "type": "string",
                    "description": "A descriptive string that you create to describe the Service resource. It can be a maximum of 255 characters."
                  },
                  "UiEditable": {
                    "type": "boolean",
                    "description": "Whether the Service resource's properties and subresources can be edited via the UI. The default value is `false`."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/Services/{ServiceSid}/Environments/{EnvironmentSid}/Variables": {
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "description": "A key and value pair that is specific to an Environment.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "key",
          "date_created"
        ],
        "pathType": "list",
        "parent": "/Services/{ServiceSid}/Environments"
      },
      "get": {
        "description": "Retrieve a list of all Variables.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to read the Variable resources from.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "EnvironmentSid",
            "in": "path",
            "description": "The SID of the Environment with the Variable resources to read.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ZE[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ListVariableResponse",
                  "properties": {
                    "variables": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/serverless.v1.service.environment.variable"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "first_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "next_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "ListVariable",
        "x-maturity": [
          "Beta"
        ]
      },
      "post": {
        "description": "Create a new Variable.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to create the Variable resource under.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "EnvironmentSid",
            "in": "path",
            "description": "The SID of the Environment in which the Variable resource exists.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ZE[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.environment.variable"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "CreateVariable",
        "x-maturity": [
          "Beta"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateVariableRequest",
                "properties": {
                  "Key": {
                    "type": "string",
                    "description": "A string by which the Variable resource can be referenced. It can be a maximum of 128 characters."
                  },
                  "Value": {
                    "type": "string",
                    "description": "A string that contains the actual value of the Variable. It can be a maximum of 450 bytes in size."
                  }
                },
                "required": [
                  "Key",
                  "Value"
                ]
              }
            }
          }
        }
      }
    },
    "/v1/Services/{ServiceSid}/Environments/{EnvironmentSid}/Variables/{Sid}": {
      "servers": [
        {
          "url": "https://serverless.twilio.com"
        }
      ],
      "description": "A key and value pair that is specific to an Environment.",
      "x-twilio": {
        "defaultOutputProperties": [
          "sid",
          "key",
          "date_created"
        ],
        "pathType": "instance",
        "parent": "/Services/{ServiceSid}/Environments"
      },
      "get": {
        "description": "Retrieve a specific Variable.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to fetch the Variable resource from.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "EnvironmentSid",
            "in": "path",
            "description": "The SID of the Environment with the Variable resource to fetch.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ZE[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the Variable resource to fetch.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ZV[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.environment.variable"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "FetchVariable",
        "x-maturity": [
          "Beta"
        ]
      },
      "post": {
        "description": "Update a specific Variable.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to update the Variable resource under.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "EnvironmentSid",
            "in": "path",
            "description": "The SID of the Environment with the Variable resource to update.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ZE[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the Variable resource to update.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ZV[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverless.v1.service.environment.variable"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "UpdateVariable",
        "x-maturity": [
          "Beta"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "UpdateVariableRequest",
                "properties": {
                  "Key": {
                    "type": "string",
                    "description": "A string by which the Variable resource can be referenced. It can be a maximum of 128 characters."
                  },
                  "Value": {
                    "type": "string",
                    "description": "A string that contains the actual value of the Variable. It can be a maximum of 450 bytes in size."
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a specific Variable.",
        "parameters": [
          {
            "name": "ServiceSid",
            "in": "path",
            "description": "The SID of the Service to delete the Variable resource from.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "EnvironmentSid",
            "in": "path",
            "description": "The SID of the Environment with the Variables to delete.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ZE[0-9a-fA-F]{32}$"
            },
            "required": true
          },
          {
            "name": "Sid",
            "in": "path",
            "description": "The SID of the Variable resource to delete.",
            "schema": {
              "type": "string",
              "minLength": 34,
              "maxLength": 34,
              "pattern": "^ZV[0-9a-fA-F]{32}$"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "operationId": "DeleteVariable",
        "x-maturity": [
          "Beta"
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://serverless.twilio.com"
    }
  ],
  "x-maturity": [
    {
      "name": "Beta",
      "description": "PLEASE NOTE that this is a Beta product that is subject to change. Use it with caution."
    }
  ]
}