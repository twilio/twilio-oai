{
  "security": [
    {
      "accountSid_authToken": []
    }
  ],
  "openapi": "3.0.1",
  "info": {
    "title": "User OAuth API",
    "description": "User OAuth API",
    "termsOfService": "https://www.twilio.com/legal/tos",
    "contact": {
      "name": "Twilio Support",
      "url": "https://support.twilio.com",
      "email": "support@twilio.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://oauth.twilio.com"
    }
  ],
  "paths": {
    "/v2/token": {
      "x-twilio": {
        "defaultOutputProperties": [],
        "pathType": "list"
      },
      "post": {
        "security": [],
        "tags": [
          "OauthV2Token"
        ],
        "summary": "Issues a new Access token (optionally identity_token & refresh_token) in exchange of Oauth grant",
        "operationId": "CreateOauth2Token",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "title": "CreateTokenRequest",
                "properties": {
                  "grant_type": {
                    "type": "string",
                    "description": "Grant type is a credential representing resource owner's authorization which can be used by client to obtain access token."
                  },
                  "client_id": {
                    "type": "string",
                    "description": "A 34 character string that uniquely identifies this OAuth App."
                  },
                  "client_secret": {
                    "type": "string",
                    "description": "The credential for confidential OAuth App."
                  },
                  "code": {
                    "type": "string",
                    "description": "JWT token related to the authorization code grant type."
                  },
                  "redirect_uri": {
                    "type": "string",
                    "description": "The redirect uri"
                  },
                  "audience": {
                    "type": "string",
                    "description": "The targeted audience uri"
                  },
                  "refresh_token": {
                    "type": "string",
                    "description": "JWT token related to refresh access token."
                  },
                  "scope": {
                    "type": "string",
                    "description": "The scope of token"
                  }
                }
              },
              "examples": {
                "create": {
                  "value": {
                    "client_id": "OQ7cda1a615f05a95634e643aaaf7081d7",
                    "client_secret": "sUWblrQ4wx_aYkdAWjHXNvHinynkYOgBoiRyEQUeEntpgDEG47qnBFD98yoEzsTh",
                    "grant_type": "client_credentials",
                    "redirect_uri": "",
                    "audience": "",
                    "code": "",
                    "refresh_token": "refresh_token",
                    "scope": "scope"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V2Oauth2TokenResponse"
                },
                "examples": {
                  "create": {
                    "value": {
                      "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
                      "refresh_token": "ghjbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
                      "id_token": "eyJhbdGciOiIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
                      "expires_in": 1438315200000,
                      "token_type": "bearer"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "$ref": "#/components/responses/ErrorClientErrorResponse"
          },
          "500": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "accountSid_authToken": {
        "scheme": "basic",
        "type": "http"
      },
      "v2_oauth2_client_credentials": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://oauth.twilio.com/v2/token",
            "scopes": {}
          }
        }
      }
    },
    "schemas": {
      "Auth0SignupRequest": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "deeplink": {
            "type": "string"
          },
          "organizationSid": {
            "pattern": "OR[0-9a-f]{32}",
            "type": "string",
            "format": "OrganizationSid",
            "example": "ORbfd75767416fbd8418bedafce743700a"
          },
          "notificationSid": {
            "pattern": "NF[0-9a-f]{32}",
            "type": "string",
            "format": "IdentityNotificationSid",
            "example": "NFbfd75767416fbd8418bedafce743700a"
          },
          "oneConsole": {
            "type": "boolean"
          }
        }
      },
      "Auth0AuthenticationCodeExchangeRequest": {
        "required": [
          "authorizationCode"
        ],
        "type": "object",
        "properties": {
          "authorizationCode": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "codeVerifier": {
            "type": "string"
          },
          "nonce": {
            "type": "string"
          }
        }
      },
      "Auth0AuthorizeResponse": {
        "required": [
          "redirect"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "redirect": {
            "type": "string"
          },
          "isSso": {
            "type": "boolean"
          }
        }
      },
      "Auth0TokenResponse": {
        "required": [
          "accessToken",
          "idToken",
          "authContext",
          "isPurgatory"
        ],
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "idToken": {
            "type": "string"
          },
          "authContext": {
            "type": "string"
          },
          "isPurgatory": {
            "type": "boolean"
          }
        }
      },
      "Auth0RefreshScopedTokenRequest": {
        "type": "object",
        "properties": {
          "accountSid": {
            "type": "string",
            "minLength": 34,
            "maxLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "description": "The SID of the account to be authorized for the user."
          },
          "authorizationContext": {
            "type": "string",
            "enum": [
              "account",
              "user",
              "organization"
            ]
          }
        }
      },
      "Auth0RefreshTokenResponse": {
        "required": [
          "accessToken"
        ],
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          }
        }
      },
      "Auth0LoginEmailRequest": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "callbackUri": {
            "type": "string"
          }
        }
      },
      "Auth0TestLoginRequest": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "Auth0TestLoginResponse": {
        "required": [
          "accessToken"
        ],
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "idToken": {
            "type": "string"
          }
        }
      },
      "V2Oauth2TokenResponse": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "nullable": true,
            "description": "Token which carries the necessary information to access a Twilio resource directly."
          },
          "refresh_token": {
            "type": "string",
            "nullable": true,
            "description": "Token which carries the information necessary to get a new access token."
          },
          "id_token": {
            "type": "string",
            "nullable": true,
            "description": "Token which carries the information necessary of user profile."
          },
          "token_type": {
            "type": "string",
            "nullable": true,
            "description": "Token type"
          },
          "expires_in": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "Error": {
        "description": "Generic error",
        "type": "object",
        "properties": {
          "code": {
            "description": "Twilio-specific error code",
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "description": "Error message",
            "type": "string"
          },
          "more_info": {
            "description": "Link to Error Code References",
            "type": "string"
          },
          "status": {
            "description": "HTTP response status code",
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "responses": {
      "ErrorClientErrorResponse": {
        "description": "Client provided invalid parameters response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "client_error": {
                "value": {
                  "code": 400,
                  "message": "bad request",
                  "more_info": "https://www.twilio.com/docs/errors/400",
                  "status": 400
                }
              }
            }
          }
        }
      },
      "ErrorResponse": {
        "description": "Generic error response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "internal_server_error": {
                "value": {
                  "code": 20500,
                  "message": "internal server error",
                  "more_info": "https://www.twilio.com/docs/errors/20500",
                  "status": 500
                }
              }
            }
          }
        }
      }
    }
  }
}