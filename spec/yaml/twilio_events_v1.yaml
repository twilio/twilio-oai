components:
  schemas:
    events.v1.event_type:
      type: object
      properties:
        date_created:
          type: string
          format: date-time
          nullable: true
          description: The date this Event Type was created.
        date_updated:
          type: string
          format: date-time
          nullable: true
          description: The date this Event Type was updated.
        description:
          description: Event Type description.
          nullable: true
          type: string
        links:
          format: uri-map
          nullable: true
          type: object
        schema_id:
          description: The Schema identifier for this Event Type.
          nullable: true
          type: string
        type:
          description: The Event Type identifier.
          nullable: true
          type: string
        url:
          description: The URL of this resource.
          format: uri
          nullable: true
          type: string
    events.v1.schema:
      type: object
      properties:
        id:
          description: Schema Identifier.
          nullable: true
          type: string
        latest_version:
          description: Latest schema version.
          nullable: true
          type: integer
        latest_version_date_created:
          type: string
          format: date-time
          nullable: true
          description: The date that the latest schema version was created.
        links:
          description: Nested resource URLs.
          format: uri-map
          nullable: true
          type: object
        url:
          description: The URL of this resource.
          format: uri
          nullable: true
          type: string
    events.v1.schema.schema_version:
      type: object
      properties:
        date_created:
          type: string
          format: date-time
          nullable: true
          description: The date the schema version was created.
        id:
          description: The unique identifier of the schema.
          nullable: true
          type: string
        raw:
          format: uri
          nullable: true
          type: string
        schema_version:
          description: The version of this schema.
          nullable: true
          type: integer
        url:
          description: The URL of this resource.
          format: uri
          nullable: true
          type: string
    events.v1.sink:
      type: object
      properties:
        date_created:
          type: string
          format: date-time
          nullable: true
          description: The date this Sink was created
        date_updated:
          type: string
          format: date-time
          nullable: true
          description: The date this Sink was updated
        description:
          description: Sink Description
          nullable: true
          type: string
        links:
          description: Nested resource URLs.
          format: uri-map
          nullable: true
          type: object
        sid:
          type: string
          minLength: 34
          maxLength: 34
          pattern: ^DG[0-9a-fA-F]{32}$
          nullable: true
          description: A string that uniquely identifies this Sink.
        sink_configuration:
          nullable: true
          description: JSON Sink configuration.
        sink_type:
          type: string
          $ref: '#/components/schemas/sink_enum_sink_type'
          nullable: true
          description: Sink type.
        status:
          type: string
          $ref: '#/components/schemas/sink_enum_status'
          nullable: true
          description: The Status of this Sink
        url:
          description: The URL of this resource.
          format: uri
          nullable: true
          type: string
    sink_enum_status:
      enum:
      - initialized
      - validating
      - active
      - failed
      type: string
    sink_enum_sink_type:
      enum:
      - kinesis
      - webhook
      - segment
      type: string
    events.v1.sink.sink_test:
      type: object
      properties:
        result:
          description: Feedback indicating whether the test event was generated.
          nullable: true
          type: string
    events.v1.sink.sink_validate:
      type: object
      properties:
        result:
          description: Feedback indicating whether the given Sink was validated.
          nullable: true
          type: string
    events.v1.subscription.subscribed_event:
      type: object
      properties:
        account_sid:
          type: string
          minLength: 34
          maxLength: 34
          pattern: ^AC[0-9a-fA-F]{32}$
          nullable: true
          description: Account SID.
        schema_version:
          description: The schema version that the subscription should use.
          nullable: true
          type: integer
        subscription_sid:
          type: string
          minLength: 34
          maxLength: 34
          pattern: ^DF[0-9a-fA-F]{32}$
          nullable: true
          description: Subscription SID.
        type:
          description: Type of event being subscribed to.
          nullable: true
          type: string
        url:
          description: The URL of this resource.
          format: uri
          nullable: true
          type: string
    events.v1.subscription:
      type: object
      properties:
        account_sid:
          type: string
          minLength: 34
          maxLength: 34
          pattern: ^AC[0-9a-fA-F]{32}$
          nullable: true
          description: Account SID.
        date_created:
          type: string
          format: date-time
          nullable: true
          description: The date this Subscription was created
        date_updated:
          type: string
          format: date-time
          nullable: true
          description: The date this Subscription was updated
        description:
          description: Subscription description
          nullable: true
          type: string
        links:
          description: Nested resource URLs.
          format: uri-map
          nullable: true
          type: object
        sid:
          type: string
          minLength: 34
          maxLength: 34
          pattern: ^DF[0-9a-fA-F]{32}$
          nullable: true
          description: A string that uniquely identifies this Subscription.
        sink_sid:
          type: string
          minLength: 34
          maxLength: 34
          pattern: ^DG[0-9a-fA-F]{32}$
          nullable: true
          description: Sink SID.
        url:
          description: The URL of this resource.
          format: uri
          nullable: true
          type: string
  securitySchemes:
    accountSid_authToken:
      scheme: basic
      type: http
info:
  contact:
    email: support@twilio.com
    name: Twilio Support
    url: https://support.twilio.com
  description: This is the public Twilio REST API.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://www.twilio.com/legal/tos
  title: Twilio - Events
  version: 1.32.0
openapi: 3.0.1
paths:
  /v1/Types:
    servers:
    - url: https://events.twilio.com
    description: Event Types available
    x-twilio:
      defaultOutputProperties:
      - type
      - schema_id
      - description
      pathType: list
      className: event_type
    get:
      description: Retrieve a paginated list of all the available Event Types.
      operationId: ListEventType
      parameters:
      - description: A string parameter filtering the results to return only the Event
          Types using a given schema.
        in: query
        name: SchemaId
        schema:
          type: string
      - description: How many resources to return in each list page. The default is
          50, and the maximum is 1000.
        in: query
        name: PageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                title: ListEventTypeResponse
                properties:
                  types:
                    type: array
                    items:
                      $ref: '#/components/schemas/events.v1.event_type'
                  meta:
                    type: object
                    properties:
                      first_page_url:
                        format: uri
                        type: string
                      next_page_url:
                        format: uri
                        type: string
                      page:
                        type: integer
                      page_size:
                        type: integer
                      previous_page_url:
                        format: uri
                        type: string
                      url:
                        format: uri
                        type: string
                      key:
                        type: string
          description: OK
      security:
      - accountSid_authToken: []
      x-maturity:
      - Beta
  /v1/Types/{Type}:
    servers:
    - url: https://events.twilio.com
    description: Event Types available
    x-twilio:
      defaultOutputProperties:
      - type
      - schema_id
      - description
      pathType: instance
      className: event_type
    get:
      description: Fetch a specific Event Type.
      operationId: FetchEventType
      parameters:
      - description: A string that uniquely identifies this Event Type.
        in: path
        name: Type
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/events.v1.event_type'
          description: OK
      security:
      - accountSid_authToken: []
      x-maturity:
      - Beta
  /v1/Schemas/{Id}:
    servers:
    - url: https://events.twilio.com
    description: Versioned Schema definitions for Event Types
    x-twilio:
      defaultOutputProperties:
      - id
      pathType: instance
    get:
      description: Fetch a specific schema with its nested versions.
      operationId: FetchSchema
      parameters:
      - description: The unique identifier of the schema. Each schema can have multiple
          versions, that share the same id.
        in: path
        name: Id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/events.v1.schema'
          description: OK
      security:
      - accountSid_authToken: []
      x-maturity:
      - Beta
  /v1/Schemas:
    servers:
    - url: https://events.twilio.com
    description: Versioned Schema definitions for Event Types
    x-twilio:
      defaultOutputProperties:
      - id
      pathType: list
  /v1/Schemas/{Id}/Versions:
    servers:
    - url: https://events.twilio.com
    description: Version of the Schema
    x-twilio:
      defaultOutputProperties:
      - id
      - schema_version
      - date_created
      pathType: list
      parent: /Schemas
      className: schema_version
    get:
      description: Retrieve a paginated list of versions of the schema.
      operationId: ListSchemaVersion
      parameters:
      - description: The unique identifier of the schema. Each schema can have multiple
          versions, that share the same id.
        in: path
        name: Id
        required: true
        schema:
          type: string
      - description: How many resources to return in each list page. The default is
          50, and the maximum is 1000.
        in: query
        name: PageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                title: ListSchemaVersionResponse
                properties:
                  schema_versions:
                    type: array
                    items:
                      $ref: '#/components/schemas/events.v1.schema.schema_version'
                  meta:
                    type: object
                    properties:
                      first_page_url:
                        format: uri
                        type: string
                      next_page_url:
                        format: uri
                        type: string
                      page:
                        type: integer
                      page_size:
                        type: integer
                      previous_page_url:
                        format: uri
                        type: string
                      url:
                        format: uri
                        type: string
                      key:
                        type: string
          description: OK
      security:
      - accountSid_authToken: []
      x-maturity:
      - Beta
  /v1/Schemas/{Id}/Versions/{SchemaVersion}:
    servers:
    - url: https://events.twilio.com
    description: Version of the Schema
    x-twilio:
      defaultOutputProperties:
      - id
      - schema_version
      - date_created
      pathType: instance
      parent: /Schemas
      className: schema_version
    get:
      description: Fetch a specific schema and version.
      operationId: FetchSchemaVersion
      parameters:
      - description: The unique identifier of the schema. Each schema can have multiple
          versions, that share the same id.
        in: path
        name: Id
        required: true
        schema:
          type: string
      - description: The version of the schema
        in: path
        name: SchemaVersion
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/events.v1.schema.schema_version'
          description: OK
      security:
      - accountSid_authToken: []
      x-maturity:
      - Beta
  /v1/Sinks/{Sid}:
    servers:
    - url: https://events.twilio.com
    description: Sink destination to send events to
    x-twilio:
      defaultOutputProperties:
      - date_created
      - date_updated
      - description
      - sid
      - sink_configuration
      - sink_type
      - status
      pathType: instance
    get:
      description: Fetch a specific Sink.
      operationId: FetchSink
      parameters:
      - description: A 34 character string that uniquely identifies this Sink.
        in: path
        name: Sid
        required: true
        schema:
          type: string
          minLength: 34
          maxLength: 34
          pattern: ^DG[0-9a-fA-F]{32}$
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/events.v1.sink'
          description: OK
      security:
      - accountSid_authToken: []
      x-maturity:
      - Beta
    delete:
      description: Delete a specific Sink.
      operationId: DeleteSink
      parameters:
      - description: A 34 character string that uniquely identifies this Sink.
        in: path
        name: Sid
        required: true
        schema:
          type: string
          minLength: 34
          maxLength: 34
          pattern: ^DG[0-9a-fA-F]{32}$
      responses:
        '204':
          description: The resource was deleted successfully.
      security:
      - accountSid_authToken: []
      x-maturity:
      - Beta
    post:
      description: Update a specific Sink
      operationId: UpdateSink
      parameters:
      - description: A 34 character string that uniquely identifies this Sink.
        in: path
        name: Sid
        required: true
        schema:
          type: string
          minLength: 34
          maxLength: 34
          pattern: ^DG[0-9a-fA-F]{32}$
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                Description:
                  description: A human readable description for the Sink **This value
                    should not contain PII.**
                  type: string
              required:
              - Description
              title: UpdateSinkRequest
              type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/events.v1.sink'
          description: OK
      security:
      - accountSid_authToken: []
      x-maturity:
      - Beta
  /v1/Sinks:
    servers:
    - url: https://events.twilio.com
    description: Sink destination to send events to
    x-twilio:
      defaultOutputProperties:
      - date_created
      - date_updated
      - description
      - sid
      - sink_configuration
      - sink_type
      - status
      pathType: list
    post:
      description: Create a new Sink
      operationId: CreateSink
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                Description:
                  description: A human readable description for the Sink **This value
                    should not contain PII.**
                  type: string
                SinkConfiguration:
                  description: The information required for Twilio to connect to the
                    provided Sink encoded as JSON.
                SinkType:
                  type: string
                  $ref: '#/components/schemas/sink_enum_sink_type'
                  description: The Sink type. Can only be "kinesis" or "webhook" currently.
              required:
              - Description
              - SinkConfiguration
              - SinkType
              title: CreateSinkRequest
              type: object
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/events.v1.sink'
          description: Created
      security:
      - accountSid_authToken: []
      x-maturity:
      - Beta
    get:
      description: Retrieve a paginated list of Sinks belonging to the account used
        to make the request.
      operationId: ListSink
      parameters:
      - description: A boolean query parameter filtering the results to return sinks
          used/not used by a subscription.
        in: query
        name: InUse
        schema:
          type: boolean
      - description: A String query parameter filtering the results by status `initialized`,
          `validating`, `active` or `failed`.
        in: query
        name: Status
        schema:
          type: string
      - description: How many resources to return in each list page. The default is
          50, and the maximum is 1000.
        in: query
        name: PageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                title: ListSinkResponse
                properties:
                  sinks:
                    type: array
                    items:
                      $ref: '#/components/schemas/events.v1.sink'
                  meta:
                    type: object
                    properties:
                      first_page_url:
                        format: uri
                        type: string
                      next_page_url:
                        format: uri
                        type: string
                      page:
                        type: integer
                      page_size:
                        type: integer
                      previous_page_url:
                        format: uri
                        type: string
                      url:
                        format: uri
                        type: string
                      key:
                        type: string
          description: OK
      security:
      - accountSid_authToken: []
      x-maturity:
      - Beta
  /v1/Sinks/{Sid}/Test:
    servers:
    - url: https://events.twilio.com
    description: Test sink
    x-twilio:
      defaultOutputProperties:
      - result
      pathType: list
      parent: /Sinks
      className: sink_test
    post:
      description: Create a new Sink Test Event for the given Sink.
      operationId: CreateSinkTest
      parameters:
      - description: A 34 character string that uniquely identifies the Sink to be
          Tested.
        in: path
        name: Sid
        required: true
        schema:
          type: string
          minLength: 34
          maxLength: 34
          pattern: ^DG[0-9a-fA-F]{32}$
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/events.v1.sink.sink_test'
          description: Created
      security:
      - accountSid_authToken: []
      x-maturity:
      - Beta
  /v1/Sinks/{Sid}/Validate:
    servers:
    - url: https://events.twilio.com
    description: Validate sink
    x-twilio:
      defaultOutputProperties:
      - result
      pathType: list
      parent: /Sinks
      className: sink_validate
    post:
      description: Validate that a test event for a Sink was received.
      operationId: CreateSinkValidate
      parameters:
      - description: A 34 character string that uniquely identifies the Sink being
          validated.
        in: path
        name: Sid
        required: true
        schema:
          type: string
          minLength: 34
          maxLength: 34
          pattern: ^DG[0-9a-fA-F]{32}$
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                TestId:
                  description: A 34 character string that uniquely identifies the
                    test event for a Sink being validated.
                  type: string
              required:
              - TestId
              title: CreateSinkValidateRequest
              type: object
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/events.v1.sink.sink_validate'
          description: Created
      security:
      - accountSid_authToken: []
      x-maturity:
      - Beta
  /v1/Subscriptions/{SubscriptionSid}/SubscribedEvents:
    servers:
    - url: https://events.twilio.com
    description: Event subscribed to in the parent subscription
    x-twilio:
      defaultOutputProperties:
      - type
      - schema_version
      - account_sid
      - subscription_sid
      pathType: list
      parent: /Subscriptions
    get:
      description: Retrieve a list of all Subscribed Event types for a Subscription.
      operationId: ListSubscribedEvent
      parameters:
      - description: The unique SID identifier of the Subscription.
        in: path
        name: SubscriptionSid
        required: true
        schema:
          type: string
          minLength: 34
          maxLength: 34
          pattern: ^DF[0-9a-fA-F]{32}$
      - description: How many resources to return in each list page. The default is
          50, and the maximum is 1000.
        in: query
        name: PageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                title: ListSubscribedEventResponse
                properties:
                  types:
                    type: array
                    items:
                      $ref: '#/components/schemas/events.v1.subscription.subscribed_event'
                  meta:
                    type: object
                    properties:
                      first_page_url:
                        format: uri
                        type: string
                      next_page_url:
                        format: uri
                        type: string
                      page:
                        type: integer
                      page_size:
                        type: integer
                      previous_page_url:
                        format: uri
                        type: string
                      url:
                        format: uri
                        type: string
                      key:
                        type: string
          description: OK
      security:
      - accountSid_authToken: []
      x-maturity:
      - Beta
    post:
      description: Create a new Subscribed Event type for the subscription
      operationId: CreateSubscribedEvent
      parameters:
      - description: The unique SID identifier of the Subscription.
        in: path
        name: SubscriptionSid
        required: true
        schema:
          type: string
          minLength: 34
          maxLength: 34
          pattern: ^DF[0-9a-fA-F]{32}$
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                Type:
                  description: Type of event being subscribed to.
                  type: string
                SchemaVersion:
                  description: The schema version that the subscription should use.
                  type: integer
              required:
              - Type
              title: CreateSubscribedEventRequest
              type: object
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/events.v1.subscription.subscribed_event'
          description: Created
      security:
      - accountSid_authToken: []
      x-maturity:
      - Beta
  /v1/Subscriptions/{SubscriptionSid}/SubscribedEvents/{Type}:
    servers:
    - url: https://events.twilio.com
    description: Event subscribed to in the parent subscription
    x-twilio:
      defaultOutputProperties:
      - type
      - schema_version
      - account_sid
      - subscription_sid
      pathType: instance
      parent: /Subscriptions
    get:
      description: Read an Event for a Subscription.
      operationId: FetchSubscribedEvent
      parameters:
      - description: The unique SID identifier of the Subscription.
        in: path
        name: SubscriptionSid
        required: true
        schema:
          type: string
          minLength: 34
          maxLength: 34
          pattern: ^DF[0-9a-fA-F]{32}$
      - description: Type of event being subscribed to.
        in: path
        name: Type
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/events.v1.subscription.subscribed_event'
          description: OK
      security:
      - accountSid_authToken: []
      x-maturity:
      - Beta
    post:
      description: Update an Event for a Subscription.
      operationId: UpdateSubscribedEvent
      parameters:
      - description: The unique SID identifier of the Subscription.
        in: path
        name: SubscriptionSid
        required: true
        schema:
          type: string
          minLength: 34
          maxLength: 34
          pattern: ^DF[0-9a-fA-F]{32}$
      - description: Type of event being subscribed to.
        in: path
        name: Type
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                SchemaVersion:
                  description: The schema version that the subscription should use.
                  type: integer
              title: UpdateSubscribedEventRequest
              type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/events.v1.subscription.subscribed_event'
          description: OK
      security:
      - accountSid_authToken: []
      x-maturity:
      - Beta
    delete:
      description: Remove an event type from a subscription.
      operationId: DeleteSubscribedEvent
      parameters:
      - description: The unique SID identifier of the Subscription.
        in: path
        name: SubscriptionSid
        required: true
        schema:
          type: string
          minLength: 34
          maxLength: 34
          pattern: ^DF[0-9a-fA-F]{32}$
      - description: Type of event being subscribed to.
        in: path
        name: Type
        required: true
        schema:
          type: string
      responses:
        '204':
          description: The resource was deleted successfully.
      security:
      - accountSid_authToken: []
      x-maturity:
      - Beta
  /v1/Subscriptions:
    servers:
    - url: https://events.twilio.com
    description: Subscription to send Event Types to a Sink
    x-twilio:
      defaultOutputProperties:
      - account_sid
      - sid
      - sink_sid
      - date_created
      - date_updated
      pathType: list
    get:
      description: Retrieve a paginated list of Subscriptions belonging to the account
        used to make the request.
      operationId: ListSubscription
      parameters:
      - description: The SID of the sink that the list of Subscriptions should be
          filtered by.
        in: query
        name: SinkSid
        schema:
          type: string
          minLength: 34
          maxLength: 34
          pattern: ^DG[0-9a-fA-F]{32}$
      - description: How many resources to return in each list page. The default is
          50, and the maximum is 1000.
        in: query
        name: PageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                title: ListSubscriptionResponse
                properties:
                  subscriptions:
                    type: array
                    items:
                      $ref: '#/components/schemas/events.v1.subscription'
                  meta:
                    type: object
                    properties:
                      first_page_url:
                        format: uri
                        type: string
                      next_page_url:
                        format: uri
                        type: string
                      page:
                        type: integer
                      page_size:
                        type: integer
                      previous_page_url:
                        format: uri
                        type: string
                      url:
                        format: uri
                        type: string
                      key:
                        type: string
          description: OK
      security:
      - accountSid_authToken: []
      x-maturity:
      - Beta
    post:
      description: Create a new Subscription.
      operationId: CreateSubscription
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                Description:
                  description: A human readable description for the Subscription **This
                    value should not contain PII.**
                  type: string
                SinkSid:
                  type: string
                  minLength: 34
                  maxLength: 34
                  pattern: ^DG[0-9a-fA-F]{32}$
                  description: The SID of the sink that events selected by this subscription
                    should be sent to. Sink must be active for the subscription to
                    be created.
                Types:
                  type: array
                  items: {}
                  description: An array of objects containing the subscribed Event
                    Types
              required:
              - Description
              - SinkSid
              - Types
              title: CreateSubscriptionRequest
              type: object
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/events.v1.subscription'
          description: Created
      security:
      - accountSid_authToken: []
      x-maturity:
      - Beta
  /v1/Subscriptions/{Sid}:
    servers:
    - url: https://events.twilio.com
    description: Subscription to send Event Types to a Sink
    x-twilio:
      defaultOutputProperties:
      - account_sid
      - sid
      - sink_sid
      - date_created
      - date_updated
      pathType: instance
    get:
      description: Fetch a specific Subscription.
      operationId: FetchSubscription
      parameters:
      - description: A 34 character string that uniquely identifies this Subscription.
        in: path
        name: Sid
        required: true
        schema:
          type: string
          minLength: 34
          maxLength: 34
          pattern: ^DF[0-9a-fA-F]{32}$
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/events.v1.subscription'
          description: OK
      security:
      - accountSid_authToken: []
      x-maturity:
      - Beta
    post:
      description: Update a Subscription.
      operationId: UpdateSubscription
      parameters:
      - description: A 34 character string that uniquely identifies this Subscription.
        in: path
        name: Sid
        required: true
        schema:
          type: string
          minLength: 34
          maxLength: 34
          pattern: ^DF[0-9a-fA-F]{32}$
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                Description:
                  description: A human readable description for the Subscription.
                  type: string
                SinkSid:
                  type: string
                  minLength: 34
                  maxLength: 34
                  pattern: ^DG[0-9a-fA-F]{32}$
                  description: The SID of the sink that events selected by this subscription
                    should be sent to. Sink must be active for the subscription to
                    be created.
              title: UpdateSubscriptionRequest
              type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/events.v1.subscription'
          description: OK
      security:
      - accountSid_authToken: []
      x-maturity:
      - Beta
    delete:
      description: Delete a specific Subscription.
      operationId: DeleteSubscription
      parameters:
      - description: A 34 character string that uniquely identifies this Subscription.
        in: path
        name: Sid
        required: true
        schema:
          type: string
          minLength: 34
          maxLength: 34
          pattern: ^DF[0-9a-fA-F]{32}$
      responses:
        '204':
          description: The resource was deleted successfully.
      security:
      - accountSid_authToken: []
      x-maturity:
      - Beta
servers:
- url: https://events.twilio.com
x-maturity:
- name: Beta
  description: PLEASE NOTE that this is a Beta product that is subject to change.
    Use it with caution.
